<%= turbo_stream_from(:notifications) %>

<script>
function updateModalTitle(judgeId) {
  const checkbox = document.getElementById(`judge_all_${judgeId}`);
  const button = document.getElementById(`submit_${judgeId}`);
  
  if (checkbox.checked) {
    button.value = "Unleash the Kraken!!";
  } else {
    button.value = "Judge Documents";
  }
}
</script>

<%= turbo_frame_tag "modal" %>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2"><i class="bi bi-book"></i> <%= book_title @book %></h1>
  <div class="btn-toolbar mb-2 mb-md-0">
    <div class="btn-group me-2">
      <%= link_to 'New Book', new_book_path, class: "btn btn-sm btn-outline-secondary" %>
    </div>
  </div>
</div>

<%= render 'tabs', book: @book %>

Books organize the query/doc pairs that are needed for evaluating your search queries.
This book consists of <%= @book.query_doc_pairs.select(:query_text).distinct.count %> queries.

<%= render 'judgements/moar_judgements_needed', book: @book %>

<span id="notification-book-<%= @book.id %>"></span>

<%= render 'kraken_unleashed', book: @book if @kraken_unleashed %>

<% if @book.ai_judges.present?  %>
  We have some AI Judges <i class="bi bi-robot"></i>, <i><%= @book.ai_judges.map(&:name).to_sentence %></i> helping us.
  <br/>
<% end %>

<% if @book.import_file.attached? %>
<div class="alert alert-danger" role="alert">
  This book has an upload of data that is currently being processed and is not ready for use yet.
  <br/>
  Import file is  <%=link_to 'available here', rails_blob_path(@book.import_file.blob, only_path: true) %>.
  Status: <%= @book.query_doc_pairs.count %>
  <%= link_to book_path(@book) do %>
    Refresh
    <i
      class="bi arrow-clockwise"
      aria-hidden="true"
    ></i>
  <% end %>

</div>
<% end %>

<% if @book.populate_file.attached? %>
<div class="alert alert-danger" role="alert">
  Currently populating this book with fresh data from a case.
  <br/>
  Status is the book has <%= @book.query_doc_pairs.count %>  query doc pairs.
  <%= link_to book_path(@book) do %>
    <i
      class="bi bi-arrow-clockwise"
      aria-hidden="true"
    ></i>
  <% end %>

</div>
<% end %>

<% if @count_of_anonymous_book_judgements > 0 %>
<div class="alert alert-warning" role="alert">
  This book has <%= @count_of_anonymous_book_judgements %> anonymous judgements that could be mapped to a user.
</div>
<% end %>

<p>
  <strong>Teams:</strong>
  <% @book.teams.each do |team| %>
    <%= link_to team.name, teams_core_path(team) %>
  <% end %>
</p>

<p>
  <strong>Scorer:</strong>
  <%= @book.scorer.name %>
</p>

<p>
  <strong>Selection strategy:</strong>
  <%= @book.selection_strategy.name %>
</p>
<p>
   <%= @book.selection_strategy.description %>
</p>

<p>
  <strong>Supports Implicit Judgements:</strong>
  <%= @book.support_implicit_judgements? %>
</p>

<p>
  <strong>Show Rank of Documents when Judging:</strong>
  <%= @book.show_rank? %>
</p>

<p>
<strong>Related cases:</strong>
<%= render(partial: 'books/case', collection: @cases, as: :kase) || "There are no cases associated." %>
</p>

<p>
  <strong>Associated Files:</strong>
  <% if @book.populate_file.attached? %>
    <%= link_to 'Populate file', rails_blob_path(@book.populate_file.blob, only_path: true) %> made <%= time_ago_in_words @book.populate_file.created_at %> ago.
    <%if @book.populate_job %>
      There is currently a populate job for this book set up.  It is <code><%= @book.populate_job %></code>.
    <% end %>
  <% end %>
  <% if @book.import_file.attached? %>
    <%= link_to 'Import file', rails_blob_path(@book.import_file.blob, only_path: true) %> made <%= time_ago_in_words @book.import_file.created_at %> ago.
    <%if @book.import_job %>
      There is currently a import job for this book set up.  It is <code><%= @book.import_job %></code>.
    <% end %>
  <% end %>
  <% if @book.export_file.attached? %>
    <%if @book.export_job %>
      There is currently a export job for this book set up.  It is <code><%= @book.export_job %></code>.
    <% end %>
    <%= link_to 'Export file', rails_blob_path(@book.export_file.blob, only_path: true) %> made <%= time_ago_in_words @book.export_file.created_at %> ago.
  <% end %>
</p>

<p>
<%= button_to 'Show Judgements', book_judgements_path(@book), method: :get %>

<br>

<%= button_to 'Show Query Doc Pairs', book_query_doc_pairs_path(@book), method: :get %>
</p>

<div class="card" style="">
  <div class="card-body">
    <h5 class="card-title">Export Data</h5>
    <p class="card-text">There are a number of ways to export the Book data.</p>

    <ul class="list-group list-group-flush">
      <li class="list-group-item">Export just the <%= link_to 'judgement data', api_book_judgements_path(@book, format: :csv) %> in CSV format.  This will take a bit but you will download a CSV file, useful for your own analysis.</li>

      <li class="list-group-item">Export the entire Book in JSON format.
        <% if @book.export_job %>
          The book is currently being exported.  The status is <code><%=@book.export_job%></code>.
        <% else %>
          <%= button_to "#{@book.export_file.present? ? 'Re-Export' : 'Export'}", books_export_path(@book), method: :put, data: { turbo: false }, class: "#{@book.export_job.nil? ? '' : 'disabled'}" %>
        <% end %>
        <% if @book.export_file.present? %>
          <p>
          There is an export file created <%= time_ago_in_words @book.export_file.created_at %> ago <%=link_to 'available here', rails_blob_path(@book.export_file.blob, only_path: true) %>.
        </p>
        <% end %>
      </li>
      <li class="list-group-item">
        <p>
          Reference these judgements from a notebook or another system you can use these <%= link_to 'Quepid APIs', apipie_apipie_path %> endpoints:
          <code><%= api_book_judgements_path(@book, format: :csv) %></code> or <code><%= api_export_book_path(@book) %></code>
        </p>

      </li>
    </ul>
  </div>
</div>
