<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">Edit <%= book_title @book %></h1>
  <div class="btn-toolbar mb-2 mb-md-0">
    <div class="btn-group me-2">
      <%= link_to 'New Book', new_book_path, class: "btn btn-sm btn-outline-secondary" %>
      <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
    </div>
    <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
      <span data-feather="calendar" class="align-text-bottom"></span>
      This week
    </button>
  </div>
</div>

<%= render 'form', book: @book %>

<hr/>
<p/>
<h3>Populate This Book from other Books</h3>
<p class="form-text">
  Combine the query/doc pairs and individual ratings from other books into this book.
  It will update any missing query/doc pairs and merge in ratings.
</p>


<%= form_for(@book, url: combine_book_path(@book)) do |form| %>
  <ul class="list-group">  
    <% @current_user.books_involved_with.includes([:scorer,:rated_query_doc_pairs]).where.not(id: @book.id).each do |book| %>
      <li class="list-group-item list-group-item-action">
        <div class="d-flex w-100 justify-content-between align-items-center">        
          <h5 class="mb-1">
            <%= check_box('book_ids', book.id, class: 'form-check-input me-1', disabled: book.rated_query_doc_pairs.empty?) %>
            <label for="book_ids_<%= book.id %>" class="form-check-label stretched">
            <%= book.name %>
            </label>
          </h5>
          <label for="book_ids_<%= book.id %>" class="form-check-label stretched">
          <span class="badge bg-primary rounded-pill"><%= book.rated_query_doc_pairs.count %> rated query/doc pairs</span>
          </label>
        </div>
        <label for="book_ids_<%= book.id %>" class="form-check-label stretched">
          <p class="mb-1">Uses a <%= book.scorer.name %> scorer and <%= book.support_implicit_judgements? ? 'supports':'does not support' %> implicit judgements.</p>
          <small class="text-muted">Updated <%= time_ago_in_words book.updated_at %> ago</small>
        </label>
      </li>
    <% end %>
  </ul>
  <p>
  <div class="actions">
    <%= form.submit 'Merge these Books into this Book' %>
  </div>
  </p>
<% end %>

<hr/>
<div class="alert alert-danger" role="alert">
  Danger Zone!
</div>
<p/>
<h3>Assign Anonymous Judgements & Ratings to a User</h3>

<p class="form-text">
  If you used Quepid before version 7.6, then ratings on the main Case page were all anonymous.
  Those ratings will show up in the book as Anonymous, which means you will have to re-rate them.
  This allows you to map those Anonymous ratings to an existing Judge, both in this book and update the ratings in the Case.
</p>
<p>
<strong>Related cases to be updated:</strong>
<%= render(partial: 'books/case', collection: @book.cases, as: :kase) || "There are no cases associated." %>
</p>
<%= form_for(@book, url: assign_anonymous_book_path(@book)) do |form| %>
<div class="mb-3">
  <%= form.label :assignee_id, class: 'form-label' %>
  <%= select_tag "assignee_id", options_from_collection_for_select(@book.teams.flat_map(&:members).uniq, :id, :name, params.dig(:post, :category_id)), required: true, prompt: "Please select assignee", class: 'form-control' %>
</div>
<p>
<div class="actions">
  <%= form.submit 'Assign Ratings and Judgements' %>
</div>
</p>
<% end %>

<h3>Delete Judgements by User</h3>

<p class="form-text">
  Let's you delete judgements made by a single user. 
</p>
 
<%= form_for(@book, url: delete_ratings_by_assignee_book_path(@book), method: :delete, data: { confirm: "Are you sure?" }) do |form| %>
<div class="mb-3">
  <%= form.label :user_id, class: 'form-label' %>
  <%= select_tag "user_id", options_from_collection_for_select(@book.teams.flat_map(&:members).uniq, :id, :name, params.dig(:post, :category_id)), required: true, prompt: "Please select judge", class: 'form-control' %>
</div>
<p>
<div class="actions">
  <%= form.submit 'Delete Judgements' %>
</div>
</p>
<% end %>

<h3>Delete Query Doc Pairs Below a Rank</h3>

<p class="form-text">
  Did you populate your book too deeply?  Discover you'll never finish rating them?   Here you can delete query doc pairs below a certain rank (position).
</p>
<%= form_for(@book, url: delete_query_doc_pairs_below_position_book_path(@book), method: :delete, data: { confirm: "Are you sure?" }) do |form| %>
<div class="mb-3">
  <%= form.label :position, class: 'form-label' %>
  <%= select_tag "position", options_for_select(@book.query_doc_pairs.distinct.pluck(:position).sort), required: true, prompt: "Please select rank to delete below", class: 'form-control' %>
</div>
<p>
<div class="actions">
  <%= form.submit 'Delete Query Doc Pairs' %>
</div>
</p>
<% end %>

<h3>Assign Rating to Judge Later Judgements</h3>

<p class="form-text">
  Currently it can be easier to skip judgements that you know are good (or bad) using the Judge Later option, and then come back and give them a rating.
</p>
<%= form_for(@book, url: eric_steered_us_wrong_book_path(@book), method: :patch, data: { confirm: "Are you sure?" }) do |form| %>
<div class="mb-3">
  <%= form.label :rating, class: 'form-label' %>
  <%= select_tag "rating", options_for_select(@book.scorer.scale.sort), required: true, prompt: "Please select rating to assign", class: 'form-control' %>
</div>
<p>
<div class="actions">
  <%= form.submit 'Assign Rating and Clear Judge Later' %>
</div>
</p>
<% end %>

<br>

<%= button_to 'Cancel', @book, method: :get %>

<br>

<%= button_to 'Delete Book', @book, method: :delete %>

</div>
