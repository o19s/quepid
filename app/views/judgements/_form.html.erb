<style>
    .field { padding: 5px; }

    .button00 {background-color: #ff0000; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button00:hover { background-color: #ff0000 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button01 {background-color: #fe4000; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button01:hover { background-color: #fe4000 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button02 {background-color: #f96000; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button02:hover { background-color: #f96000 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button03 {background-color: #f17a00; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button03:hover { background-color: #f17a00 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button04 {background-color: #e59100; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button04:hover { background-color: #e59100 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button05 {background-color: #d7a700; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button05:hover { background-color: #d7a700 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button06 {background-color: #c4ba00; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button06:hover { background-color: #c4ba00 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button07 {background-color: #aecd00; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button07:hover { background-color: #aecd00 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button08 {background-color: #91df00; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button08:hover { background-color: #91df00 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button09 {background-color: #6aef00; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button09:hover { background-color: #6aef00 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important;}

    .button10 {background-color: #00ff00; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button10:hover {background-color: #00ff00 !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important; }

    .button-other {background-color:gray; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: #666 !important;}
    .button-other:hover {background-color:gray !important;  box-shadow: 0 12px 16px 0 rgba(0,0,0,0.34), 0 17px 50px 0 rgba(0,0,0,0.19); color: black !important; }

    .btn-preselected { color: black !important; font-weight: bold; font-style: italic; }

    .bold-and-black { color: black; font-weight: bold; }

    .keyboard-shortcuts-td { padding: 5px; text-align: center; color: #999; }
    .padded { padding:5px; }
    .left-aligned { text-align: left; }
    .gray { color: #ccc; }
    .hidden { visibility: hidden!important; display: none!important; }

</style>

<script>

  function rate(rating, key_name) {
      key_down(key_name);
      reset_styles_except(key_name);
      document.getElementById("judgement_rating").value = rating;
      delay(100).then(() => (document.getElementsByName("commit")[0].click()));
  }

  function sleep(ms) {
      return new Promise(resolve => setTimeout(resolve, ms));
  }

  $(document).ready(function() {
      $("#key_pressed_count").text("0");
  });

  var count = 0;
  var last_key_pressed = -1;

  function getRandomInt(max) {
      return Math.floor(Math.random() * max);
  }

  function reset_styles() {
      let keyboard_shortcuts_suffixes = ["a", "s", "d", "f", "g", "h", "j", "k", "l", "sc"];
      keyboard_shortcuts_suffixes.forEach(suffix => {
              $("#span-for-" + suffix).css("color", "gray").css("font-weight", "normal");
              $("#button-for-" + suffix).removeClass("btn-preselected");
          }
      );
  }

  function reset_styles_except(except_suffix){
      let keyboard_shortcuts_suffixes = ["a", "s", "d", "f", "g", "h", "j", "k", "l", "sc"];
      keyboard_shortcuts_suffixes.forEach(suffix => {
              if (suffix !== except_suffix) {
                  $("#span-for-" + suffix).css("color", "gray").css("font-weight", "normal");
                  $("#button-for-" + suffix).removeClass("btn-preselected");
              }
          }
      );
  }

  function key_down(suffix) {
      reset_styles();
      $("#span-for-" + suffix).css("color", "black").css("font-weight", "bold");
      $("#button-for-" + suffix).addClass("btn-preselected");
  }

  function delay(time) {
      return new Promise(resolve => setTimeout(resolve, time));
  }

  function key_pressed(suffix) {
      delay(500).then(() => ($("#button-for-" + suffix).click()));
  }

  $(document).on('keypress', function(e) {
      var tag = e.target.tagName.toLowerCase();

      if (e.which == 97 || e.which == 65) {
          key_pressed("a");
      } else if (e.which == 115 || e.which == 83) {
          key_pressed("s");
      } else if (e.which == 100 || e.which == 68) {
          key_pressed("d");
      } else if (e.which == 102 || e.which == 70) {
          key_pressed("f");
      } else if (e.which == 103 || e.which == 71) {
          key_pressed("g");
      } else if (e.which == 104 || e.which == 72) {
          key_pressed("h");
      } else if (e.which == 106 || e.which == 74) {
          key_pressed("j");
      } else if (e.which == 107 || e.which == 75) {
          key_pressed("k");
      } else if (e.which == 108 || e.which == 76) {
          key_pressed("l");
      } else if (e.which == 59 || e.which == 186) {
          key_pressed("sc");
      }
  });

  $(document).on('keydown', function(e) {
      var tag = e.target.tagName.toLowerCase();

      if (e.which == 97 || e.which == 65) {
          key_down("a");
      } else if (e.which == 115 || e.which == 83) {
          key_down("s");
      } else if (e.which == 100 || e.which == 68) {
          key_down("d");
      } else if (e.which == 102 || e.which == 70) {
          key_down("f");
      } else if (e.which == 103 || e.which == 71) {
          key_down("g");
      } else if (e.which == 104 || e.which == 72) {
          key_down("h");
      } else if (e.which == 106 || e.which == 74) {
          key_down("j");
      } else if (e.which == 107 || e.which == 75) {
          key_down("k");
      } else if (e.which == 108 || e.which == 76) {
          key_down("l");
      } else if (e.which == 59 || e.which == 186) {
          key_down("sc");
      }

  });
</script>

<%


  def calculate_button_class(value, max_value)
    value_f = value.to_f
    max_value_f = max_value.to_f
    if value_f <= 0.0
      return "button00"

    elsif value_f / max_value_f < 0.1
      return "button01"

    elsif value_f / max_value_f < 0.2
      return "button02"

    elsif value_f / max_value_f < 0.3
      return "button03"

    elsif value_f / max_value_f < 0.4
      return "button04"

    elsif value_f / max_value_f < 0.5
      return "button05"

    elsif value_f / max_value_f < 0.6
      return "button06"

    elsif value_f / max_value_f < 0.7
      return "button07"

    elsif value_f / max_value_f < 0.8
      return "button08"

    elsif value_f / max_value_f < 0.9
      return "button09"

    elsif value_f / max_value_f == 1.0
      return "button10"

    else return "button-other"
    end

  end

  def calculate_key(value, max_value)
    if max_value == 1
      if value == 0
        return {"name": "d", "display_name": "d" }
      else
        return {"name": "f", "display_name": "f" }
      end
    end
    if max_value == 3
      if value == 0
        return {"name": "a", "display_name": "a" }
      elsif value == 1
        return {"name": "s", "display_name": "s" }
      elsif value == 2
        return {"name": "d", "display_name": "d" }
      elsif value == 3
        return {"name": "f", "display_name": "f" }
      end
    end

    if max_value == 4
      if value == 1
        return {"name": "a", "display_name": "a" }
      elsif value == 2
        return {"name": "s", "display_name": "s" }
      elsif value == 3
        return {"name": "d", "display_name": "d" }
      elsif value == 4
        return {"name": "f", "display_name": "f" }
      end
    end

    if max_value == 9
      if value == 0
        return {"name": "a", "display_name": "a" }
      elsif value == 1
        return {"name": "s", "display_name": "s" }
      elsif value == 2
        return {"name": "d", "display_name": "d" }
      elsif value == 3
        return {"name": "f", "display_name": "f" }
      elsif value == 4
        return {"name": "g", "display_name": "g" }
      elsif value == 5
        return {"name": "h", "display_name": "h" }
      elsif value == 6
        return {"name": "j", "display_name": "j" }
      elsif value == 7
        return {"name": "k", "display_name": "k" }
      elsif value == 8
        return {"name": "l", "display_name": "l" }
      elsif value == 9
        return {"name": "sc", "display_name": ";" }
      end
    end
    return nil
  end

  @use_backup_labels = false
  @show_keyboard_shortcuts = true

  @rating_buttons = []
  max = @book.scorer.scale.max
  @book.scorer.scale.each do |s|
    rating_button = {}

    rating_button["value"] = s.to_s
    calculated_key = calculate_key(s, max)
    if calculated_key != nil
      rating_button["key"] = calculated_key
    else
      @show_keyboard_shortcuts = false
      rating_button["key"] = rating_button["value"]
    end
    rating_button["label_backup"] = s.to_s
    begin
      rating_button["label"] = @book.scorer.scale_with_labels[s.to_s]
    rescue
      rating_button["label"] = ""
    end
    if rating_button["label"].blank?
      @use_backup_labels = true
      rating_button["label"] = rating_button["label_backup"]
    end
    rating_button["class"] = calculate_button_class(s, max)
    @rating_buttons << rating_button
  end
  if @use_backup_labels
    @rating_buttons.each do |rating_button|
      rating_button["label"] = rating_button["label_backup"]
    end
  end

%>

<%
  @path = ""
  if @judgement.persisted?
    @existing_rating = @judgement.rating
    @query_doc_pair = @judgement.query_doc_pair
    begin
      @path = book_query_doc_pair_judgement_path
    rescue
      controller.redirect_to book_query_doc_pair_judgement_url(@book, @query_doc_pair, @judgement)
    end

  else
    @query_doc_pair = @book.random_query_doc_pair_for_rating
    if @query_doc_pair == nil
      controller.redirect_to book_judgements_path(@book)
      return
    end
    @path = book_query_doc_pair_judgements_url(@book, @query_doc_pair)
  end

  @document_fields_as_json = document_fields_parses_as_json (@query_doc_pair.document_fields)
%>

<%= form_for([judgement], url: @path) do |form| %>

  <% if judgement.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(judgement.errors.count, "error") %> prohibited this judgement from being saved:</h2>

      <ul>
        <% judgement.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="card">
    <div class="card-body">
      <h5 class="card-title">Query: <%= @query_doc_pair.query_text %></h5>
      <h6 class="card-subtitle mb-2 text-muted"><i>I am looking for one of the big movies, or recent tv shows.</i></h6>
      <a href="#" class="card-link">Card link</a>
      <a href="#" class="card-link">Another link</a>
      <p class="card-text">
        <%
        @document_fields_as_json = document_fields_parses_as_json (@query_doc_pair.document_fields)
        @title_value = @document_fields_as_json['title']
        @document_fields_except_title = @document_fields_as_json.except('title')
        %>
        <p>
        Title: <%= @title_value %>
        </p>

        <%
        @document_fields_as_json.except('title').map do |key, value|
          %>
          <p>
          <%= key.capitalize %>:
          <% if value.is_a? String %>
            <% if value.starts_with?('http') %>
              <%= link_to value, value, target: "_blank" %>
            <% else %>
              <%= value %>
            <% end %>
          <% elsif value.is_a? Array %>
            <%= value.size == 1 ? value.first : value %>
          <% end %>
          </p>
          <%
        end
        %>
      </p>

      <% if @show_keyboard_shortcuts %>
        <table class="padded">
          <tr>
            <% @rating_buttons.each do |b| %>
              <%
                @button_classes = "btn btn-default "
                if @existing_rating == b["value"].to_i
                  @button_classes = @button_classes + "btn-preselected "
                end
              %>
              <td class="padded">
                <%= button_tag b["label"], type: 'button', onclick: "rate("+b["value"]+",\""+b["key"][:name].to_s+"\")", class: @button_classes + b["class"], id:"button-for-"+b["key"][:name].to_s %>
              </td>
            <% end %>
          </tr>
          <tr>
            <% @rating_buttons.each do |b| %>
                <td class="keyboard-shortcuts-td"><span class="<%= @existing_rating == b["value"].to_i ? 'bold-and-black' : '' %>" id=<%= "span-for-" + b["key"][:name].to_s %>><%= b["key"][:display_name]%></span></td>
            <% end %>
          </tr>
        </table>
      <% else %>
        <table class="padded">
          <tr>
            <% @rating_buttons.each do |b| %>
              <td class="padded">
                <%= button_tag b["label"], type: 'button', onclick: "rate("+b["value"]+",\""+ b["key"][:name].to_s + "\")", class: 'btn btn-default '+b["class"], id:"button-for-"+b["key"][:name].to_s %>
              </td>
            <% end %>
          </tr>
        </table>
      <% end %>
    </div>
  </div>

  <div class="hidden field">
    <%= form.label :rating %>
    <%= form.number_field :rating %>
  </div>
  <div class="hidden field">
    <%= form.label :query_doc_pair_id %>
    <%= form.text_field :query_doc_pair_id, :value => @query_doc_pair.id.to_s %>
  </div>

  <br>
  <div class="hidden actions">
    <%= form.submit %>
  </div>

<% end %>
