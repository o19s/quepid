/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/datatables.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/datatables.css ***!
  \******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "\nbody {\n    font-family: Montserrat, 'Helvetica Neue', Helvetica, sans-serif;\n}\n\nol {\n    margin: 0;\n    padding: 0;\n    list-style-position: inside;\n    list-style-type: decimal;\n}\n\nh1 {\n    text-align: center;\n}\n\nh4 {\n    padding: 0;\n    margin: 0.25em;\n    text-align: center;\n}\n\n#search-input {\n    width: 30em;\n}\n\n#search-result-container {\n    margin-top: 10px;\n    display: flex;\n    flex-direction: row;\n    color: #333;\n\n}\n\n#search-result-container div {\n    /*border-left: 1px solid black;*/\n    padding-left: 3px;\n    padding-right: 3px;\n}\n\n#search-results {\n    width: 48%;\n}\n\n#result-visualization {\n    width: 48%;\n}\n\n.result-doc {\n    padding: 2px 4px;\n}\n\n#content {\n    width: 32em;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.hidden {\n    display: none;\n}\n\n.toggleButtons {\n    text-align:right;\n}\n\n.padding2 {\n    padding: 2px;\n}\n\n.padding10 {\n    padding: 2px;\n}\n\n.hidden2 {\n    visibility: hidden;\n}\n\n.paddingRight20 {\n    padding-right: 20px;\n}\n\n#helpPane {\n    padding: 2px; align-content: left; background: #eee; height: 250px; width: 421px; padding-right: 20px;\n}\n\n#helpPaneComment {\n    font-size: 8pt; color: gray; text-align: center;\n}\n\n.datatable-wrapper.no-header .datatable-container {\n    border-top: 1px solid #d9d9d9;\n}\n\n.datatable-wrapper.no-footer .datatable-container {\n    border-bottom: 1px solid #d9d9d9;\n}\n\n.datatable-top,\n.datatable-bottom {\n    padding: 0px 0px;\n}\n\n.datatable-top > nav:first-child,\n.datatable-top > div:first-child,\n.datatable-bottom > nav:first-child,\n.datatable-bottom > div:first-child {\n    float: left;\n}\n\n.datatable-top > nav:last-child,\n.datatable-top > div:last-child,\n.datatable-bottom > nav:last-child,\n.datatable-bottom > div:last-child {\n    float: right;\n}\n\n.datatable-selector {\n    padding: 6px;\n}\n\n.datatable-input {\n    padding: 6px 12px;\n}\n\n.datatable-info {\n    margin: 7px 0;\n}\n\n/* PAGER */\n.datatable-pagination ul {\n    margin: 0;\n    padding-left: 0;\n}\n\n.datatable-pagination li {\n    list-style: none;\n    float: left;\n}\n\n.datatable-pagination li.datatable-hidden {\n    visibility: hidden;\n}\n\n.datatable-pagination a {\n    border: 1px solid transparent;\n    float: left;\n    margin-left: 2px;\n    padding: 6px 12px;\n    position: relative;\n    text-decoration: none;\n    color: #333;\n    cursor: pointer;\n}\n\n.datatable-pagination a:hover {\n    background-color: #d9d9d9;\n}\n\n.datatable-pagination .datatable-active a,\n.datatable-pagination .datatable-active a:focus,\n.datatable-pagination .datatable-active a:hover {\n    background-color: #d9d9d9;\n    cursor: pointer;\n}\n\n.datatable-pagination .datatable-ellipsis a,\n.datatable-pagination .datatable-disabled a,\n.datatable-pagination .datatable-disabled a:focus,\n.datatable-pagination .datatable-disabled a:hover {\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.datatable-pagination .datatable-disabled a,\n.datatable-pagination .datatable-disabled a:focus,\n.datatable-pagination .datatable-disabled a:hover {\n    cursor: pointer;\n    opacity: 0.4;\n}\n\n.datatable-pagination .datatable-pagination a {\n    font-weight: bold;\n}\n\n/* TABLE */\n.datatable-table {\n    max-width: 100%;\n    width: 100%;\n    border-spacing: 0;\n    border-collapse: separate;\n    font-size: 8pt;\n    padding: 0;\n    cursor: pointer;\n}\n\n.datatable-table > tbody > tr > td,\n.datatable-table > tbody > tr > th,\n.datatable-table > tfoot > tr > td,\n.datatable-table > tfoot > tr > th,\n.datatable-table > thead > tr > td,\n.datatable-table > thead > tr > th {\n    vertical-align: top;\n    padding: 0px 0px;\n}\n\n.datatable-table > thead > tr > th {\n    vertical-align: bottom;\n    text-align: left;\n    border-bottom: 1px solid #d9d9d9;\n}\n\n.datatable-table > tfoot > tr > th {\n    vertical-align: bottom;\n    text-align: left;\n    border-top: 1px solid #d9d9d9;\n}\n\n.datatable-table th {\n    vertical-align: bottom;\n    text-align: left;\n}\n\n.datatable-table > tbody > tr:hover {\n    vertical-align: bottom;\n    text-align: left;\n    background-color: #ccc;\n}\n\n.datatable-table th a {\n    text-decoration: none;\n    color: inherit;\n}\n\n.datatable-sorter, .datatable-filter {\n    display: inline-block;\n    height: 100%;\n    position: relative;\n    width: 100%;\n}\n\n.datatable-sorter::before,\n.datatable-sorter::after {\n    content: \"\";\n    height: 0;\n    width: 0;\n    position: absolute;\n    right: 4px;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    opacity: 0.2;\n}\n\n.datatable-sorter::before {\n    border-top: 4px solid #000;\n    bottom: 0px;\n}\n\n.datatable-sorter::after {\n    border-bottom: 4px solid #000;\n    border-top: 4px solid transparent;\n    top: 0px;\n}\n\n.datatable-ascending .datatable-sorter::after,\n.datatable-descending .datatable-sorter::before,\n.datatable-ascending .datatable-filter::after,\n.datatable-descending .datatable-filter::before {\n    opacity: 0.6;\n}\n\n.datatable-filter::before {\n    content: \"\";\n    position: absolute;\n    right: 4px;\n    opacity: 0.2;\n    width: 0;\n    height: 0;\n    border-left: 7px solid transparent;\n    border-right: 7px solid transparent;\n    border-radius: 50%;\n    border-top: 10px solid #000;\n    top: 25%;\n}\n\n.datatable-filter-active .datatable-filter::before {\n    opacity: 0.6;\n}\n\n.datatable-empty {\n    text-align: center;\n}\n\n.datatable-top::after, .datatable-bottom::after {\n    clear: both;\n    content: \" \";\n    display: table;\n}\n\ntable.datatable-table:focus tr.datatable-cursor > td:first-child {\n    border-left: 3px blue solid;\n}\n\ntable.datatable-table:focus {\n    outline: solid 1px black;\n    outline-offset: -1px;\n}\n\n.slider-form {\n    margin-left: 15px;\n}\n\n.sliders-a {\n    font-size: 8pt;\n    vertical-align: top;\n    padding: 5px;\n    width: 150px;\n    height: 300px;\n}\n\n.control {\n    font-size: 8pt;\n    vertical-align: top;\n    width: 150px; vertical-align: top;\n    padding: 5px;\n    height: 300px;\n}\n\n/* see https://www.cssportal.com/style-input-range/ */\n.sliders-a input[type=range] {\n  height: 38px;\n  -webkit-appearance: none;\n  margin: 2px 0;\n  width: 60%;\n}\n\n.sliders-a input[type=range]:focus {\n  outline: none;\n}\n\n.sliders-a input[type=range]::-webkit-slider-runnable-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #6f4e7c;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-a input[type=range]::-webkit-slider-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -11px;\n}\n\n.sliders-a input[type=range]:focus::-webkit-slider-runnable-track {\n  background: #6f4e7c;\n}\n\n.sliders-a input[type=range]::-moz-range-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #6f4e7c;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-a input[type=range]::-moz-range-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-a input[type=range]::-ms-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  background: transparent;\n  border-color: transparent;\n  color: transparent;\n}\n\n.sliders-a input[type=range]::-ms-fill-lower {\n  background: #6f4e7c;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-a input[type=range]::-ms-fill-upper {\n  background: #6f4e7c;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-a input[type=range]::-ms-thumb {\n  margin-top: 1px;\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-a input[type=range]:focus::-ms-fill-lower {\n  background: #6f4e7c;\n}\n\n.sliders-a input[type=range]:focus::-ms-fill-upper {\n  background: #6f4e7c;\n}\n\n.sliders-b {\n    font-size: 8pt;\n    vertical-align: top;\n    padding: 5px;\n    width: 150px;\n    height: 300px;\n}\n\n.sliders-b input[type=range] {\n  height: 38px;\n  -webkit-appearance: none;\n  margin: 2px 0;\n  width: 60%;\n}\n\n.sliders-b input[type=range]:focus {\n  outline: none;\n}\n\n.sliders-b input[type=range]::-webkit-slider-runnable-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #ffa056;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-b input[type=range]::-webkit-slider-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -11px;\n}\n\n.sliders-b input[type=range]:focus::-webkit-slider-runnable-track {\n  background: #ffa056;\n}\n\n.sliders-b input[type=range]::-moz-range-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #ffa056;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-b input[type=range]::-moz-range-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-b input[type=range]::-ms-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  background: transparent;\n  border-color: transparent;\n  color: transparent;\n}\n\n.sliders-b input[type=range]::-ms-fill-lower {\n  background: #ffa056;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-b input[type=range]::-ms-fill-upper {\n  background: #ffa056;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-b input[type=range]::-ms-thumb {\n  margin-top: 1px;\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-b input[type=range]:focus::-ms-fill-lower {\n  background: #ffa056;\n}\n\n.sliders-b input[type=range]:focus::-ms-fill-upper {\n  background: #ffa056;\n}\n\n.label-class {\n    padding: 0px;\n    margin: 0px;\n    font-weight: bold;\n}\n\n#search-results-experiment-a {\n    width:200px;\n    min-width:200px;\n    max-width:200px;\n    border: 7px solid #6f4e7c;\n}\n\n#search-results-experiment-b {\n    width:200px;\n    min-width:200px;\n    max-width:200px;\n    border: 7px solid #ffa056;\n}\n\n#search-results-control {\n    width:200px;\n    min-width:200px;\n    max-width:200px;\n    border: 7px solid #878787;\n}\n\n#search-divider-experiment-a {\n    width: 90%;\n    height: 8px;\n    background-color: #6f4e7c;\n}\n\n#search-divider-experiment-b {\n    width: 90%;\n    height: 8px;\n    background-color: #ffa056;\n}\n\n#search-divider-control {\n    width: 90%;\n    height: 8px;\n    background-color: #878787;\n}\n\n.tagline {\n    width: 100%;\n    text-align: center;\n    color: gray;\n    padding: 0px;\n}\n\n.title-wrapper {\n    height: 150px; width: 100%;\n    background-position: center;\n    font-size: 10pt;\n    padding: 0px;\n    text-align: center;\n    position: -50px;\n}\n\n.title-wrapper img {\n    opacity: 0.1;\n    height: 150px;\n}\n\n.title-wrapper-inner {\nopacity: 1.0!important;\nposition: relative;\ntext-align: center;\ntop:-150px;\n}\n\n#result-docs-experiment-a {\n    font-size: 8pt;\n}\n\n#result-docs-experiment-b {\n    font-size: 8pt;\n}\n\n#result-docs-control {\n    font-size: 8pt;\n}\n\n.result-visualization-wrapper { \n    height: 400px;\n    width: 800px;\n}\n\n#result-visualization { \n    height: 400px;\n    width: 800px;\n}\n\n#age-chart { height: 100%!important; width: 100%!important; }\n\n.result-docs ol li {\n    padding-left: 3px;\n    padding-right: 3px;\n}\n\n.search-divider {\n    margin: 5px;padding: 3px;\n}\n\n.datatable-table tbody tr td {\n    border: 1px solid #999;\n    padding: 2px;\n}\n\n#myDataTableDiv {\n    width: 750px;\n    min-width: 750px;\n    max-width: 750px;\n}\n\n.decayGraph {\n    align-content: center; padding: 5px;\n}\n\n#controlFA1_td {\n    border: 1px solid #878787;\n    padding: 3px;\n}\n\n#controlFA2_td {\n    border: 1px solid #878787;\n    padding: 3px;\n}\n\n#experimentAFA1_td {\n    border: 1px solid #6f4e7c;\n    padding: 3px;\n}\n\n#experimentAFA2_td {\n    border: 1px solid #6f4e7c;\n    padding: 3px;\n}\n\n#experimentBFA1_td {\n    border: 1px solid #ffa056;\n    padding: 3px;\n}\n\n#experimentBFA2_td {\n    border: 1px solid #ffa056;\n    padding: 3px;\n}\n\n#working { color: red; display: block; }\n#loading { color: green; display: none; }\n\n#button1_wrapper { display: none; }\n", "",{"version":3,"sources":["webpack://./src/datatables.css"],"names":[],"mappings":";AACA;IACI,gEAAgE;AACpE;;AAEA;IACI,SAAS;IACT,UAAU;IACV,2BAA2B;IAC3B,wBAAwB;AAC5B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,WAAW;;AAEf;;AAEA;IACI,gCAAgC;IAChC,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,aAAa,EAAE,YAAY,EAAE,mBAAmB;AACzG;;AAEA;IACI,cAAc,EAAE,WAAW,EAAE,kBAAkB;AACnD;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,gCAAgC;AACpC;;AAEA;;IAEI,gBAAgB;AACpB;;AAEA;;;;IAII,WAAW;AACf;;AAEA;;;;IAII,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA,UAAU;AACV;IACI,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;IAC7B,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;IACrB,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;;IAGI,yBAAyB;IACzB,eAAe;AACnB;;AAEA;;;;IAII,oBAAoB;IACpB,eAAe;AACnB;;AAEA;;;IAGI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,iBAAiB;AACrB;;AAEA,UAAU;AACV;IACI,eAAe;IACf,WAAW;IACX,iBAAiB;IACjB,yBAAyB;IACzB,cAAc;IACd,UAAU;IACV,eAAe;AACnB;;AAEA;;;;;;IAMI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,gBAAgB;IAChB,gCAAgC;AACpC;;AAEA;IACI,sBAAsB;IACtB,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,qBAAqB;IACrB,YAAY;IACZ,kBAAkB;IAClB,WAAW;AACf;;AAEA;;IAEI,WAAW;IACX,SAAS;IACT,QAAQ;IACR,kBAAkB;IAClB,UAAU;IACV,kCAAkC;IAClC,mCAAmC;IACnC,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,WAAW;AACf;;AAEA;IACI,6BAA6B;IAC7B,iCAAiC;IACjC,QAAQ;AACZ;;AAEA;;;;IAII,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,kCAAkC;IAClC,mCAAmC;IACnC,kBAAkB;IAClB,2BAA2B;IAC3B,QAAQ;AACZ;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,wBAAwB;IACxB,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,YAAY,EAAE,mBAAmB;IACjC,YAAY;IACZ,aAAa;AACjB;;AAEA,qDAAqD;AACrD;EACE,YAAY;EACZ,wBAAwB;EACxB,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,eAAe;EACf,aAAa;EACb,+BAA+B;EAC/B,mBAAmB;EACnB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,+BAA+B;EAC/B,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACf,wBAAwB;EACxB,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,eAAe;EACf,aAAa;EACb,+BAA+B;EAC/B,mBAAmB;EACnB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,+BAA+B;EAC/B,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,eAAe;EACf,aAAa;EACb,uBAAuB;EACvB,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;EACzB,mBAAmB;EACnB,+BAA+B;AACjC;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;EACzB,mBAAmB;EACnB,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,+BAA+B;EAC/B,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,aAAa;AACjB;;AAEA;EACE,YAAY;EACZ,wBAAwB;EACxB,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,eAAe;EACf,aAAa;EACb,+BAA+B;EAC/B,mBAAmB;EACnB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,+BAA+B;EAC/B,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACf,wBAAwB;EACxB,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,eAAe;EACf,aAAa;EACb,+BAA+B;EAC/B,mBAAmB;EACnB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,+BAA+B;EAC/B,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,eAAe;EACf,aAAa;EACb,uBAAuB;EACvB,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;EACzB,mBAAmB;EACnB,+BAA+B;AACjC;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;EACzB,mBAAmB;EACnB,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,+BAA+B;EAC/B,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,eAAe;IACf,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,eAAe;IACf,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,eAAe;IACf,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,WAAW;IACX,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,WAAW;IACX,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,WAAW;IACX,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa,EAAE,WAAW;IAC1B,2BAA2B;IAC3B,eAAe;IACf,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;AACA,sBAAsB;AACtB,kBAAkB;AAClB,kBAAkB;AAClB,UAAU;AACV;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;AAEA,aAAa,sBAAsB,EAAE,qBAAqB,EAAE;;AAE5D;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,WAAW,CAAC,YAAY;AAC5B;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB,EAAE,YAAY;AACvC;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA,WAAW,UAAU,EAAE,cAAc,EAAE;AACvC,WAAW,YAAY,EAAE,aAAa,EAAE;;AAExC,mBAAmB,aAAa,EAAE","sourcesContent":["\nbody {\n    font-family: Montserrat, 'Helvetica Neue', Helvetica, sans-serif;\n}\n\nol {\n    margin: 0;\n    padding: 0;\n    list-style-position: inside;\n    list-style-type: decimal;\n}\n\nh1 {\n    text-align: center;\n}\n\nh4 {\n    padding: 0;\n    margin: 0.25em;\n    text-align: center;\n}\n\n#search-input {\n    width: 30em;\n}\n\n#search-result-container {\n    margin-top: 10px;\n    display: flex;\n    flex-direction: row;\n    color: #333;\n\n}\n\n#search-result-container div {\n    /*border-left: 1px solid black;*/\n    padding-left: 3px;\n    padding-right: 3px;\n}\n\n#search-results {\n    width: 48%;\n}\n\n#result-visualization {\n    width: 48%;\n}\n\n.result-doc {\n    padding: 2px 4px;\n}\n\n#content {\n    width: 32em;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.hidden {\n    display: none;\n}\n\n.toggleButtons {\n    text-align:right;\n}\n\n.padding2 {\n    padding: 2px;\n}\n\n.padding10 {\n    padding: 2px;\n}\n\n.hidden2 {\n    visibility: hidden;\n}\n\n.paddingRight20 {\n    padding-right: 20px;\n}\n\n#helpPane {\n    padding: 2px; align-content: left; background: #eee; height: 250px; width: 421px; padding-right: 20px;\n}\n\n#helpPaneComment {\n    font-size: 8pt; color: gray; text-align: center;\n}\n\n.datatable-wrapper.no-header .datatable-container {\n    border-top: 1px solid #d9d9d9;\n}\n\n.datatable-wrapper.no-footer .datatable-container {\n    border-bottom: 1px solid #d9d9d9;\n}\n\n.datatable-top,\n.datatable-bottom {\n    padding: 0px 0px;\n}\n\n.datatable-top > nav:first-child,\n.datatable-top > div:first-child,\n.datatable-bottom > nav:first-child,\n.datatable-bottom > div:first-child {\n    float: left;\n}\n\n.datatable-top > nav:last-child,\n.datatable-top > div:last-child,\n.datatable-bottom > nav:last-child,\n.datatable-bottom > div:last-child {\n    float: right;\n}\n\n.datatable-selector {\n    padding: 6px;\n}\n\n.datatable-input {\n    padding: 6px 12px;\n}\n\n.datatable-info {\n    margin: 7px 0;\n}\n\n/* PAGER */\n.datatable-pagination ul {\n    margin: 0;\n    padding-left: 0;\n}\n\n.datatable-pagination li {\n    list-style: none;\n    float: left;\n}\n\n.datatable-pagination li.datatable-hidden {\n    visibility: hidden;\n}\n\n.datatable-pagination a {\n    border: 1px solid transparent;\n    float: left;\n    margin-left: 2px;\n    padding: 6px 12px;\n    position: relative;\n    text-decoration: none;\n    color: #333;\n    cursor: pointer;\n}\n\n.datatable-pagination a:hover {\n    background-color: #d9d9d9;\n}\n\n.datatable-pagination .datatable-active a,\n.datatable-pagination .datatable-active a:focus,\n.datatable-pagination .datatable-active a:hover {\n    background-color: #d9d9d9;\n    cursor: pointer;\n}\n\n.datatable-pagination .datatable-ellipsis a,\n.datatable-pagination .datatable-disabled a,\n.datatable-pagination .datatable-disabled a:focus,\n.datatable-pagination .datatable-disabled a:hover {\n    pointer-events: none;\n    cursor: pointer;\n}\n\n.datatable-pagination .datatable-disabled a,\n.datatable-pagination .datatable-disabled a:focus,\n.datatable-pagination .datatable-disabled a:hover {\n    cursor: pointer;\n    opacity: 0.4;\n}\n\n.datatable-pagination .datatable-pagination a {\n    font-weight: bold;\n}\n\n/* TABLE */\n.datatable-table {\n    max-width: 100%;\n    width: 100%;\n    border-spacing: 0;\n    border-collapse: separate;\n    font-size: 8pt;\n    padding: 0;\n    cursor: pointer;\n}\n\n.datatable-table > tbody > tr > td,\n.datatable-table > tbody > tr > th,\n.datatable-table > tfoot > tr > td,\n.datatable-table > tfoot > tr > th,\n.datatable-table > thead > tr > td,\n.datatable-table > thead > tr > th {\n    vertical-align: top;\n    padding: 0px 0px;\n}\n\n.datatable-table > thead > tr > th {\n    vertical-align: bottom;\n    text-align: left;\n    border-bottom: 1px solid #d9d9d9;\n}\n\n.datatable-table > tfoot > tr > th {\n    vertical-align: bottom;\n    text-align: left;\n    border-top: 1px solid #d9d9d9;\n}\n\n.datatable-table th {\n    vertical-align: bottom;\n    text-align: left;\n}\n\n.datatable-table > tbody > tr:hover {\n    vertical-align: bottom;\n    text-align: left;\n    background-color: #ccc;\n}\n\n.datatable-table th a {\n    text-decoration: none;\n    color: inherit;\n}\n\n.datatable-sorter, .datatable-filter {\n    display: inline-block;\n    height: 100%;\n    position: relative;\n    width: 100%;\n}\n\n.datatable-sorter::before,\n.datatable-sorter::after {\n    content: \"\";\n    height: 0;\n    width: 0;\n    position: absolute;\n    right: 4px;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    opacity: 0.2;\n}\n\n.datatable-sorter::before {\n    border-top: 4px solid #000;\n    bottom: 0px;\n}\n\n.datatable-sorter::after {\n    border-bottom: 4px solid #000;\n    border-top: 4px solid transparent;\n    top: 0px;\n}\n\n.datatable-ascending .datatable-sorter::after,\n.datatable-descending .datatable-sorter::before,\n.datatable-ascending .datatable-filter::after,\n.datatable-descending .datatable-filter::before {\n    opacity: 0.6;\n}\n\n.datatable-filter::before {\n    content: \"\";\n    position: absolute;\n    right: 4px;\n    opacity: 0.2;\n    width: 0;\n    height: 0;\n    border-left: 7px solid transparent;\n    border-right: 7px solid transparent;\n    border-radius: 50%;\n    border-top: 10px solid #000;\n    top: 25%;\n}\n\n.datatable-filter-active .datatable-filter::before {\n    opacity: 0.6;\n}\n\n.datatable-empty {\n    text-align: center;\n}\n\n.datatable-top::after, .datatable-bottom::after {\n    clear: both;\n    content: \" \";\n    display: table;\n}\n\ntable.datatable-table:focus tr.datatable-cursor > td:first-child {\n    border-left: 3px blue solid;\n}\n\ntable.datatable-table:focus {\n    outline: solid 1px black;\n    outline-offset: -1px;\n}\n\n.slider-form {\n    margin-left: 15px;\n}\n\n.sliders-a {\n    font-size: 8pt;\n    vertical-align: top;\n    padding: 5px;\n    width: 150px;\n    height: 300px;\n}\n\n.control {\n    font-size: 8pt;\n    vertical-align: top;\n    width: 150px; vertical-align: top;\n    padding: 5px;\n    height: 300px;\n}\n\n/* see https://www.cssportal.com/style-input-range/ */\n.sliders-a input[type=range] {\n  height: 38px;\n  -webkit-appearance: none;\n  margin: 2px 0;\n  width: 60%;\n}\n\n.sliders-a input[type=range]:focus {\n  outline: none;\n}\n\n.sliders-a input[type=range]::-webkit-slider-runnable-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #6f4e7c;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-a input[type=range]::-webkit-slider-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -11px;\n}\n\n.sliders-a input[type=range]:focus::-webkit-slider-runnable-track {\n  background: #6f4e7c;\n}\n\n.sliders-a input[type=range]::-moz-range-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #6f4e7c;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-a input[type=range]::-moz-range-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-a input[type=range]::-ms-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  background: transparent;\n  border-color: transparent;\n  color: transparent;\n}\n\n.sliders-a input[type=range]::-ms-fill-lower {\n  background: #6f4e7c;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-a input[type=range]::-ms-fill-upper {\n  background: #6f4e7c;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-a input[type=range]::-ms-thumb {\n  margin-top: 1px;\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-a input[type=range]:focus::-ms-fill-lower {\n  background: #6f4e7c;\n}\n\n.sliders-a input[type=range]:focus::-ms-fill-upper {\n  background: #6f4e7c;\n}\n\n.sliders-b {\n    font-size: 8pt;\n    vertical-align: top;\n    padding: 5px;\n    width: 150px;\n    height: 300px;\n}\n\n.sliders-b input[type=range] {\n  height: 38px;\n  -webkit-appearance: none;\n  margin: 2px 0;\n  width: 60%;\n}\n\n.sliders-b input[type=range]:focus {\n  outline: none;\n}\n\n.sliders-b input[type=range]::-webkit-slider-runnable-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #ffa056;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-b input[type=range]::-webkit-slider-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -11px;\n}\n\n.sliders-b input[type=range]:focus::-webkit-slider-runnable-track {\n  background: #ffa056;\n}\n\n.sliders-b input[type=range]::-moz-range-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  box-shadow: 1px 1px 1px #000000;\n  background: #ffa056;\n  border-radius: 5px;\n  border: 1px solid #000000;\n}\n\n.sliders-b input[type=range]::-moz-range-thumb {\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-b input[type=range]::-ms-track {\n  width: 60%;\n  height: 10px;\n  cursor: pointer;\n  animate: 0.2s;\n  background: transparent;\n  border-color: transparent;\n  color: transparent;\n}\n\n.sliders-b input[type=range]::-ms-fill-lower {\n  background: #ffa056;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-b input[type=range]::-ms-fill-upper {\n  background: #ffa056;\n  border: 1px solid #000000;\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px #000000;\n}\n\n.sliders-b input[type=range]::-ms-thumb {\n  margin-top: 1px;\n  box-shadow: 1px 1px 1px #000000;\n  border: 1px solid #000000;\n  height: 30px;\n  width: 15px;\n  border-radius: 5px;\n  background: #FFFFFF;\n  cursor: pointer;\n}\n\n.sliders-b input[type=range]:focus::-ms-fill-lower {\n  background: #ffa056;\n}\n\n.sliders-b input[type=range]:focus::-ms-fill-upper {\n  background: #ffa056;\n}\n\n.label-class {\n    padding: 0px;\n    margin: 0px;\n    font-weight: bold;\n}\n\n#search-results-experiment-a {\n    width:200px;\n    min-width:200px;\n    max-width:200px;\n    border: 7px solid #6f4e7c;\n}\n\n#search-results-experiment-b {\n    width:200px;\n    min-width:200px;\n    max-width:200px;\n    border: 7px solid #ffa056;\n}\n\n#search-results-control {\n    width:200px;\n    min-width:200px;\n    max-width:200px;\n    border: 7px solid #878787;\n}\n\n#search-divider-experiment-a {\n    width: 90%;\n    height: 8px;\n    background-color: #6f4e7c;\n}\n\n#search-divider-experiment-b {\n    width: 90%;\n    height: 8px;\n    background-color: #ffa056;\n}\n\n#search-divider-control {\n    width: 90%;\n    height: 8px;\n    background-color: #878787;\n}\n\n.tagline {\n    width: 100%;\n    text-align: center;\n    color: gray;\n    padding: 0px;\n}\n\n.title-wrapper {\n    height: 150px; width: 100%;\n    background-position: center;\n    font-size: 10pt;\n    padding: 0px;\n    text-align: center;\n    position: -50px;\n}\n\n.title-wrapper img {\n    opacity: 0.1;\n    height: 150px;\n}\n\n.title-wrapper-inner {\nopacity: 1.0!important;\nposition: relative;\ntext-align: center;\ntop:-150px;\n}\n\n#result-docs-experiment-a {\n    font-size: 8pt;\n}\n\n#result-docs-experiment-b {\n    font-size: 8pt;\n}\n\n#result-docs-control {\n    font-size: 8pt;\n}\n\n.result-visualization-wrapper { \n    height: 400px;\n    width: 800px;\n}\n\n#result-visualization { \n    height: 400px;\n    width: 800px;\n}\n\n#age-chart { height: 100%!important; width: 100%!important; }\n\n.result-docs ol li {\n    padding-left: 3px;\n    padding-right: 3px;\n}\n\n.search-divider {\n    margin: 5px;padding: 3px;\n}\n\n.datatable-table tbody tr td {\n    border: 1px solid #999;\n    padding: 2px;\n}\n\n#myDataTableDiv {\n    width: 750px;\n    min-width: 750px;\n    max-width: 750px;\n}\n\n.decayGraph {\n    align-content: center; padding: 5px;\n}\n\n#controlFA1_td {\n    border: 1px solid #878787;\n    padding: 3px;\n}\n\n#controlFA2_td {\n    border: 1px solid #878787;\n    padding: 3px;\n}\n\n#experimentAFA1_td {\n    border: 1px solid #6f4e7c;\n    padding: 3px;\n}\n\n#experimentAFA2_td {\n    border: 1px solid #6f4e7c;\n    padding: 3px;\n}\n\n#experimentBFA1_td {\n    border: 1px solid #ffa056;\n    padding: 3px;\n}\n\n#experimentBFA2_td {\n    border: 1px solid #ffa056;\n    padding: 3px;\n}\n\n#working { color: red; display: block; }\n#loading { color: green; display: none; }\n\n#button1_wrapper { display: none; }\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {



/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {



module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./src/assets/images/decay_2d.png":
/*!****************************************!*\
  !*** ./src/assets/images/decay_2d.png ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "6e95ac0877275b34943aef00b7a8a6b6.png");

/***/ }),

/***/ "./src/assets/images/graphic_equalizer.png":
/*!*************************************************!*\
  !*** ./src/assets/images/graphic_equalizer.png ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f0823e346d2db4a8f9a3ab03c95d45bd.png");

/***/ }),

/***/ "./src/assets/images/icons8-globe-32.png":
/*!***********************************************!*\
  !*** ./src/assets/images/icons8-globe-32.png ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "9f23b366c55a9b58f4a6ce521fb496d4.png");

/***/ }),

/***/ "./node_modules/simple-datatables/dist/module.js":
/*!*******************************************************!*\
  !*** ./node_modules/simple-datatables/dist/module.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataTable": () => (/* binding */ G),
/* harmony export */   "convertCSV": () => (/* binding */ K),
/* harmony export */   "convertJSON": () => (/* binding */ tt),
/* harmony export */   "createElement": () => (/* binding */ s),
/* harmony export */   "exportCSV": () => (/* binding */ et),
/* harmony export */   "exportJSON": () => (/* binding */ st),
/* harmony export */   "exportSQL": () => (/* binding */ it),
/* harmony export */   "exportTXT": () => (/* binding */ nt),
/* harmony export */   "isJson": () => (/* binding */ e),
/* harmony export */   "isObject": () => (/* binding */ t),
/* harmony export */   "makeEditable": () => (/* binding */ rt)
/* harmony export */ });
const t=t=>"[object Object]"===Object.prototype.toString.call(t),e=e=>{let s=!1;try{s=JSON.parse(e)}catch(t){return!1}return!(null===s||!Array.isArray(s)&&!t(s))&&s},s=(t,e)=>{const s=document.createElement(t);if(e&&"object"==typeof e)for(const t in e)"html"===t?s.innerHTML=e[t]:s.setAttribute(t,e[t]);return s},i=t=>["#text","#comment"].includes(t.nodeName)?t.data:t.childNodes?t.childNodes.map((t=>i(t))).join(""):"",n=function(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")},a=function(t,e){let s=0,i=0;for(;s<t+1;){e[i].hidden||(s+=1),i+=1}return i-1},o=function(t,e){let s=t,i=0;for(;i<t;){e[t].hidden&&(s-=1),i++}return s};function r(t,e,s){var i;return"#text"===t.nodeName?i=s.document.createTextNode(t.data):"#comment"===t.nodeName?i=s.document.createComment(t.data):(e?i=s.document.createElementNS("http://www.w3.org/2000/svg",t.nodeName):"svg"===t.nodeName.toLowerCase()?(i=s.document.createElementNS("http://www.w3.org/2000/svg","svg"),e=!0):i=s.document.createElement(t.nodeName),t.attributes&&Object.entries(t.attributes).forEach((function(t){var e=t[0],s=t[1];return i.setAttribute(e,s)})),t.childNodes&&t.childNodes.forEach((function(t){return i.appendChild(r(t,e,s))})),s.valueDiffing&&(t.value&&(i instanceof HTMLButtonElement||i instanceof HTMLDataElement||i instanceof HTMLInputElement||i instanceof HTMLLIElement||i instanceof HTMLMeterElement||i instanceof HTMLOptionElement||i instanceof HTMLProgressElement||i instanceof HTMLParamElement)&&(i.value=t.value),t.checked&&i instanceof HTMLInputElement&&(i.checked=t.checked),t.selected&&i instanceof HTMLOptionElement&&(i.selected=t.selected))),i}var l=function(t,e){for(e=e.slice();e.length>0;){var s=e.splice(0,1)[0];t=t.childNodes[s]}return t};function d(t,e,s){var i,n,a,o=e[s._const.action],d=e[s._const.route];[s._const.addElement,s._const.addTextElement].includes(o)||(i=l(t,d));var c={diff:e,node:i};if(s.preDiffApply(c))return!0;switch(o){case s._const.addAttribute:if(!(i&&i instanceof Element))return!1;i.setAttribute(e[s._const.name],e[s._const.value]);break;case s._const.modifyAttribute:if(!(i&&i instanceof Element))return!1;i.setAttribute(e[s._const.name],e[s._const.newValue]),i instanceof HTMLInputElement&&"value"===e[s._const.name]&&(i.value=e[s._const.newValue]);break;case s._const.removeAttribute:if(!(i&&i instanceof Element))return!1;i.removeAttribute(e[s._const.name]);break;case s._const.modifyTextElement:if(!(i&&i instanceof Text))return!1;s.textDiff(i,i.data,e[s._const.oldValue],e[s._const.newValue]);break;case s._const.modifyValue:if(!i||void 0===i.value)return!1;i.value=e[s._const.newValue];break;case s._const.modifyComment:if(!(i&&i instanceof Comment))return!1;s.textDiff(i,i.data,e[s._const.oldValue],e[s._const.newValue]);break;case s._const.modifyChecked:if(!i||void 0===i.checked)return!1;i.checked=e[s._const.newValue];break;case s._const.modifySelected:if(!i||void 0===i.selected)return!1;i.selected=e[s._const.newValue];break;case s._const.replaceElement:i.parentNode.replaceChild(r(e[s._const.newValue],"svg"===e[s._const.newValue].nodeName.toLowerCase(),s),i);break;case s._const.relocateGroup:Array.apply(void 0,new Array(e[s._const.groupLength])).map((function(){return i.removeChild(i.childNodes[e[s._const.from]])})).forEach((function(t,n){0===n&&(a=i.childNodes[e[s._const.to]]),i.insertBefore(t,a||null)}));break;case s._const.removeElement:i.parentNode.removeChild(i);break;case s._const.addElement:var h=(u=d.slice()).splice(u.length-1,1)[0];if(!((i=l(t,u))instanceof Element))return!1;i.insertBefore(r(e[s._const.element],"http://www.w3.org/2000/svg"===i.namespaceURI,s),i.childNodes[h]||null);break;case s._const.removeTextElement:if(!i||3!==i.nodeType)return!1;i.parentNode.removeChild(i);break;case s._const.addTextElement:var u;if(h=(u=d.slice()).splice(u.length-1,1)[0],n=s.document.createTextNode(e[s._const.value]),!(i=l(t,u)).childNodes)return!1;i.insertBefore(n,i.childNodes[h]||null);break;default:console.log("unknown action")}return s.postDiffApply({diff:c.diff,node:c.node,newNode:n}),!0}function c(t,e,s){var i=t[e];t[e]=t[s],t[s]=i}var h=function(t){var e=[];return e.push(t.nodeName),"#text"!==t.nodeName&&"#comment"!==t.nodeName&&t.attributes&&(t.attributes.class&&e.push("".concat(t.nodeName,".").concat(t.attributes.class.replace(/ /g,"."))),t.attributes.id&&e.push("".concat(t.nodeName,"#").concat(t.attributes.id))),e},u=function(t){var e={},s={};return t.forEach((function(t){h(t).forEach((function(t){var i=t in e;i||t in s?i&&(delete e[t],s[t]=!0):e[t]=!0}))})),e},p=function(t,e){var s=u(t),i=u(e),n={};return Object.keys(s).forEach((function(t){i[t]&&(n[t]=!0)})),n},f=function(t){return delete t.outerDone,delete t.innerDone,delete t.valueDone,!t.childNodes||t.childNodes.every(f)},m=function(t){if(Object.prototype.hasOwnProperty.call(t,"data"))return{nodeName:"#text"===t.nodeName?"#text":"#comment",data:t.data};var e={nodeName:t.nodeName};return Object.prototype.hasOwnProperty.call(t,"attributes")&&(e.attributes=t.attributes),Object.prototype.hasOwnProperty.call(t,"checked")&&(e.checked=t.checked),Object.prototype.hasOwnProperty.call(t,"value")&&(e.value=t.value),Object.prototype.hasOwnProperty.call(t,"selected")&&(e.selected=t.selected),Object.prototype.hasOwnProperty.call(t,"childNodes")&&(e.childNodes=t.childNodes.map((function(t){return m(t)}))),e},g=function(t,e){if(!["nodeName","value","checked","selected","data"].every((function(s){return t[s]===e[s]})))return!1;if(Object.prototype.hasOwnProperty.call(t,"data"))return!0;if(Boolean(t.attributes)!==Boolean(e.attributes))return!1;if(Boolean(t.childNodes)!==Boolean(e.childNodes))return!1;if(t.attributes){var s=Object.keys(t.attributes),i=Object.keys(e.attributes);if(s.length!==i.length)return!1;if(!s.every((function(s){return t.attributes[s]===e.attributes[s]})))return!1}if(t.childNodes){if(t.childNodes.length!==e.childNodes.length)return!1;if(!t.childNodes.every((function(t,s){return g(t,e.childNodes[s])})))return!1}return!0},b=function(t,e,s,i,n){if(void 0===n&&(n=!1),!t||!e)return!1;if(t.nodeName!==e.nodeName)return!1;if(["#text","#comment"].includes(t.nodeName))return!!n||t.data===e.data;if(t.nodeName in s)return!0;if(t.attributes&&e.attributes){if(t.attributes.id){if(t.attributes.id!==e.attributes.id)return!1;if("".concat(t.nodeName,"#").concat(t.attributes.id)in s)return!0}if(t.attributes.class&&t.attributes.class===e.attributes.class&&"".concat(t.nodeName,".").concat(t.attributes.class.replace(/ /g,"."))in s)return!0}if(i)return!0;var a=t.childNodes?t.childNodes.slice().reverse():[],o=e.childNodes?e.childNodes.slice().reverse():[];if(a.length!==o.length)return!1;if(n)return a.every((function(t,e){return t.nodeName===o[e].nodeName}));var r=p(a,o);return a.every((function(t,e){return b(t,o[e],r,!0,!0)}))},v=function(t,e){return Array.apply(void 0,new Array(t)).map((function(){return e}))},_=function(t,e){for(var s=t.childNodes?t.childNodes:[],i=e.childNodes?e.childNodes:[],n=v(s.length,!1),a=v(i.length,!1),o=[],r=function(){return arguments[1]},l=!1,d=function(){var t=function(t,e,s,i){var n=0,a=[],o=t.length,r=e.length,l=Array.apply(void 0,new Array(o+1)).map((function(){return[]})),d=p(t,e),c=o===r;c&&t.some((function(t,s){var i=h(t),n=h(e[s]);return i.length!==n.length?(c=!1,!0):(i.some((function(t,e){if(t!==n[e])return c=!1,!0})),!c||void 0)}));for(var u=0;u<o;u++)for(var f=t[u],m=0;m<r;m++){var g=e[m];s[u]||i[m]||!b(f,g,d,c)?l[u+1][m+1]=0:(l[u+1][m+1]=l[u][m]?l[u][m]+1:1,l[u+1][m+1]>=n&&(n=l[u+1][m+1],a=[u+1,m+1]))}return 0!==n&&{oldValue:a[0]-n,newValue:a[1]-n,length:n}}(s,i,n,a);t?(o.push(t),Array.apply(void 0,new Array(t.length)).map(r).forEach((function(e){return function(t,e,s,i){t[s.oldValue+i]=!0,e[s.newValue+i]=!0}(n,a,t,e)}))):l=!0};!l;)d();return t.subsets=o,t.subsetsAge=100,o},w=function(){function t(){this.list=[]}return t.prototype.add=function(t){var e;(e=this.list).push.apply(e,t)},t.prototype.forEach=function(t){this.list.forEach((function(e){return t(e)}))},t}(),y=function(){function t(t){void 0===t&&(t={});var e=this;Object.entries(t).forEach((function(t){var s=t[0],i=t[1];return e[s]=i}))}return t.prototype.toString=function(){return JSON.stringify(this)},t.prototype.setValue=function(t,e){return this[t]=e,this},t}();function x(t,e){var s,i,n=t;for(e=e.slice();e.length>0;)i=e.splice(0,1)[0],s=n,n=n.childNodes?n.childNodes[i]:void 0;return{node:n,parentNode:s,nodeIndex:i}}function N(t,e,s){return e.forEach((function(e){!function(t,e,s){var i,n,a,o;if(![s._const.addElement,s._const.addTextElement].includes(e[s._const.action])){var r=x(t,e[s._const.route]);n=r.node,a=r.parentNode,o=r.nodeIndex}var l,d,c=[],h={diff:e,node:n};if(s.preVirtualDiffApply(h))return!0;switch(e[s._const.action]){case s._const.addAttribute:n.attributes||(n.attributes={}),n.attributes[e[s._const.name]]=e[s._const.value],"checked"===e[s._const.name]?n.checked=!0:"selected"===e[s._const.name]?n.selected=!0:"INPUT"===n.nodeName&&"value"===e[s._const.name]&&(n.value=e[s._const.value]);break;case s._const.modifyAttribute:n.attributes[e[s._const.name]]=e[s._const.newValue];break;case s._const.removeAttribute:delete n.attributes[e[s._const.name]],0===Object.keys(n.attributes).length&&delete n.attributes,"checked"===e[s._const.name]?n.checked=!1:"selected"===e[s._const.name]?delete n.selected:"INPUT"===n.nodeName&&"value"===e[s._const.name]&&delete n.value;break;case s._const.modifyTextElement:n.data=e[s._const.newValue];break;case s._const.modifyValue:n.value=e[s._const.newValue];break;case s._const.modifyComment:n.data=e[s._const.newValue];break;case s._const.modifyChecked:n.checked=e[s._const.newValue];break;case s._const.modifySelected:n.selected=e[s._const.newValue];break;case s._const.replaceElement:l=e[s._const.newValue],a.childNodes[o]=l;break;case s._const.relocateGroup:n.childNodes.splice(e[s._const.from],e[s._const.groupLength]).reverse().forEach((function(t){return n.childNodes.splice(e[s._const.to],0,t)})),n.subsets&&n.subsets.forEach((function(t){if(e[s._const.from]<e[s._const.to]&&t.oldValue<=e[s._const.to]&&t.oldValue>e[s._const.from])t.oldValue-=e[s._const.groupLength],(i=t.oldValue+t.length-e[s._const.to])>0&&(c.push({oldValue:e[s._const.to]+e[s._const.groupLength],newValue:t.newValue+t.length-i,length:i}),t.length-=i);else if(e[s._const.from]>e[s._const.to]&&t.oldValue>e[s._const.to]&&t.oldValue<e[s._const.from]){var i;t.oldValue+=e[s._const.groupLength],(i=t.oldValue+t.length-e[s._const.to])>0&&(c.push({oldValue:e[s._const.to]+e[s._const.groupLength],newValue:t.newValue+t.length-i,length:i}),t.length-=i)}else t.oldValue===e[s._const.from]&&(t.oldValue=e[s._const.to])}));break;case s._const.removeElement:a.childNodes.splice(o,1),a.subsets&&a.subsets.forEach((function(t){t.oldValue>o?t.oldValue-=1:t.oldValue===o?t.delete=!0:t.oldValue<o&&t.oldValue+t.length>o&&(t.oldValue+t.length-1===o?t.length--:(c.push({newValue:t.newValue+o-t.oldValue,oldValue:o,length:t.length-o+t.oldValue-1}),t.length=o-t.oldValue))})),n=a;break;case s._const.addElement:var u=(d=e[s._const.route].slice()).splice(d.length-1,1)[0];n=null===(i=x(t,d))||void 0===i?void 0:i.node,l=e[s._const.element],n.childNodes||(n.childNodes=[]),u>=n.childNodes.length?n.childNodes.push(l):n.childNodes.splice(u,0,l),n.subsets&&n.subsets.forEach((function(t){if(t.oldValue>=u)t.oldValue+=1;else if(t.oldValue<u&&t.oldValue+t.length>u){var e=t.oldValue+t.length-u;c.push({newValue:t.newValue+t.length-e,oldValue:u+1,length:e}),t.length-=e}}));break;case s._const.removeTextElement:a.childNodes.splice(o,1),"TEXTAREA"===a.nodeName&&delete a.value,a.subsets&&a.subsets.forEach((function(t){t.oldValue>o?t.oldValue-=1:t.oldValue===o?t.delete=!0:t.oldValue<o&&t.oldValue+t.length>o&&(t.oldValue+t.length-1===o?t.length--:(c.push({newValue:t.newValue+o-t.oldValue,oldValue:o,length:t.length-o+t.oldValue-1}),t.length=o-t.oldValue))})),n=a;break;case s._const.addTextElement:var p=(d=e[s._const.route].slice()).splice(d.length-1,1)[0];(l={}).nodeName="#text",l.data=e[s._const.value],(n=x(t,d).node).childNodes||(n.childNodes=[]),p>=n.childNodes.length?n.childNodes.push(l):n.childNodes.splice(p,0,l),"TEXTAREA"===n.nodeName&&(n.value=e[s._const.newValue]),n.subsets&&n.subsets.forEach((function(t){if(t.oldValue>=p&&(t.oldValue+=1),t.oldValue<p&&t.oldValue+t.length>p){var e=t.oldValue+t.length-p;c.push({newValue:t.newValue+t.length-e,oldValue:p+1,length:e}),t.length-=e}}));break;default:console.log("unknown action")}n.subsets&&(n.subsets=n.subsets.filter((function(t){return!t.delete&&t.oldValue!==t.newValue})),c.length&&(n.subsets=n.subsets.concat(c))),s.postVirtualDiffApply({node:h.node,diff:h.diff,newNode:l})}(t,e,s)})),!0}function D(t,e){void 0===e&&(e={});var s={nodeName:t.nodeName};return t instanceof Text||t instanceof Comment?s.data=t.data:(t.attributes&&t.attributes.length>0&&(s.attributes={},Array.prototype.slice.call(t.attributes).forEach((function(t){return s.attributes[t.name]=t.value}))),t instanceof HTMLTextAreaElement?s.value=t.value:t.childNodes&&t.childNodes.length>0&&(s.childNodes=[],Array.prototype.slice.call(t.childNodes).forEach((function(t){return s.childNodes.push(D(t,e))}))),e.valueDiffing&&(t instanceof HTMLInputElement&&["radio","checkbox"].includes(t.type.toLowerCase())&&void 0!==t.checked?s.checked=t.checked:(t instanceof HTMLButtonElement||t instanceof HTMLDataElement||t instanceof HTMLInputElement||t instanceof HTMLLIElement||t instanceof HTMLMeterElement||t instanceof HTMLOptionElement||t instanceof HTMLProgressElement||t instanceof HTMLParamElement)&&(s.value=t.value),t instanceof HTMLOptionElement&&(s.selected=t.selected))),s}var M=/<\s*\/*[a-zA-Z:_][a-zA-Z0-9:_\-.]*\s*(?:"[^"]*"['"]*|'[^']*'['"]*|[^'"/>])*\/*\s*>|<!--(?:.|\n|\r)*?-->/g,E=Object.create?Object.create(null):{},V=/\s([^'"/\s><]+?)[\s/>]|([^\s=]+)=\s?(".*?"|'.*?')/g;function O(t){return t.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&")}var $={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,menuItem:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},C=function(t){var e={nodeName:"",attributes:{}},s=!1,i=t.match(/<\/?([^\s]+?)[/\s>]/);if(i&&(e.nodeName=i[1].toUpperCase(),($[i[1]]||"/"===t.charAt(t.length-2))&&(s=!0),e.nodeName.startsWith("!--"))){var n=t.indexOf("--\x3e");return{type:"comment",node:{nodeName:"#comment",data:-1!==n?t.slice(4,n):""},voidElement:s}}for(var a=new RegExp(V),o=null,r=!1;!r;)if(null===(o=a.exec(t)))r=!0;else if(o[0].trim())if(o[1]){var l=o[1].trim(),d=[l,""];l.indexOf("=")>-1&&(d=l.split("=")),e.attributes[d[0]]=d[1],a.lastIndex--}else o[2]&&(e.attributes[o[2]]=o[3].trim().substring(1,o[3].length-1));return{type:"tag",node:e,voidElement:s}},L=function(t,e){void 0===e&&(e={components:E});var s,i=[],n=-1,a=[],o=!1;if(0!==t.indexOf("<")){var r=t.indexOf("<");i.push({nodeName:"#text",data:-1===r?t:t.substring(0,r)})}return t.replace(M,(function(r,l){if(o){if(r!=="</".concat(s.node.nodeName,">"))return"";o=!1}var d="/"!==r.charAt(1),c=r.startsWith("\x3c!--"),h=l+r.length,u=t.charAt(h);if(c){var p=C(r).node;if(n<0)return i.push(p),"";var f=a[n];return f&&p.nodeName&&(f.node.childNodes||(f.node.childNodes=[]),f.node.childNodes.push(p)),""}if(d){s=C(r),n++,"tag"===s.type&&e.components[s.node.nodeName]&&(s.type="component",o=!0),s.voidElement||o||!u||"<"===u||(s.node.childNodes||(s.node.childNodes=[]),s.node.childNodes.push({nodeName:"#text",data:O(t.slice(h,t.indexOf("<",h)))})),0===n&&s.node.nodeName&&i.push(s.node);var m=a[n-1];m&&s.node.nodeName&&(m.node.childNodes||(m.node.childNodes=[]),m.node.childNodes.push(s.node)),a[n]=s}if((!d||s.voidElement)&&(n>-1&&(s.voidElement||s.node.nodeName===r.slice(2,-1).toUpperCase())&&--n>-1&&(s=a[n]),!o&&"<"!==u&&u)){var g=-1===n?i:a[n].node.childNodes||[],b=t.indexOf("<",h),v=O(t.slice(h,-1===b?void 0:b));g.push({nodeName:"#text",data:v})}return""})),i[0]},k=function(){function t(t,e,s){this.options=s,this.t1="undefined"!=typeof Element&&t instanceof Element?D(t,this.options):"string"==typeof t?L(t,this.options):JSON.parse(JSON.stringify(t)),this.t2="undefined"!=typeof Element&&e instanceof Element?D(e,this.options):"string"==typeof e?L(e,this.options):JSON.parse(JSON.stringify(e)),this.diffcount=0,this.foundAll=!1,this.debug&&(this.t1Orig="undefined"!=typeof Element&&t instanceof Element?D(t,this.options):"string"==typeof t?L(t,this.options):JSON.parse(JSON.stringify(t)),this.t2Orig="undefined"!=typeof Element&&e instanceof Element?D(e,this.options):"string"==typeof e?L(e,this.options):JSON.parse(JSON.stringify(e))),this.tracker=new w}return t.prototype.init=function(){return this.findDiffs(this.t1,this.t2)},t.prototype.findDiffs=function(t,e){var s;do{if(this.options.debug&&(this.diffcount+=1,this.diffcount>this.options.diffcap))throw new Error("surpassed diffcap:".concat(JSON.stringify(this.t1Orig)," -> ").concat(JSON.stringify(this.t2Orig)));0===(s=this.findNextDiff(t,e,[])).length&&(g(t,e)||(this.foundAll?console.error("Could not find remaining diffs!"):(this.foundAll=!0,f(t),s=this.findNextDiff(t,e,[])))),s.length>0&&(this.foundAll=!1,this.tracker.add(s),N(t,s,this.options))}while(s.length>0);return this.tracker.list},t.prototype.findNextDiff=function(t,e,s){var i,n;if(this.options.maxDepth&&s.length>this.options.maxDepth)return[];if(!t.outerDone){if(i=this.findOuterDiff(t,e,s),this.options.filterOuterDiff&&(n=this.options.filterOuterDiff(t,e,i))&&(i=n),i.length>0)return t.outerDone=!0,i;t.outerDone=!0}if(Object.prototype.hasOwnProperty.call(t,"data"))return[];if(!t.innerDone){if((i=this.findInnerDiff(t,e,s)).length>0)return i;t.innerDone=!0}if(this.options.valueDiffing&&!t.valueDone){if((i=this.findValueDiff(t,e,s)).length>0)return t.valueDone=!0,i;t.valueDone=!0}return[]},t.prototype.findOuterDiff=function(t,e,s){var i,n,a,o,r,l,d=[];if(t.nodeName!==e.nodeName){if(!s.length)throw new Error("Top level nodes have to be of the same kind.");return[(new y).setValue(this.options._const.action,this.options._const.replaceElement).setValue(this.options._const.oldValue,m(t)).setValue(this.options._const.newValue,m(e)).setValue(this.options._const.route,s)]}if(s.length&&this.options.diffcap<Math.abs((t.childNodes||[]).length-(e.childNodes||[]).length))return[(new y).setValue(this.options._const.action,this.options._const.replaceElement).setValue(this.options._const.oldValue,m(t)).setValue(this.options._const.newValue,m(e)).setValue(this.options._const.route,s)];if(Object.prototype.hasOwnProperty.call(t,"data")&&t.data!==e.data)return"#text"===t.nodeName?[(new y).setValue(this.options._const.action,this.options._const.modifyTextElement).setValue(this.options._const.route,s).setValue(this.options._const.oldValue,t.data).setValue(this.options._const.newValue,e.data)]:[(new y).setValue(this.options._const.action,this.options._const.modifyComment).setValue(this.options._const.route,s).setValue(this.options._const.oldValue,t.data).setValue(this.options._const.newValue,e.data)];for(n=t.attributes?Object.keys(t.attributes).sort():[],a=e.attributes?Object.keys(e.attributes).sort():[],o=n.length,l=0;l<o;l++)i=n[l],-1===(r=a.indexOf(i))?d.push((new y).setValue(this.options._const.action,this.options._const.removeAttribute).setValue(this.options._const.route,s).setValue(this.options._const.name,i).setValue(this.options._const.value,t.attributes[i])):(a.splice(r,1),t.attributes[i]!==e.attributes[i]&&d.push((new y).setValue(this.options._const.action,this.options._const.modifyAttribute).setValue(this.options._const.route,s).setValue(this.options._const.name,i).setValue(this.options._const.oldValue,t.attributes[i]).setValue(this.options._const.newValue,e.attributes[i])));for(o=a.length,l=0;l<o;l++)i=a[l],d.push((new y).setValue(this.options._const.action,this.options._const.addAttribute).setValue(this.options._const.route,s).setValue(this.options._const.name,i).setValue(this.options._const.value,e.attributes[i]));return d},t.prototype.findInnerDiff=function(t,e,s){var i=t.childNodes?t.childNodes.slice():[],n=e.childNodes?e.childNodes.slice():[],a=Math.max(i.length,n.length),o=Math.abs(i.length-n.length),r=[],l=0;if(!this.options.maxChildCount||a<this.options.maxChildCount){var d=Boolean(t.subsets&&t.subsetsAge--),c=d?t.subsets:t.childNodes&&e.childNodes?_(t,e):[];if(c.length>0&&(r=this.attemptGroupRelocation(t,e,c,s,d)).length>0)return r}for(var h=0;h<a;h+=1){var u=i[h],p=n[h];if(o&&(u&&!p?"#text"===u.nodeName?(r.push((new y).setValue(this.options._const.action,this.options._const.removeTextElement).setValue(this.options._const.route,s.concat(l)).setValue(this.options._const.value,u.data)),l-=1):(r.push((new y).setValue(this.options._const.action,this.options._const.removeElement).setValue(this.options._const.route,s.concat(l)).setValue(this.options._const.element,m(u))),l-=1):p&&!u&&("#text"===p.nodeName?r.push((new y).setValue(this.options._const.action,this.options._const.addTextElement).setValue(this.options._const.route,s.concat(l)).setValue(this.options._const.value,p.data)):r.push((new y).setValue(this.options._const.action,this.options._const.addElement).setValue(this.options._const.route,s.concat(l)).setValue(this.options._const.element,m(p))))),u&&p)if(!this.options.maxChildCount||a<this.options.maxChildCount)r=r.concat(this.findNextDiff(u,p,s.concat(l)));else if(!g(u,p))if(i.length>n.length)"#text"===u.nodeName?r.push((new y).setValue(this.options._const.action,this.options._const.removeTextElement).setValue(this.options._const.route,s.concat(l)).setValue(this.options._const.value,u.data)):r.push((new y).setValue(this.options._const.action,this.options._const.removeElement).setValue(this.options._const.element,m(u)).setValue(this.options._const.route,s.concat(l))),i.splice(h,1),h-=1,l-=1,o-=1;else if(i.length<n.length){var f=m(p);r=r.concat([(new y).setValue(this.options._const.action,this.options._const.addElement).setValue(this.options._const.element,f).setValue(this.options._const.route,s.concat(l))]),i.splice(h,0,f),o-=1}else r=r.concat([(new y).setValue(this.options._const.action,this.options._const.replaceElement).setValue(this.options._const.oldValue,m(u)).setValue(this.options._const.newValue,m(p)).setValue(this.options._const.route,s.concat(l))]);l+=1}return t.innerDone=!0,r},t.prototype.attemptGroupRelocation=function(t,e,s,i,n){for(var a,o,r,l,d,c,h=function(t,e,s){var i=t.childNodes?v(t.childNodes.length,!0):[],n=e.childNodes?v(e.childNodes.length,!0):[],a=0;return s.forEach((function(t){for(var e=t.oldValue+t.length,s=t.newValue+t.length,o=t.oldValue;o<e;o+=1)i[o]=a;for(o=t.newValue;o<s;o+=1)n[o]=a;a+=1})),{gaps1:i,gaps2:n}}(t,e,s),u=h.gaps1,p=h.gaps2,f=Math.min(u.length,p.length),g=[],_=0,w=0;_<f;w+=1,_+=1)if(!n||!0!==u[_]&&!0!==p[_])if(!0===u[_])if("#text"===(l=t.childNodes[w]).nodeName)if("#text"===e.childNodes[_].nodeName){if(l.data!==e.childNodes[_].data){for(c=w;t.childNodes.length>c+1&&"#text"===t.childNodes[c+1].nodeName;)if(c+=1,e.childNodes[_].data===t.childNodes[c].data){d=!0;break}if(!d)return g.push((new y).setValue(this.options._const.action,this.options._const.modifyTextElement).setValue(this.options._const.route,i.concat(_)).setValue(this.options._const.oldValue,l.data).setValue(this.options._const.newValue,e.childNodes[_].data)),g}}else g.push((new y).setValue(this.options._const.action,this.options._const.removeTextElement).setValue(this.options._const.route,i.concat(_)).setValue(this.options._const.value,l.data)),u.splice(_,1),f=Math.min(u.length,p.length),_-=1;else g.push((new y).setValue(this.options._const.action,this.options._const.removeElement).setValue(this.options._const.route,i.concat(_)).setValue(this.options._const.element,m(l))),u.splice(_,1),f=Math.min(u.length,p.length),_-=1;else if(!0===p[_])"#text"===(l=e.childNodes[_]).nodeName?(g.push((new y).setValue(this.options._const.action,this.options._const.addTextElement).setValue(this.options._const.route,i.concat(_)).setValue(this.options._const.value,l.data)),u.splice(_,0,!0),f=Math.min(u.length,p.length),w-=1):(g.push((new y).setValue(this.options._const.action,this.options._const.addElement).setValue(this.options._const.route,i.concat(_)).setValue(this.options._const.element,m(l))),u.splice(_,0,!0),f=Math.min(u.length,p.length),w-=1);else if(u[_]!==p[_]){if(g.length>0)return g;if(r=s[u[_]],(o=Math.min(r.newValue,t.childNodes.length-r.length))!==r.oldValue){a=!1;for(var x=0;x<r.length;x+=1)b(t.childNodes[o+x],t.childNodes[r.oldValue+x],{},!1,!0)||(a=!0);if(a)return[(new y).setValue(this.options._const.action,this.options._const.relocateGroup).setValue(this.options._const.groupLength,r.length).setValue(this.options._const.from,r.oldValue).setValue(this.options._const.to,o).setValue(this.options._const.route,i)]}}return g},t.prototype.findValueDiff=function(t,e,s){var i=[];return t.selected!==e.selected&&i.push((new y).setValue(this.options._const.action,this.options._const.modifySelected).setValue(this.options._const.oldValue,t.selected).setValue(this.options._const.newValue,e.selected).setValue(this.options._const.route,s)),(t.value||e.value)&&t.value!==e.value&&"OPTION"!==t.nodeName&&i.push((new y).setValue(this.options._const.action,this.options._const.modifyValue).setValue(this.options._const.oldValue,t.value||"").setValue(this.options._const.newValue,e.value||"").setValue(this.options._const.route,s)),t.checked!==e.checked&&i.push((new y).setValue(this.options._const.action,this.options._const.modifyChecked).setValue(this.options._const.oldValue,t.checked).setValue(this.options._const.newValue,e.checked).setValue(this.options._const.route,s)),i},t}(),S={debug:!1,diffcap:10,maxDepth:!1,maxChildCount:50,valueDiffing:!0,textDiff:function(t,e,s,i){t.data=i},preVirtualDiffApply:function(){},postVirtualDiffApply:function(){},preDiffApply:function(){},postDiffApply:function(){},filterOuterDiff:null,compress:!1,_const:!1,document:!("undefined"==typeof window||!window.document)&&window.document,components:[]},T=function(){function t(t){if(void 0===t&&(t={}),Object.entries(S).forEach((function(e){var s=e[0],i=e[1];Object.prototype.hasOwnProperty.call(t,s)||(t[s]=i)})),!t._const){var e=["addAttribute","modifyAttribute","removeAttribute","modifyTextElement","relocateGroup","removeElement","addElement","removeTextElement","addTextElement","replaceElement","modifyValue","modifyChecked","modifySelected","modifyComment","action","route","oldValue","newValue","element","group","groupLength","from","to","name","value","data","attributes","nodeName","childNodes","checked","selected"],s={};t.compress?e.forEach((function(t,e){return s[t]=e})):e.forEach((function(t){return s[t]=t})),t._const=s}this.options=t}return t.prototype.apply=function(t,e){return function(t,e,s){return e.every((function(e){return d(t,e,s)}))}(t,e,this.options)},t.prototype.undo=function(t,e){return function(t,e,s){(e=e.slice()).reverse(),e.forEach((function(e){!function(t,e,s){switch(e[s._const.action]){case s._const.addAttribute:e[s._const.action]=s._const.removeAttribute,d(t,e,s);break;case s._const.modifyAttribute:c(e,s._const.oldValue,s._const.newValue),d(t,e,s);break;case s._const.removeAttribute:e[s._const.action]=s._const.addAttribute,d(t,e,s);break;case s._const.modifyTextElement:case s._const.modifyValue:case s._const.modifyComment:case s._const.modifyChecked:case s._const.modifySelected:case s._const.replaceElement:c(e,s._const.oldValue,s._const.newValue),d(t,e,s);break;case s._const.relocateGroup:c(e,s._const.from,s._const.to),d(t,e,s);break;case s._const.removeElement:e[s._const.action]=s._const.addElement,d(t,e,s);break;case s._const.addElement:e[s._const.action]=s._const.removeElement,d(t,e,s);break;case s._const.removeTextElement:e[s._const.action]=s._const.addTextElement,d(t,e,s);break;case s._const.addTextElement:e[s._const.action]=s._const.removeTextElement,d(t,e,s);break;default:console.log("unknown action")}}(t,e,s)}))}(t,e,this.options)},t.prototype.diff=function(t,e){return new k(t,e,this.options).init()},t}();const A=(t,e,s,{classes:i,format:n,hiddenHeader:a,sortable:o,scrollY:r,type:l},{noColumnWidths:d,unhideHeader:c})=>({nodeName:"TR",childNodes:t.map(((t,h)=>{const u=e[h]||{type:l,format:n,sortable:!0,searchable:!0};if(u.hidden)return;const p={};if(u.sortable&&o&&(!r.length||c)&&(u.filter?p["data-filterable"]="true":p["data-sortable"]="true"),u.headerClass&&(p.class=u.headerClass),s.sort&&s.sort.column===h){const t="asc"===s.sort.dir?i.ascending:i.descending;p.class=p.class?`${p.class} ${t}`:t,p["aria-sort"]="asc"===s.sort.dir?"ascending":"descending"}else s.filters[h]&&(p.class=p.class?`${p.class} ${i.filterActive}`:i.filterActive);let f="";s.widths[h]&&!d&&(f+=`width: ${s.widths[h]}%;`),r.length&&!c&&(f+="padding-bottom: 0;padding-top: 0;border: 0;"),f.length&&(p.style=f),u.headerClass&&(p.class=u.headerClass);const m="html"===t.type?t.data:[{nodeName:"#text",data:t.text??String(t.data)}];return{nodeName:"TH",attributes:p,childNodes:!a&&!r.length||c?u.sortable&&o?[{nodeName:"a",attributes:{href:"#",class:u.filter?i.filter:i.sorter},childNodes:m}]:m:[{nodeName:"#text",data:""}]}})).filter((t=>t))}),P=(t,e,s,i,n,a,{classes:o,hiddenHeader:r,header:l,footer:d,format:c,sortable:h,scrollY:u,type:p,rowRender:f,tabIndex:m},{noColumnWidths:g,unhideHeader:b,renderHeader:v})=>{const _={nodeName:"TABLE",attributes:{...t},childNodes:[{nodeName:"TBODY",childNodes:s.map((({row:t,index:e})=>{const s={nodeName:"TR",attributes:{"data-index":String(e)},childNodes:t.map(((t,s)=>{const a=i[s]||{type:p,format:c,sortable:!0,searchable:!0};if(a.hidden)return;const o="html"===a.type?{nodeName:"TD",childNodes:t.data}:{nodeName:"TD",childNodes:[{nodeName:"#text",data:t.text??String(t.data)}]};if(l||d||!n.widths[s]||g||(o.attributes={style:`width: ${n.widths[s]}%;`}),a.cellClass&&(o.attributes||(o.attributes={}),o.attributes.class=a.cellClass),a.render){const i=a.render(t.data,o,e,s);if(i){if("string"!=typeof i)return i;{const t=L(`<td>${i}</td>`);1===t.childNodes.length&&["#text","#comment"].includes(t.childNodes[0].nodeName)?o.childNodes[0].data=i:o.childNodes=t.childNodes}}}return o})).filter((t=>t))};if(e===a&&(s.attributes.class=o.cursor),f){const i=f(t,s,e);if(i){if("string"!=typeof i)return i;{const t=L(`<tr>${i}</tr>`);!t.childNodes||1===t.childNodes.length&&["#text","#comment"].includes(t.childNodes[0].nodeName)?s.childNodes[0].data=i:s.childNodes=t.childNodes}}}return s}))}]};if(_.attributes.class=_.attributes.class?`${_.attributes.class} ${o.table}`:o.table,l||d||v){const t=A(e,i,n,{classes:o,hiddenHeader:r,sortable:h,scrollY:u},{noColumnWidths:g,unhideHeader:b});if(l||v){const e={nodeName:"THEAD",childNodes:[t]};!u.length&&!r||b||(e.attributes={style:"height: 0px;"}),_.childNodes.unshift(e)}if(d){const e={nodeName:"TFOOT",childNodes:[l?structuredClone(t):t]};!u.length&&!r||b||(e.attributes={style:"height: 0px;"}),_.childNodes.push(e)}}return!1!==m&&(_.attributes.tabindex=String(m)),_};"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof __webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self&&self;var H={},R={get exports(){return H},set exports(t){H=t}};R.exports=function(){var t=1e3,e=6e4,s=36e5,i="millisecond",n="second",a="minute",o="hour",r="day",l="week",d="month",c="quarter",h="year",u="date",p="Invalid Date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,m=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,g={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],s=t%100;return"["+t+(e[(s-20)%10]||e[s]||e[0])+"]"}},b=function(t,e,s){var i=String(t);return!i||i.length>=e?t:""+Array(e+1-i.length).join(s)+t},v={s:b,z:function(t){var e=-t.utcOffset(),s=Math.abs(e),i=Math.floor(s/60),n=s%60;return(e<=0?"+":"-")+b(i,2,"0")+":"+b(n,2,"0")},m:function t(e,s){if(e.date()<s.date())return-t(s,e);var i=12*(s.year()-e.year())+(s.month()-e.month()),n=e.clone().add(i,d),a=s-n<0,o=e.clone().add(i+(a?-1:1),d);return+(-(i+(s-n)/(a?n-o:o-n))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:d,y:h,w:l,d:r,D:u,h:o,m:a,s:n,ms:i,Q:c}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},_="en",w={};w[_]=g;var y=function(t){return t instanceof M},x=function t(e,s,i){var n;if(!e)return _;if("string"==typeof e){var a=e.toLowerCase();w[a]&&(n=a),s&&(w[a]=s,n=a);var o=e.split("-");if(!n&&o.length>1)return t(o[0])}else{var r=e.name;w[r]=e,n=r}return!i&&n&&(_=n),n||!i&&_},N=function(t,e){if(y(t))return t.clone();var s="object"==typeof e?e:{};return s.date=t,s.args=arguments,new M(s)},D=v;D.l=x,D.i=y,D.w=function(t,e){return N(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var M=function(){function g(t){this.$L=x(t.locale,null,!0),this.parse(t)}var b=g.prototype;return b.parse=function(t){this.$d=function(t){var e=t.date,s=t.utc;if(null===e)return new Date(NaN);if(D.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var i=e.match(f);if(i){var n=i[2]-1||0,a=(i[7]||"0").substring(0,3);return s?new Date(Date.UTC(i[1],n,i[3]||1,i[4]||0,i[5]||0,i[6]||0,a)):new Date(i[1],n,i[3]||1,i[4]||0,i[5]||0,i[6]||0,a)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},b.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},b.$utils=function(){return D},b.isValid=function(){return!(this.$d.toString()===p)},b.isSame=function(t,e){var s=N(t);return this.startOf(e)<=s&&s<=this.endOf(e)},b.isAfter=function(t,e){return N(t)<this.startOf(e)},b.isBefore=function(t,e){return this.endOf(e)<N(t)},b.$g=function(t,e,s){return D.u(t)?this[e]:this.set(s,t)},b.unix=function(){return Math.floor(this.valueOf()/1e3)},b.valueOf=function(){return this.$d.getTime()},b.startOf=function(t,e){var s=this,i=!!D.u(e)||e,c=D.p(t),p=function(t,e){var n=D.w(s.$u?Date.UTC(s.$y,e,t):new Date(s.$y,e,t),s);return i?n:n.endOf(r)},f=function(t,e){return D.w(s.toDate()[t].apply(s.toDate("s"),(i?[0,0,0,0]:[23,59,59,999]).slice(e)),s)},m=this.$W,g=this.$M,b=this.$D,v="set"+(this.$u?"UTC":"");switch(c){case h:return i?p(1,0):p(31,11);case d:return i?p(1,g):p(0,g+1);case l:var _=this.$locale().weekStart||0,w=(m<_?m+7:m)-_;return p(i?b-w:b+(6-w),g);case r:case u:return f(v+"Hours",0);case o:return f(v+"Minutes",1);case a:return f(v+"Seconds",2);case n:return f(v+"Milliseconds",3);default:return this.clone()}},b.endOf=function(t){return this.startOf(t,!1)},b.$set=function(t,e){var s,l=D.p(t),c="set"+(this.$u?"UTC":""),p=(s={},s[r]=c+"Date",s[u]=c+"Date",s[d]=c+"Month",s[h]=c+"FullYear",s[o]=c+"Hours",s[a]=c+"Minutes",s[n]=c+"Seconds",s[i]=c+"Milliseconds",s)[l],f=l===r?this.$D+(e-this.$W):e;if(l===d||l===h){var m=this.clone().set(u,1);m.$d[p](f),m.init(),this.$d=m.set(u,Math.min(this.$D,m.daysInMonth())).$d}else p&&this.$d[p](f);return this.init(),this},b.set=function(t,e){return this.clone().$set(t,e)},b.get=function(t){return this[D.p(t)]()},b.add=function(i,c){var u,p=this;i=Number(i);var f=D.p(c),m=function(t){var e=N(p);return D.w(e.date(e.date()+Math.round(t*i)),p)};if(f===d)return this.set(d,this.$M+i);if(f===h)return this.set(h,this.$y+i);if(f===r)return m(1);if(f===l)return m(7);var g=(u={},u[a]=e,u[o]=s,u[n]=t,u)[f]||1,b=this.$d.getTime()+i*g;return D.w(b,this)},b.subtract=function(t,e){return this.add(-1*t,e)},b.format=function(t){var e=this,s=this.$locale();if(!this.isValid())return s.invalidDate||p;var i=t||"YYYY-MM-DDTHH:mm:ssZ",n=D.z(this),a=this.$H,o=this.$m,r=this.$M,l=s.weekdays,d=s.months,c=function(t,s,n,a){return t&&(t[s]||t(e,i))||n[s].slice(0,a)},h=function(t){return D.s(a%12||12,t,"0")},u=s.meridiem||function(t,e,s){var i=t<12?"AM":"PM";return s?i.toLowerCase():i},f={YY:String(this.$y).slice(-2),YYYY:this.$y,M:r+1,MM:D.s(r+1,2,"0"),MMM:c(s.monthsShort,r,d,3),MMMM:c(d,r),D:this.$D,DD:D.s(this.$D,2,"0"),d:String(this.$W),dd:c(s.weekdaysMin,this.$W,l,2),ddd:c(s.weekdaysShort,this.$W,l,3),dddd:l[this.$W],H:String(a),HH:D.s(a,2,"0"),h:h(1),hh:h(2),a:u(a,o,!0),A:u(a,o,!1),m:String(o),mm:D.s(o,2,"0"),s:String(this.$s),ss:D.s(this.$s,2,"0"),SSS:D.s(this.$ms,3,"0"),Z:n};return i.replace(m,(function(t,e){return e||f[t]||n.replace(":","")}))},b.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},b.diff=function(i,u,p){var f,m=D.p(u),g=N(i),b=(g.utcOffset()-this.utcOffset())*e,v=this-g,_=D.m(this,g);return _=(f={},f[h]=_/12,f[d]=_,f[c]=_/3,f[l]=(v-b)/6048e5,f[r]=(v-b)/864e5,f[o]=v/s,f[a]=v/e,f[n]=v/t,f)[m]||v,p?_:D.a(_)},b.daysInMonth=function(){return this.endOf(d).$D},b.$locale=function(){return w[this.$L]},b.locale=function(t,e){if(!t)return this.$L;var s=this.clone(),i=x(t,e,!0);return i&&(s.$L=i),s},b.clone=function(){return D.w(this.$d,this)},b.toDate=function(){return new Date(this.valueOf())},b.toJSON=function(){return this.isValid()?this.toISOString():null},b.toISOString=function(){return this.$d.toISOString()},b.toString=function(){return this.$d.toUTCString()},g}(),E=M.prototype;return N.prototype=E,[["$ms",i],["$s",n],["$m",a],["$H",o],["$W",r],["$M",d],["$y",h],["$D",u]].forEach((function(t){E[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),N.extend=function(t,e){return t.$i||(t(e,M,N),t.$i=!0),N},N.locale=x,N.isDayjs=y,N.unix=function(t){return N(1e3*t)},N.en=w[_],N.Ls=w,N.p={},N}();var I=H,Y={},j={get exports(){return Y},set exports(t){Y=t}};j.exports=function(){var t={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},e=/(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,s=/\d\d/,i=/\d\d?/,n=/\d*[^-_:/,()\s\d]+/,a={},o=function(t){return(t=+t)+(t>68?1900:2e3)},r=function(t){return function(e){this[t]=+e}},l=[/[+-]\d\d:?(\d\d)?|Z/,function(t){(this.zone||(this.zone={})).offset=function(t){if(!t)return 0;if("Z"===t)return 0;var e=t.match(/([+-]|\d\d)/g),s=60*e[1]+(+e[2]||0);return 0===s?0:"+"===e[0]?-s:s}(t)}],d=function(t){var e=a[t];return e&&(e.indexOf?e:e.s.concat(e.f))},c=function(t,e){var s,i=a.meridiem;if(i){for(var n=1;n<=24;n+=1)if(t.indexOf(i(n,0,e))>-1){s=n>12;break}}else s=t===(e?"pm":"PM");return s},h={A:[n,function(t){this.afternoon=c(t,!1)}],a:[n,function(t){this.afternoon=c(t,!0)}],S:[/\d/,function(t){this.milliseconds=100*+t}],SS:[s,function(t){this.milliseconds=10*+t}],SSS:[/\d{3}/,function(t){this.milliseconds=+t}],s:[i,r("seconds")],ss:[i,r("seconds")],m:[i,r("minutes")],mm:[i,r("minutes")],H:[i,r("hours")],h:[i,r("hours")],HH:[i,r("hours")],hh:[i,r("hours")],D:[i,r("day")],DD:[s,r("day")],Do:[n,function(t){var e=a.ordinal,s=t.match(/\d+/);if(this.day=s[0],e)for(var i=1;i<=31;i+=1)e(i).replace(/\[|\]/g,"")===t&&(this.day=i)}],M:[i,r("month")],MM:[s,r("month")],MMM:[n,function(t){var e=d("months"),s=(d("monthsShort")||e.map((function(t){return t.slice(0,3)}))).indexOf(t)+1;if(s<1)throw new Error;this.month=s%12||s}],MMMM:[n,function(t){var e=d("months").indexOf(t)+1;if(e<1)throw new Error;this.month=e%12||e}],Y:[/[+-]?\d+/,r("year")],YY:[s,function(t){this.year=o(t)}],YYYY:[/\d{4}/,r("year")],Z:l,ZZ:l};function u(s){var i,n;i=s,n=a&&a.formats;for(var o=(s=i.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(e,s,i){var a=i&&i.toUpperCase();return s||n[i]||t[i]||n[a].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(t,e,s){return e||s.slice(1)}))}))).match(e),r=o.length,l=0;l<r;l+=1){var d=o[l],c=h[d],u=c&&c[0],p=c&&c[1];o[l]=p?{regex:u,parser:p}:d.replace(/^\[|\]$/g,"")}return function(t){for(var e={},s=0,i=0;s<r;s+=1){var n=o[s];if("string"==typeof n)i+=n.length;else{var a=n.regex,l=n.parser,d=t.slice(i),c=a.exec(d)[0];l.call(e,c),t=t.replace(c,"")}}return function(t){var e=t.afternoon;if(void 0!==e){var s=t.hours;e?s<12&&(t.hours+=12):12===s&&(t.hours=0),delete t.afternoon}}(e),e}}return function(t,e,s){s.p.customParseFormat=!0,t&&t.parseTwoDigitYear&&(o=t.parseTwoDigitYear);var i=e.prototype,n=i.parse;i.parse=function(t){var e=t.date,i=t.utc,o=t.args;this.$u=i;var r=o[1];if("string"==typeof r){var l=!0===o[2],d=!0===o[3],c=l||d,h=o[2];d&&(h=o[2]),a=this.$locale(),!l&&h&&(a=s.Ls[h]),this.$d=function(t,e,s){try{if(["x","X"].indexOf(e)>-1)return new Date(("X"===e?1e3:1)*t);var i=u(e)(t),n=i.year,a=i.month,o=i.day,r=i.hours,l=i.minutes,d=i.seconds,c=i.milliseconds,h=i.zone,p=new Date,f=o||(n||a?1:p.getDate()),m=n||p.getFullYear(),g=0;n&&!a||(g=a>0?a-1:p.getMonth());var b=r||0,v=l||0,_=d||0,w=c||0;return h?new Date(Date.UTC(m,g,f,b,v,_,w+60*h.offset*1e3)):s?new Date(Date.UTC(m,g,f,b,v,_,w)):new Date(m,g,f,b,v,_,w)}catch(t){return new Date("")}}(e,r,i),this.init(),h&&!0!==h&&(this.$L=this.locale(h).$L),c&&e!=this.format(r)&&(this.$d=new Date("")),a={}}else if(r instanceof Array)for(var p=r.length,f=1;f<=p;f+=1){o[1]=r[f-1];var m=s.apply(this,o);if(m.isValid()){this.$d=m.$d,this.$L=m.$L,this.init();break}f===p&&(this.$d=new Date(""))}else n.call(this,t)}}}();var q=Y;I.extend(q);const B=(t,e)=>{let s;if(e)switch(e){case"ISO_8601":s=t;break;case"RFC_2822":s=I(t.slice(5),"DD MMM YYYY HH:mm:ss ZZ").unix();break;case"MYSQL":s=I(t,"YYYY-MM-DD hh:mm:ss").unix();break;case"UNIX":s=I(t).unix();break;default:s=I(t,e,!0).valueOf()}return s},F=(t,e)=>{if(t?.constructor===Object&&Object.prototype.hasOwnProperty.call(t,"data")&&!Object.keys(t).find((t=>!["text","order","data"].includes(t))))return t;const s={data:t};switch(e.type){case"string":"string"!=typeof t&&(s.text=String(s.data),s.order=s.text);break;case"date":e.format&&(s.order=B(String(s.data),e.format));break;case"number":s.text=String(s.data),s.data=parseInt(s.data,10);break;case"html":{const t=Array.isArray(s.data)?{nodeName:"TD",childNodes:s.data}:L(`<td>${String(s.data)}</td>`);s.data=t.childNodes||[];const e=i(t);s.text=e,s.order=e;break}case"boolean":"string"==typeof s.data&&(s.data=s.data.toLowerCase().trim()),s.data=!["false",!1,null,void 0,0].includes(s.data),s.order=s.data?1:0,s.text=String(s.data);break;case"other":s.text="",s.order=0;break;default:s.text=JSON.stringify(s.data)}return s},z=t=>{if(t instanceof Object&&t.constructor===Object&&t.hasOwnProperty("data")&&("string"==typeof t.text||"string"==typeof t.data))return t;const e={data:t};if("string"==typeof t){if(t.length){const s=L(`<th>${t}</th>`);if(s.childNodes&&(1!==s.childNodes.length||"#text"!==s.childNodes[0].nodeName)){e.data=s.childNodes,e.type="html";const t=i(s);e.text=t}}}else[null,void 0].includes(t)?e.text="":e.text=JSON.stringify(t);return e},U=(t,e,s,n,a)=>{const o={data:[],headings:[]};t.headings?o.headings=t.headings.map((t=>z(t))):e?.tHead?o.headings=Array.from(e.tHead.querySelectorAll("th")).map(((t,e)=>{const o=(t=>{const e=D(t);let s;return s=!e.childNodes||1===e.childNodes.length&&"#text"===e.childNodes[0].nodeName?{data:t.innerText,type:"string"}:{data:e.childNodes,type:"html",text:i(e)},s})(t);s[e]||(s[e]={type:n,format:a,searchable:!0,sortable:!0});const r=s[e];return"false"!==t.dataset.sortable?.trim().toLowerCase()&&"false"!==t.dataset.sort?.trim().toLowerCase()||(r.sortable=!1),"false"===t.dataset.searchable?.trim().toLowerCase()&&(r.searchable=!1),"true"!==t.dataset.hidden?.trim().toLowerCase()&&"true"!==t.getAttribute("hidden")?.trim().toLowerCase()||(r.hidden=!0),["number","string","html","date","boolean","other"].includes(t.dataset.type)&&(r.type=t.dataset.type,"date"===r.type&&t.dataset.format&&(r.format=t.dataset.format)),o})):t.data?.length?o.headings=t.data[0].map((t=>z(""))):e?.tBodies.length&&(o.headings=Array.from(e.tBodies[0].rows[0].cells).map((t=>z(""))));for(let t=0;t<o.headings.length;t++)s[t]||(s[t]={type:n,format:a,sortable:!0,searchable:!0});if(t.data?o.data=t.data.map((t=>t.map(((t,e)=>F(t,s[e]))))):e?.tBodies?.length&&(o.data=Array.from(e.tBodies[0].rows).map((t=>Array.from(t.cells).map(((t,e)=>{const i=t.dataset.content?F(t.dataset.content,s[e]):((t,e)=>{let s;switch(e.type){case"string":s={data:t.innerText};break;case"date":{const i=t.innerText;s={data:i,order:B(i,e.format)};break}case"number":s={data:parseInt(t.innerText,10),text:t.innerText};break;case"boolean":{const e=!["false","0","null","undefined"].includes(t.innerText.toLowerCase().trim());s={data:e,order:e?1:0,text:e?"1":"0"};break}default:s={data:D(t).childNodes||[],text:t.innerText,order:t.innerText}}return s})(t,s[e]);return t.dataset.order&&(i.order=isNaN(parseFloat(t.dataset.order))?t.dataset.order:parseFloat(t.dataset.order)),i}))))),o.data.length&&o.data[0].length!==o.headings.length)throw new Error("Data heading length mismatch.");return o};class W{constructor(t){this.dt=t,this.cursor=!1}setCursor(t=!1){if(t===this.cursor)return;const e=this.cursor;if(this.cursor=t,this.dt._renderTable(),!1!==t&&this.dt.options.scrollY){const t=this.dt.dom.querySelector(`tr.${this.dt.options.classes.cursor}`);t&&t.scrollIntoView({block:"nearest"})}this.dt.emit("datatable.cursormove",this.cursor,e)}add(t){const e=t.map(((t,e)=>{const s=this.dt.columns.settings[e];return F(t,s)}));this.dt.data.data.push(e),this.dt.data.data.length&&(this.dt.hasRows=!0),this.dt.update(!0)}remove(t){if(!Array.isArray(t))return this.remove([t]);this.dt.data.data=this.dt.data.data.filter(((e,s)=>!t.includes(s))),this.dt.data.data.length||(this.dt.hasRows=!1),this.dt.update(!0)}findRowIndex(t,e){return this.dt.data.data.findIndex((s=>(s[t].text??String(s[t].data)).toLowerCase().includes(String(e).toLowerCase())))}findRow(t,e){const s=this.findRowIndex(t,e);if(s<0)return{index:-1,row:null,cols:[]};const i=this.dt.data.data[s],n=i.map((t=>t.data));return{index:s,row:i,cols:n}}updateRow(t,e){const s=e.map(((t,e)=>{const s=this.dt.columns.settings[e];return F(t,s)}));this.dt.data.data.splice(t,1,s),this.dt.update(!0)}}class J{constructor(t){this.dt=t,this.init()}init(){[this.settings,this._state]=((t=[],e,s)=>{let i=[],n=!1;const a=[];return t.forEach((t=>{(Array.isArray(t.select)?t.select:[t.select]).forEach((o=>{i[o]||(i[o]={type:t.type||e,sortable:!0,searchable:!0});const r=i[o];t.render&&(r.render=t.render),t.format?r.format=t.format:"date"===t.type&&(r.format=s),t.cellClass&&(r.cellClass=t.cellClass),t.headerClass&&(r.headerClass=t.headerClass),t.locale&&(r.locale=t.locale),!1===t.sortable?r.sortable=!1:(t.numeric&&(r.numeric=t.numeric),t.caseFirst&&(r.caseFirst=t.caseFirst)),!1===t.searchable?r.searchable=!1:t.sensitivity&&(r.sensitivity=t.sensitivity),(r.searchable||r.sortable)&&t.ignorePunctuation&&(r.ignorePunctuation=t.ignorePunctuation),t.hidden&&(r.hidden=!0),t.filter&&(r.filter=t.filter),t.sortSequence&&(r.sortSequence=t.sortSequence),t.sort&&(t.filter?a[o]=t.sort:n={column:o,dir:t.sort})}))})),i=i.map((t=>t||{type:e,format:"date"===e?s:void 0,sortable:!0,searchable:!0})),[i,{filters:a,sort:n,widths:[]}]})(this.dt.options.columns,this.dt.options.type,this.dt.options.format)}swap(t){if(2===t.length){const e=this.dt.data.headings.map(((t,e)=>e)),s=t[0],i=t[1],n=e[i];return e[i]=e[s],e[s]=n,this.order(e)}}order(t){this.dt.data.headings=t.map((t=>this.dt.data.headings[t])),this.dt.data.data=this.dt.data.data.map((e=>t.map((t=>e[t])))),this.settings=t.map((t=>this.settings[t])),this.dt.update()}hide(t){t.length&&(t.forEach((t=>{this.settings[t]||(this.settings[t]={type:"string"});this.settings[t].hidden=!0})),this.dt.update())}show(t){t.length&&(t.forEach((t=>{this.settings[t]||(this.settings[t]={type:"string",sortable:!0});delete this.settings[t].hidden})),this.dt.update())}visible(t){return Array.isArray(t)?t.map((t=>!this.settings[t]?.hidden)):!this.settings[t]?.hidden}add(t){const e=this.dt.data.headings.length;if(this.dt.data.headings=this.dt.data.headings.concat([z(t.heading)]),this.dt.data.data=this.dt.data.data.map(((e,s)=>e.concat([F(t.data[s],t)]))),this.settings[e]={type:t.type||"string",sortable:!0,searchable:!0},t.type||t.format||t.sortable||t.render||t.filter){const s=this.settings[e];t.render&&(s.render=t.render),t.format&&(s.format=t.format),t.cellClass&&(s.cellClass=t.cellClass),t.headerClass&&(s.headerClass=t.headerClass),t.locale&&(s.locale=t.locale),!1===t.sortable?s.sortable=!1:(t.numeric&&(s.numeric=t.numeric),t.caseFirst&&(s.caseFirst=t.caseFirst)),!1===t.searchable?s.searchable=!1:t.sensitivity&&(s.sensitivity=t.sensitivity),(s.searchable||s.sortable)&&t.ignorePunctuation&&(s.ignorePunctuation=t.ignorePunctuation),t.hidden&&(s.hidden=!0),t.filter&&(s.filter=t.filter),t.sortSequence&&(s.sortSequence=t.sortSequence)}this.dt.update(!0)}remove(t){if(!Array.isArray(t))return this.remove([t]);this.dt.data.headings=this.dt.data.headings.filter(((e,s)=>!t.includes(s))),this.dt.data.data=this.dt.data.data.map((e=>e.filter(((e,s)=>!t.includes(s))))),this.dt.update(!0)}filter(t,e=!1){if(!this.settings[t]?.filter?.length)return;const s=this._state.filters[t];let i;if(s){let e=!1;i=this.settings[t].filter.find((t=>!!e||(t===s&&(e=!0),!1)))}else{const e=this.settings[t].filter;i=e?e[0]:void 0}i?this._state.filters[t]=i:s&&(this._state.filters[t]=void 0),this.dt._currentPage=1,this.dt.update(),e||this.dt.emit("datatable.filter",t,i)}sort(t,e,s=!1){const i=this.settings[t];if(s||this.dt.emit("datatable.sorting",t,e),!e){const t=!!this._state.sort&&this._state.sort?.dir,s=i?.sortSequence||["asc","desc"];if(t){const i=s.indexOf(t);e=-1===i?"asc":i===s.length-1?s[0]:s[i+1]}else e=s.length?s[0]:"asc"}const n=!!["string","html"].includes(i.type)&&new Intl.Collator(i.locale||this.dt.options.locale,{usage:"sort",numeric:i.numeric||this.dt.options.numeric,caseFirst:i.caseFirst||this.dt.options.caseFirst,ignorePunctuation:i.ignorePunctuation||this.dt.options.ignorePunctuation});this.dt.data.data.sort(((s,i)=>{let a=s[t].order||s[t].data,o=i[t].order||i[t].data;if("desc"===e){const t=a;a=o,o=t}return n?n.compare(String(a),String(o)):a<o?-1:a>o?1:0})),this._state.sort={column:t,dir:e},this.dt._searchQuery?(this.dt.search(this.dt._searchQuery),this.dt.emit("datatable.sort",t,e)):s||(this.dt._currentPage=1,this.dt.update(),this.dt.emit("datatable.sort",t,e))}_measureWidths(){const t=this.dt.data.headings.filter(((t,e)=>!this.settings[e]?.hidden));if((this.dt.options.scrollY.length||this.dt.options.fixedColumns)&&t?.length){this._state.widths=[];const t={noPaging:!0};if(this.dt.options.header||this.dt.options.footer){this.dt.options.scrollY.length&&(t.unhideHeader=!0),this.dt.headerDOM&&this.dt.headerDOM.parentElement.removeChild(this.dt.headerDOM),t.noColumnWidths=!0,this.dt._renderTable(t);const e=Array.from(this.dt.dom.querySelector("thead, tfoot")?.firstElementChild?.querySelectorAll("th")||[]);let s=0;const i=this.dt.data.headings.map(((t,i)=>{if(this.settings[i]?.hidden)return 0;const n=e[s].offsetWidth;return s+=1,n})),n=i.reduce(((t,e)=>t+e),0);this._state.widths=i.map((t=>t/n*100))}else{t.renderHeader=!0,this.dt._renderTable(t);const e=Array.from(this.dt.dom.querySelector("thead, tfoot")?.firstElementChild?.querySelectorAll("th")||[]);let s=0;const i=this.dt.data.headings.map(((t,i)=>{if(this.settings[i]?.hidden)return 0;const n=e[s].offsetWidth;return s+=1,n})),n=i.reduce(((t,e)=>t+e),0);this._state.widths=i.map((t=>t/n*100))}this.dt._renderTable()}}}const Z={sortable:!0,locale:"en",numeric:!0,caseFirst:"false",searchable:!0,sensitivity:"base",ignorePunctuation:!0,destroyable:!0,data:{},type:"html",format:"YYYY-MM-DD",columns:[],paging:!0,perPage:10,perPageSelect:[5,10,15,20,25],nextPrev:!0,firstLast:!1,prevText:"‹",nextText:"›",firstText:"«",lastText:"»",ellipsisText:"…",truncatePager:!0,pagerDelta:2,scrollY:"",fixedColumns:!0,fixedHeight:!1,footer:!1,header:!0,hiddenHeader:!1,rowNavigation:!1,tabIndex:!1,pagerRender:!1,rowRender:!1,tableRender:!1,labels:{placeholder:"Search...",perPage:"entries per page",noRows:"No entries found",noResults:"No results match your search query",info:"Showing {start} to {end} of {rows} entries"},template:t=>`<div class='${t.classes.top}'>\n    ${t.paging&&t.perPageSelect?`<div class='${t.classes.dropdown}'>\n            <label>\n                <select class='${t.classes.selector}'></select> ${t.labels.perPage}\n            </label>\n        </div>`:""}\n    ${t.searchable?`<div class='${t.classes.search}'>\n            <input class='${t.classes.input}' placeholder='${t.labels.placeholder}' type='text'>\n        </div>`:""}\n</div>\n<div class='${t.classes.container}'${t.scrollY.length?` style='height: ${t.scrollY}; overflow-Y: auto;'`:""}></div>\n<div class='${t.classes.bottom}'>\n    ${t.paging?`<div class='${t.classes.info}'></div>`:""}\n    <nav class='${t.classes.pagination}'></nav>\n</div>`,classes:{active:"datatable-active",ascending:"datatable-ascending",bottom:"datatable-bottom",container:"datatable-container",cursor:"datatable-cursor",descending:"datatable-descending",disabled:"datatable-disabled",dropdown:"datatable-dropdown",ellipsis:"datatable-ellipsis",filter:"datatable-filter",filterActive:"datatable-filter-active",empty:"datatable-empty",headercontainer:"datatable-headercontainer",hidden:"datatable-hidden",info:"datatable-info",input:"datatable-input",loading:"datatable-loading",pagination:"datatable-pagination",paginationList:"datatable-pagination-list",paginationListItem:"datatable-pagination-list-item",paginationListItemLink:"datatable-pagination-list-item-link",search:"datatable-search",selector:"datatable-selector",sorter:"datatable-sorter",table:"datatable-table",top:"datatable-top",wrapper:"datatable-wrapper"}},Q=(t,e,s,i={})=>({nodeName:"LI",attributes:{class:i.active&&!i.hidden?`${s.classes.paginationListItem} ${s.classes.active}`:i.hidden?`${s.classes.paginationListItem} ${s.classes.hidden} ${s.classes.disabled}`:s.classes.paginationListItem},childNodes:[{nodeName:"A",attributes:{"data-page":String(t),class:s.classes.paginationListItemLink},childNodes:[{nodeName:"#text",data:e}]}]}),X=(t,e,s,i,n)=>{let a=[];if(n.firstLast&&a.push(Q(1,n.firstText,n)),n.nextPrev){const e=t?1:s-1;a.push(Q(e,n.prevText,n,{hidden:t}))}let o=[...Array(i).keys()].map((t=>Q(t+1,String(t+1),n,{active:t===s-1})));if(n.truncatePager&&(o=((t,e,s,i)=>{const n=i.pagerDelta,a=i.classes,o=i.ellipsisText,r=2*n;let l=e-n,d=e+n;e<4-n+r?d=3+r:e>s-(3-n+r)&&(l=s-(2+r));const c=[];for(let e=1;e<=s;e++)if(1==e||e==s||e>=l&&e<=d){const s=t[e-1];c.push(s)}let h;const u=[];return c.forEach((e=>{const s=parseInt(e.childNodes[0].attributes["data-page"],10);if(h){const e=parseInt(h.childNodes[0].attributes["data-page"],10);if(s-e==2)u.push(t[e]);else if(s-e!=1){const t={nodeName:"LI",attributes:{class:`${a.paginationListItem} ${a.ellipsis} ${a.disabled}`},childNodes:[{nodeName:"A",attributes:{class:a.paginationListItemLink},childNodes:[{nodeName:"#text",data:o}]}]};u.push(t)}}u.push(e),h=e})),u})(o,s,i,n)),a=a.concat(o),n.nextPrev){const t=e?i:s+1;a.push(Q(t,n.nextText,n,{hidden:e}))}n.firstLast&&a.push(Q(i,n.lastText,n));return{nodeName:"UL",attributes:{class:n.classes.paginationList},childNodes:o.length>1?a:[]}};class G{constructor(t,e={}){const s="string"==typeof t?document.querySelector(t):t;s instanceof HTMLTableElement?this.dom=s:(this.dom=document.createElement("table"),s.appendChild(this.dom));const i={...Z.labels,...e.labels},n={...Z.classes,...e.classes};this.options={...Z,...e,labels:i,classes:n},this._initialInnerHTML=this.options.destroyable?this.dom.innerHTML:"",this.options.tabIndex?this.dom.tabIndex=this.options.tabIndex:this.options.rowNavigation&&-1===this.dom.tabIndex&&(this.dom.tabIndex=0),this._listeners={onResize:()=>this._onResize()},this._dd=new T,this.initialized=!1,this._events={},this._currentPage=0,this.onFirstPage=!0,this.hasHeadings=!1,this.hasRows=!1,this.init()}init(){if(this.initialized||this.dom.classList.contains(this.options.classes.table))return!1;this._virtualDOM=D(this.dom),this._tableAttributes={...this._virtualDOM.attributes},this.rows=new W(this),this.columns=new J(this),this.data=U(this.options.data,this.dom,this.columns.settings,this.options.type,this.options.format),this._render(),setTimeout((()=>{this.emit("datatable.init"),this.initialized=!0}),10)}_render(){this.wrapperDOM=s("div",{class:`${this.options.classes.wrapper} ${this.options.classes.loading}`}),this.wrapperDOM.innerHTML=this.options.template(this.options);const t=this.wrapperDOM.querySelector(`select.${this.options.classes.selector}`);t&&this.options.paging&&this.options.perPageSelect?this.options.perPageSelect.forEach((e=>{const[s,i]=Array.isArray(e)?[e[0],e[1]]:[String(e),e],n=i===this.options.perPage,a=new Option(s,String(i),n,n);t.appendChild(a)})):t&&t.parentElement.removeChild(t),this.containerDOM=this.wrapperDOM.querySelector(`.${this.options.classes.container}`),this._pagerDOMs=[],Array.from(this.wrapperDOM.querySelectorAll(`.${this.options.classes.pagination}`)).forEach((t=>{t instanceof HTMLElement&&(t.innerHTML=`<ul class="${this.options.classes.paginationList}"></ul>`,this._pagerDOMs.push(t.firstElementChild))})),this._virtualPagerDOM={nodeName:"UL",attributes:{class:this.options.classes.paginationList}},this._label=this.wrapperDOM.querySelector(`.${this.options.classes.info}`),this.dom.parentElement.replaceChild(this.wrapperDOM,this.dom),this.containerDOM.appendChild(this.dom),this._rect=this.dom.getBoundingClientRect(),this._fixHeight(),this.options.header||this.wrapperDOM.classList.add("no-header"),this.options.footer||this.wrapperDOM.classList.add("no-footer"),this.options.sortable&&this.wrapperDOM.classList.add("sortable"),this.options.searchable&&this.wrapperDOM.classList.add("searchable"),this.options.fixedHeight&&this.wrapperDOM.classList.add("fixed-height"),this.options.fixedColumns&&this.wrapperDOM.classList.add("fixed-columns"),this._bindEvents(),this.columns._state.sort&&this.columns.sort(this.columns._state.sort.column,this.columns._state.sort.dir,!0),this.update(!0)}_renderTable(t={}){let e=P(this._tableAttributes,this.data.headings,(this.options.paging||this._searchQuery)&&this._currentPage&&this.pages.length&&!t.noPaging?this.pages[this._currentPage-1]:this.data.data.map(((t,e)=>({row:t,index:e}))),this.columns.settings,this.columns._state,this.rows.cursor,this.options,t);if(this.options.tableRender){const t=this.options.tableRender(this.data,e,"main");t&&(e=t)}const s=this._dd.diff(this._virtualDOM,e);this._dd.apply(this.dom,s),this._virtualDOM=e}_renderPage(t=!1){this.hasRows&&this.totalPages?(this._currentPage>this.totalPages&&(this._currentPage=1),this._renderTable(),this.onFirstPage=1===this._currentPage,this.onLastPage=this._currentPage===this.lastPage):this.setMessage(this.options.labels.noRows);let e,s=0,i=0,n=0;if(this.totalPages&&(s=this._currentPage-1,i=s*this.options.perPage,n=i+this.pages[s].length,i+=1,e=this._searchQuery?this._searchData.length:this.data.data.length),this._label&&this.options.labels.info.length){const t=this.options.labels.info.replace("{start}",String(i)).replace("{end}",String(n)).replace("{page}",String(this._currentPage)).replace("{pages}",String(this.totalPages)).replace("{rows}",String(e));this._label.innerHTML=e?t:""}if(1==this._currentPage&&this._fixHeight(),this.options.rowNavigation&&this._currentPage&&(!this.rows.cursor||!this.pages[this._currentPage-1].find((t=>t.index===this.rows.cursor)))){const e=this.pages[this._currentPage-1];e.length&&(t?this.rows.setCursor(e[e.length-1].index):this.rows.setCursor(e[0].index))}}_renderPagers(){if(!this.options.paging)return;let t=X(this.onFirstPage,this.onLastPage,this._currentPage,this.totalPages,this.options);if(this.options.pagerRender){const e=this.options.pagerRender([this.onFirstPage,this.onLastPage,this._currentPage,this.totalPages],t);e&&(t=e)}const e=this._dd.diff(this._virtualPagerDOM,t);this._pagerDOMs.forEach((t=>{this._dd.apply(t,e)})),this._virtualPagerDOM=t}_renderSeparateHeader(){const t=this.dom.parentElement;this.headerDOM||(this.headerDOM=document.createElement("div"),this._virtualHeaderDOM={nodeName:"DIV"}),t.parentElement.insertBefore(this.headerDOM,t);let e={nodeName:"TABLE",attributes:{class:this.options.classes.table},childNodes:[{nodeName:"THEAD",childNodes:[A(this.data.headings,this.columns.settings,this.columns._state,this.options,{unhideHeader:!0})]}]};if(this.options.tableRender){const t=this.options.tableRender(this.data,e,"header");t&&(e=t)}const s={nodeName:"DIV",attributes:{class:this.options.classes.headercontainer},childNodes:[e]},i=this._dd.diff(this._virtualHeaderDOM,s);this._dd.apply(this.headerDOM,i),this._virtualHeaderDOM=s;const n=this.headerDOM.firstElementChild.clientWidth-this.dom.clientWidth;if(n){const t=structuredClone(this._virtualHeaderDOM);t.attributes.style=`padding-right: ${n}px;`;const e=this._dd.diff(this._virtualHeaderDOM,t);this._dd.apply(this.headerDOM,e),this._virtualHeaderDOM=t}t.scrollHeight>t.clientHeight&&(t.style.overflowY="scroll")}_bindEvents(){if(this.options.perPageSelect){const t=this.wrapperDOM.querySelector(`select.${this.options.classes.selector}`);t&&t instanceof HTMLSelectElement&&t.addEventListener("change",(()=>{this.options.perPage=parseInt(t.value,10),this.update(),this._fixHeight(),this.emit("datatable.perpage",this.options.perPage)}),!1)}this.options.searchable&&(this._input=this.wrapperDOM.querySelector(`.${this.options.classes.input}`),this._input&&this._input.addEventListener("keyup",(()=>this.search(this._input.value)),!1)),this.wrapperDOM.addEventListener("click",(t=>{const e=t.target.closest("a");if(e)if(e.hasAttribute("data-page"))this.page(parseInt(e.getAttribute("data-page"),10)),t.preventDefault();else if(e.classList.contains(this.options.classes.sorter)){const s=Array.from(e.parentElement.parentElement.children).indexOf(e.parentElement),i=a(s,this.columns.settings);this.columns.sort(i),t.preventDefault()}else if(e.classList.contains(this.options.classes.filter)){const s=Array.from(e.parentElement.parentElement.children).indexOf(e.parentElement),i=a(s,this.columns.settings);this.columns.filter(i),t.preventDefault()}}),!1),this.options.rowNavigation?(this.dom.addEventListener("keydown",(t=>{if("ArrowUp"===t.key){let e;t.preventDefault(),t.stopPropagation(),this.pages[this._currentPage-1].find((t=>t.index===this.rows.cursor||(e=t,!1))),e?this.rows.setCursor(e.index):this.onFirstPage||this.page(this._currentPage-1,!0)}else if("ArrowDown"===t.key){let e;t.preventDefault(),t.stopPropagation();const s=this.pages[this._currentPage-1].find((t=>!!e||(t.index===this.rows.cursor&&(e=!0),!1)));s?this.rows.setCursor(s.index):this.onLastPage||this.page(this._currentPage+1)}else["Enter"," "].includes(t.key)&&this.emit("datatable.selectrow",this.rows.cursor,t)})),this.dom.addEventListener("mousedown",(t=>{const e=t.target;if(e instanceof Element&&this.dom.matches(":focus")){const s=Array.from(this.dom.querySelectorAll("body tr")).find((t=>t.contains(e)));s&&s instanceof HTMLElement&&this.emit("datatable.selectrow",parseInt(s.dataset.index,10),t)}}))):this.dom.addEventListener("mousedown",(t=>{const e=t.target;if(!(e instanceof Element))return;const s=Array.from(this.dom.querySelectorAll("body tr")).find((t=>t.contains(e)));s&&s instanceof HTMLElement&&this.emit("datatable.selectrow",parseInt(s.dataset.index,10),t)})),window.addEventListener("resize",this._listeners.onResize)}_onResize(){this._rect=this.containerDOM.getBoundingClientRect(),this._rect.width&&this.update(!0)}destroy(){this.options.destroyable&&(this.dom.innerHTML=this._initialInnerHTML,this.dom.classList.remove(this.options.classes.table),this.wrapperDOM.parentElement&&this.wrapperDOM.parentElement.replaceChild(this.dom,this.wrapperDOM),this.initialized=!1,window.removeEventListener("resize",this._listeners.onResize))}update(t=!1){t&&(this.columns._measureWidths(),this.hasRows=Boolean(this.data.data.length),this.hasHeadings=Boolean(this.data.headings.length)),this.wrapperDOM.classList.remove(this.options.classes.empty),this._paginate(),this._renderPage(),this._renderPagers(),this.options.scrollY.length&&this._renderSeparateHeader(),this.emit("datatable.update")}_paginate(){let t=this.data.data.map(((t,e)=>({row:t,index:e})));return this._searchQuery&&(t=[],this._searchData.forEach((e=>t.push({index:e,row:this.data.data[e]})))),this.columns._state.filters.length&&this.columns._state.filters.forEach(((e,s)=>{e&&(t=t.filter((t=>"function"==typeof e?e(t.row[s].data):(t.row[s].text??t.row[s].data)===e)))})),this.options.paging&&this.options.perPage>0?this.pages=t.map(((e,s)=>s%this.options.perPage==0?t.slice(s,s+this.options.perPage):null)).filter((t=>t)):this.pages=[t],this.totalPages=this.lastPage=this.pages.length,this._currentPage||(this._currentPage=1),this.totalPages}_fixHeight(){this.options.fixedHeight&&(this.containerDOM.style.height=null,this._rect=this.containerDOM.getBoundingClientRect(),this.containerDOM.style.height=`${this._rect.height}px`)}search(t){if(!this.hasRows)return!1;if(this._currentPage=1,this._searchQuery=t,this._searchData=[],!t.length)return this.update(),this.emit("datatable.search",t,this._searchData),this.wrapperDOM.classList.remove("search-results"),!1;const e=this.columns.settings.map((e=>{if(e.hidden||!e.searchable)return!1;let s=t;const i=e.sensitivity||this.options.sensitivity;["base","accent"].includes(i)&&(s=s.toLowerCase()),["base","case"].includes(i)&&(s=s.normalize("NFD").replace(/\p{Diacritic}/gu,""));return(e.ignorePunctuation||this.options.ignorePunctuation)&&(s=s.replace(/[.,/#!$%^&*;:{}=-_`~()]/g,"")),s}));this.data.data.forEach(((t,s)=>{for(let i=0;i<t.length;i++){const n=e[i];if(n){const e=t[i];let a=(e.text||String(e.data)).trim();if(a.length){const t=this.columns.settings[i],e=t.sensitivity||this.options.sensitivity;["base","accent"].includes(e)&&(a=a.toLowerCase()),["base","case"].includes(e)&&(a=a.normalize("NFD").replace(/\p{Diacritic}/gu,""));if((t.ignorePunctuation||this.options.ignorePunctuation)&&(a=a.replace(/[.,/#!$%^&*;:{}=-_`~()]/g,"")),n.split(" ").find((t=>a.includes(t)))){this._searchData.push(s);break}}}}})),this.wrapperDOM.classList.add("search-results"),this._searchData.length?this.update():(this.wrapperDOM.classList.remove("search-results"),this.setMessage(this.options.labels.noResults)),this.emit("datatable.search",t,this._searchData)}page(t,e=!1){return t!==this._currentPage&&(isNaN(t)||(this._currentPage=t),!(t>this.pages.length||t<0)&&(this._renderPage(e),this._renderPagers(),void this.emit("datatable.page",t)))}insert(e){let s=[];if(Array.isArray(e)){const t=this.data.headings.map((t=>t.text??String(t.data)));e.forEach(((e,i)=>{const n=[];Object.entries(e).forEach((([e,s])=>{const a=t.indexOf(e);a>-1?n[a]=F(s,this.columns.settings[a]):this.hasHeadings||this.hasRows||0!==i||(n[t.length]=F(s,this.columns.settings[t.length]),t.push(e),this.data.headings.push(z(e)))})),s.push(n)}))}else t(e)&&(!e.headings||this.hasHeadings||this.hasRows?e.data&&Array.isArray(e.data)&&(s=e.data.map((t=>t.map(((t,e)=>F(t,this.columns.settings[e])))))):this.data=U(e,void 0,this.columns.settings,this.options.type,this.options.format));s.length&&s.forEach((t=>this.data.data.push(t))),this.hasHeadings=Boolean(this.data.headings.length),this.columns._state.sort&&this.columns.sort(this.columns._state.sort.column,this.columns._state.sort.dir,!0),this.update(!0)}refresh(){this.options.searchable&&(this._input.value="",this._searchQuery=""),this._currentPage=1,this.onFirstPage=!0,this.update(!0),this.emit("datatable.refresh")}print(){const t=s("table");let e=P(this._tableAttributes,this.data.headings,this.data.data.map(((t,e)=>({row:t,index:e}))),this.columns.settings,this.columns._state,!1,this.options,{noColumnWidths:!0,unhideHeader:!0});if(this.options.tableRender){const t=this.options.tableRender(this.data,e,"print");t&&(e=t)}const i=this._dd.diff({nodeName:"TABLE"},e);this._dd.apply(t,i);const n=window.open();n.document.body.appendChild(t),n.print()}setMessage(t){const e=this.data.headings.filter(((t,e)=>!this.columns.settings[e]?.hidden)).length||1;this.wrapperDOM.classList.add(this.options.classes.empty),this._label&&(this._label.innerHTML=""),this.totalPages=0,this._renderPagers();let s=structuredClone(this._virtualDOM),i=s.childNodes?.find((t=>"TBODY"===t.nodeName));if(i||(i={nodeName:"TBODY"},s.childNodes=[i]),i.childNodes=[{nodeName:"TR",childNodes:[{nodeName:"TD",attributes:{class:this.options.classes.empty,colspan:String(e)},childNodes:[{nodeName:"#text",data:t}]}]}],this.options.tableRender){const t=this.options.tableRender(this.data,s,"message");t&&(s=t)}const n=this._dd.diff(this._virtualDOM,s);this._dd.apply(this.dom,n),this._virtualDOM=s}on(t,e){this._events[t]=this._events[t]||[],this._events[t].push(e)}off(t,e){t in this._events!=!1&&this._events[t].splice(this._events[t].indexOf(e),1)}emit(t,...e){if(t in this._events!=!1)for(let s=0;s<this._events[t].length;s++)this._events[t][s](...e)}}const K=function(e){let s;if(!t(e))return!1;const i={lineDelimiter:"\n",columnDelimiter:",",removeDoubleQuotes:!1,...e};if(i.data.length){s={data:[]};const t=i.data.split(i.lineDelimiter);if(t.length&&(i.headings&&(s.headings=t[0].split(i.columnDelimiter),i.removeDoubleQuotes&&(s.headings=s.headings.map((t=>t.trim().replace(/(^"|"$)/g,"")))),t.shift()),t.forEach(((t,e)=>{s.data[e]=[];const n=t.split(i.columnDelimiter);n.length&&n.forEach((t=>{i.removeDoubleQuotes&&(t=t.trim().replace(/(^"|"$)/g,"")),s.data[e].push(t)}))}))),s)return s}return!1},tt=function(s){let i;if(!t(s))return!1;const n={data:"",...s};if(n.data.length||t(n.data)){const t=!!e(n.data)&&JSON.parse(n.data);if(t?(i={headings:[],data:[]},t.forEach(((t,e)=>{i.data[e]=[],Object.entries(t).forEach((([t,s])=>{i.headings.includes(t)||i.headings.push(t),i.data[e].push(s)}))}))):console.warn("That's not valid JSON!"),i)return i}return!1},et=function(e,s={}){if(!e.hasHeadings&&!e.hasRows)return!1;if(!t(s))return!1;const i={download:!0,skipColumn:[],lineDelimiter:"\n",columnDelimiter:",",...s},n=t=>!i.skipColumn.includes(t)&&!e.columns.settings[t]?.hidden;let a=[];const o=e.data.headings.filter(((t,e)=>n(e))).map((t=>t.text??t.data));if(a[0]=o,i.selection)if(Array.isArray(i.selection))for(let t=0;t<i.selection.length;t++)a=a.concat(e.pages[i.selection[t]-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.text??t.data)))));else a=a.concat(e.pages[i.selection-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.text??t.data)))));else a=a.concat(e.data.data.map((t=>t.filter(((t,e)=>n(e))).map((t=>t.text??t.data)))));if(a.length){let t="";if(a.forEach((e=>{e.forEach((e=>{"string"==typeof e&&(e=(e=(e=(e=(e=e.trim()).replace(/\s{2,}/g," ")).replace(/\n/g,"  ")).replace(/"/g,'""')).replace(/#/g,"%23")).includes(",")&&(e=`"${e}"`),t+=e+i.columnDelimiter})),t=t.trim().substring(0,t.length-1),t+=i.lineDelimiter})),t=t.trim().substring(0,t.length-1),i.download){const e=document.createElement("a");e.href=encodeURI(`data:text/csv;charset=utf-8,${t}`),e.download=`${i.filename||"datatable_export"}.csv`,document.body.appendChild(e),e.click(),document.body.removeChild(e)}return t}return!1},st=function(e,s={}){if(!e.hasHeadings&&!e.hasRows)return!1;if(!t(s))return!1;const i={download:!0,skipColumn:[],replacer:null,space:4,...s},n=t=>!i.skipColumn.includes(t)&&!e.columns.settings[t]?.hidden;let a=[];if(i.selection)if(Array.isArray(i.selection))for(let t=0;t<i.selection.length;t++)a=a.concat(e.pages[i.selection[t]-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.data)))));else a=a.concat(e.pages[i.selection-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.data)))));else a=a.concat(e.data.data.map((t=>t.filter(((t,e)=>n(e))).map((t=>t.data)))));const o=e.data.headings.filter(((t,e)=>n(e))).map((t=>t.text??String(t.data)));if(a.length){const t=[];a.forEach(((e,s)=>{t[s]=t[s]||{},e.forEach(((e,i)=>{t[s][o[i]]=e}))}));const e=JSON.stringify(t,i.replacer,i.space);if(i.download){const t=new Blob([e],{type:"data:application/json;charset=utf-8"}),s=URL.createObjectURL(t),n=document.createElement("a");n.href=s,n.download=`${i.filename||"datatable_export"}.json`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(s)}return e}return!1},it=function(e,s={}){if(!e.hasHeadings&&!e.hasRows)return!1;if(!t(s))return!1;const i={download:!0,skipColumn:[],tableName:"myTable",...s},n=t=>!i.skipColumn.includes(t)&&!e.columns.settings[t]?.hidden;let a=[];if(i.selection)if(Array.isArray(i.selection))for(let t=0;t<i.selection.length;t++)a=a.concat(e.pages[i.selection[t]-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.text??t.data)))));else a=a.concat(e.pages[i.selection-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.text??t.data)))));else a=a.concat(e.data.data.map((t=>t.filter(((t,e)=>n(e))).map((t=>t.data)))));const o=e.data.headings.filter(((t,e)=>n(e))).map((t=>t.text??String(t.data)));if(a.length){let t=`INSERT INTO \`${i.tableName}\` (`;if(o.forEach((e=>{t+=`\`${e}\`,`})),t=t.trim().substring(0,t.length-1),t+=") VALUES ",a.forEach((e=>{t+="(",e.forEach((e=>{t+="string"==typeof e?`"${e}",`:`${e},`})),t=t.trim().substring(0,t.length-1),t+="),"})),t=t.trim().substring(0,t.length-1),t+=";",i.download&&(t=`data:application/sql;charset=utf-8,${t}`),i.download){const e=document.createElement("a");e.href=encodeURI(t),e.download=`${i.filename||"datatable_export"}.sql`,document.body.appendChild(e),e.click(),document.body.removeChild(e)}return t}return!1},nt=function(e,s={}){if(!e.hasHeadings&&!e.hasRows)return!1;if(!t(s))return!1;const i={download:!0,skipColumn:[],lineDelimiter:"\n",columnDelimiter:",",...s},n=t=>!i.skipColumn.includes(t)&&!e.columns.settings[t]?.hidden;let a=[];const o=e.data.headings.filter(((t,e)=>n(e))).map((t=>t.text??t.data));if(a[0]=o,i.selection)if(Array.isArray(i.selection))for(let t=0;t<i.selection.length;t++)a=a.concat(e.pages[i.selection[t]-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.data)))));else a=a.concat(e.pages[i.selection-1].map((t=>t.row.filter(((t,e)=>n(e))).map((t=>t.data)))));else a=a.concat(e.data.data.map((t=>t.filter(((t,e)=>n(e))).map((t=>t.data)))));if(a.length){let t="";if(a.forEach((e=>{e.forEach((e=>{"string"==typeof e&&(e=(e=(e=(e=(e=e.trim()).replace(/\s{2,}/g," ")).replace(/\n/g,"  ")).replace(/"/g,'""')).replace(/#/g,"%23")).includes(",")&&(e=`"${e}"`),t+=e+i.columnDelimiter})),t=t.trim().substring(0,t.length-1),t+=i.lineDelimiter})),t=t.trim().substring(0,t.length-1),i.download&&(t=`data:text/csv;charset=utf-8,${t}`),i.download){const e=document.createElement("a");e.href=encodeURI(t),e.download=`${i.filename||"datatable_export"}.txt`,document.body.appendChild(e),e.click(),document.body.removeChild(e)}return t}return!1},at={classes:{row:"datatable-editor-row",form:"datatable-editor-form",item:"datatable-editor-item",menu:"datatable-editor-menu",save:"datatable-editor-save",block:"datatable-editor-block",close:"datatable-editor-close",inner:"datatable-editor-inner",input:"datatable-editor-input",label:"datatable-editor-label",modal:"datatable-editor-modal",action:"datatable-editor-action",header:"datatable-editor-header",wrapper:"datatable-editor-wrapper",editable:"datatable-editor-editable",container:"datatable-editor-container",separator:"datatable-editor-separator"},labels:{editCell:"Edit Cell",editRow:"Edit Row",removeRow:"Remove Row",reallyRemove:"Are you sure?"},inline:!0,hiddenColumns:!1,contextMenu:!0,clickEvent:"dblclick",excludeColumns:[],menuItems:[{text:t=>t.options.labels.editCell,action:(t,e)=>{if(!(t.event.target instanceof Element))return;const s=t.event.target.closest("td");return t.editCell(s)}},{text:t=>t.options.labels.editRow,action:(t,e)=>{if(!(t.event.target instanceof Element))return;const s=t.event.target.closest("tr");return t.editRow(s)}},{separator:!0},{text:t=>t.options.labels.removeRow,action:(t,e)=>{if(t.event.target instanceof Element&&confirm(t.options.labels.reallyRemove)){const e=t.event.target.closest("tr");t.removeRow(e)}}}]};class ot{constructor(t,e={}){this.dt=t,this.options={...at,...e}}init(){this.initialized||(this.dt.wrapperDOM.classList.add(this.options.classes.editable),this.options.inline&&(this.originalRowRender=this.dt.options.rowRender,this.dt.options.rowRender=(t,e,s)=>{let i=this.rowRender(t,e,s);return this.originalRowRender&&(i=this.originalRowRender(t,i,s)),i}),this.options.contextMenu&&(this.containerDOM=s("div",{id:this.options.classes.container}),this.wrapperDOM=s("div",{class:this.options.classes.wrapper}),this.menuDOM=s("ul",{class:this.options.classes.menu}),this.options.menuItems&&this.options.menuItems.length&&this.options.menuItems.forEach((t=>{const e=s("li",{class:t.separator?this.options.classes.separator:this.options.classes.item});if(!t.separator){const i=s("a",{class:this.options.classes.action,href:t.url||"#",html:"function"==typeof t.text?t.text(this):t.text});e.appendChild(i),t.action&&"function"==typeof t.action&&i.addEventListener("click",(e=>{e.preventDefault(),t.action(this,e)}))}this.menuDOM.appendChild(e)})),this.wrapperDOM.appendChild(this.menuDOM),this.containerDOM.appendChild(this.wrapperDOM),this.update()),this.data={},this.closed=!0,this.editing=!1,this.editingRow=!1,this.editingCell=!1,this.bindEvents(),setTimeout((()=>{this.initialized=!0,this.dt.emit("editable.init")}),10))}bindEvents(){this.events={context:this.context.bind(this),update:this.update.bind(this),dismiss:this.dismiss.bind(this),keydown:this.keydown.bind(this),click:this.click.bind(this)},this.dt.dom.addEventListener(this.options.clickEvent,this.events.click),document.addEventListener("click",this.events.dismiss),document.addEventListener("keydown",this.events.keydown),this.options.contextMenu&&(this.dt.dom.addEventListener("contextmenu",this.events.context),this.events.reset=function(t,e=300){let s;return(...i)=>{clearTimeout(s),s=window.setTimeout((()=>t()),e)}}((()=>this.events.update()),50),window.addEventListener("resize",this.events.reset),window.addEventListener("scroll",this.events.reset))}context(t){const e=t.target;if(!(e instanceof Element))return;this.event=t;const s=e.closest("tbody td");if(this.options.contextMenu&&!this.disabled&&s){t.preventDefault();let e=t.pageX,s=t.pageY;e>this.limits.x&&(e-=this.rect.width),s>this.limits.y&&(s-=this.rect.height),this.wrapperDOM.style.top=`${s}px`,this.wrapperDOM.style.left=`${e}px`,this.openMenu(),this.update()}}click(t){const e=t.target;if(e instanceof Element)if(this.editing&&this.data&&this.editingCell){const t=this.modalDOM?this.modalDOM.querySelector(`input.${this.options.classes.input}[type=text]`):this.dt.wrapperDOM.querySelector(`input.${this.options.classes.input}[type=text]`);this.saveCell(t.value)}else if(!this.editing){const s=e.closest("tbody td");s&&(this.editCell(s),t.preventDefault())}}keydown(t){if(this.modalDOM){if("Escape"===t.key)this.closeModal();else if("Enter"===t.key)if(this.editingCell){const t=this.modalDOM.querySelector(`input.${this.options.classes.input}[type=text]`);this.saveCell(t.value)}else{const t=Array.from(this.modalDOM.querySelectorAll(`input.${this.options.classes.input}[type=text]`));this.saveRow(t.map((t=>t.value.trim())),this.data.row)}}else if(this.editing&&this.data)if("Enter"===t.key){if(this.editingCell){const t=this.dt.wrapperDOM.querySelector(`input.${this.options.classes.input}[type=text]`);this.saveCell(t.value)}else if(this.editingRow){const t=Array.from(this.dt.wrapperDOM.querySelectorAll(`input.${this.options.classes.input}[type=text]`));this.saveRow(t.map((t=>t.value.trim())),this.data.row)}}else"Escape"===t.key&&this.saveCell(this.data.content)}editCell(t){const e=a(t.cellIndex,this.dt.columns.settings);if(this.options.excludeColumns.includes(e))return void this.closeMenu();const s=parseInt(t.parentElement.dataset.index,10),i=this.dt.data.data[s][e];this.data={cell:i,rowIndex:s,columnIndex:e,content:i.text||String(i.data)},this.editing=!0,this.editingCell=!0,this.options.inline?this.dt.update():this.editCellModal(),this.closeMenu()}editCellModal(){const t=this.data.cell,e=this.data.columnIndex,i=this.dt.data.headings[e].text||String(this.dt.data.headings[e].data),a=[`<div class='${this.options.classes.inner}'>`,`<div class='${this.options.classes.header}'>`,"<h4>Editing cell</h4>",`<button class='${this.options.classes.close}' type='button' data-editor-close>×</button>`," </div>",`<div class='${this.options.classes.block}'>`,`<form class='${this.options.classes.form}'>`,`<div class='${this.options.classes.row}'>`,`<label class='${this.options.classes.label}'>${n(i)}</label>`,`<input class='${this.options.classes.input}' value='${n(t.text||String(t.data)||"")}' type='text'>`,"</div>",`<div class='${this.options.classes.row}'>`,`<button class='${this.options.classes.save}' type='button' data-editor-save>Save</button>`,"</div>","</form>","</div>","</div>"].join(""),o=s("div",{class:this.options.classes.modal,html:a});this.modalDOM=o,this.openModal();const r=o.querySelector(`input.${this.options.classes.input}[type=text]`);r.focus(),r.selectionStart=r.selectionEnd=r.value.length,o.addEventListener("click",(t=>{const e=t.target;e instanceof Element&&(e.hasAttribute("data-editor-close")?this.closeModal():e.hasAttribute("data-editor-save")&&this.saveCell(r.value))}))}saveCell(t){const e=this.data.content,s=this.dt.columns.settings[this.data.columnIndex].type||this.dt.options.type,i=t.trim();let n;if("number"===s)n={data:parseFloat(i)};else if("boolean"===s)n=["","false","0"].includes(i)?{data:!1,text:"false",order:0}:{data:!0,text:"true",order:1};else if("html"===s)n={data:[{nodeName:"#text",data:t}],text:t,order:t};else if("string"===s)n={data:t};else if("date"===s){const e=this.dt.columns.settings[this.data.columnIndex].format||this.dt.options.format;n={data:t,order:B(String(t),e)}}else n={data:t};this.dt.data.data[this.data.rowIndex][this.data.columnIndex]=n,this.closeModal();const a=this.data.rowIndex,o=this.data.columnIndex;this.data={},this.dt.update(!0),this.editing=!1,this.editingCell=!1,this.dt.emit("editable.save.cell",t,e,a,o)}editRow(t){if(!t||"TR"!==t.nodeName||this.editing)return;const e=parseInt(t.dataset.index,10),s=this.dt.data.data[e];this.data={row:s,rowIndex:e},this.editing=!0,this.editingRow=!0,this.options.inline?this.dt.update():this.editRowModal(),this.closeMenu()}editRowModal(){const t=this.data.row,e=[`<div class='${this.options.classes.inner}'>`,`<div class='${this.options.classes.header}'>`,"<h4>Editing row</h4>",`<button class='${this.options.classes.close}' type='button' data-editor-close>×</button>`," </div>",`<div class='${this.options.classes.block}'>`,`<form class='${this.options.classes.form}'>`,`<div class='${this.options.classes.row}'>`,`<button class='${this.options.classes.save}' type='button' data-editor-save>Save</button>`,"</div>","</form>","</div>","</div>"].join(""),i=s("div",{class:this.options.classes.modal,html:e}),a=i.firstElementChild;if(!a)return;const o=a.lastElementChild?.firstElementChild;if(!o)return;t.forEach(((t,e)=>{const i=this.dt.columns.settings[e];if((!i.hidden||i.hidden&&this.options.hiddenColumns)&&!this.options.excludeColumns.includes(e)){const i=this.dt.data.headings[e].text||String(this.dt.data.headings[e].data);o.insertBefore(s("div",{class:this.options.classes.row,html:[`<div class='${this.options.classes.row}'>`,`<label class='${this.options.classes.label}'>${n(i)}</label>`,`<input class='${this.options.classes.input}' value='${n(t.text||String(t.data)||"")}' type='text'>`,"</div>"].join("")}),o.lastElementChild)}})),this.modalDOM=i,this.openModal();const r=Array.from(o.querySelectorAll(`input.${this.options.classes.input}[type=text]`));r.pop(),i.addEventListener("click",(t=>{const e=t.target;e instanceof Element&&(e.hasAttribute("data-editor-close")?this.closeModal():e.hasAttribute("data-editor-save")&&this.saveRow(r.map((t=>t.value.trim())),this.data.row))}))}saveRow(t,e){const s=e.map((t=>t.text??String(t.data)));this.dt.data.data[this.data.rowIndex]=this.dt.data.data[this.data.rowIndex].map(((e,s)=>{if(this.dt.columns.settings[s].hidden||this.options.excludeColumns.includes(s))return e;const i=this.dt.columns.settings[s].type||this.dt.options.type,n=t[o(s,this.dt.columns.settings)],a=n.trim();let r;if("number"===i)r={data:parseFloat(a)};else if("boolean"===i)r=["","false","0"].includes(a)?{data:!1,text:"false",order:0}:{data:!0,text:"true",order:1};else if("html"===i)r={data:[{nodeName:"#text",data:n}],text:n,order:n};else if("string"===i)r={data:n};else if("date"===i){const t=this.dt.columns.settings[s].format||this.dt.options.format;r={data:n,order:B(String(n),t)}}else r={data:n};return r})),this.data={},this.dt.update(!0),this.closeModal(),this.dt.emit("editable.save.row",t,s,e)}openModal(){this.modalDOM&&document.body.appendChild(this.modalDOM)}closeModal(){this.editing&&this.modalDOM&&(document.body.removeChild(this.modalDOM),this.modalDOM=this.editing=this.editingRow=this.editingCell=!1)}removeRow(t){if(!t||"TR"!==t.nodeName||this.editing)return;const e=parseInt(t.dataset.index,10);this.dt.rows.remove(e),this.closeMenu()}update(){const t=window.scrollX||window.pageXOffset,e=window.scrollY||window.pageYOffset;this.rect=this.wrapperDOM.getBoundingClientRect(),this.limits={x:window.innerWidth+t-this.rect.width,y:window.innerHeight+e-this.rect.height}}dismiss(t){const e=t.target;if(!(e instanceof Element))return;let s=!0;this.options.contextMenu&&(s=!this.wrapperDOM.contains(e),this.editing&&(s=!this.wrapperDOM.contains(e)&&!e.matches(`input.${this.options.classes.input}[type=text]`))),s&&(this.editingCell&&this.saveCell(this.data.content),this.closeMenu())}openMenu(){if(this.editing&&this.data&&this.editingCell){const t=this.modalDOM?this.modalDOM.querySelector(`input.${this.options.classes.input}[type=text]`):this.dt.wrapperDOM.querySelector(`input.${this.options.classes.input}[type=text]`);this.saveCell(t.value)}this.options.contextMenu&&(document.body.appendChild(this.containerDOM),this.closed=!1,this.dt.emit("editable.context.open"))}closeMenu(){this.options.contextMenu&&!this.closed&&(this.closed=!0,document.body.removeChild(this.containerDOM),this.dt.emit("editable.context.close"))}destroy(){this.dt.dom.removeEventListener(this.options.clickEvent,this.events.click),this.dt.dom.removeEventListener("contextmenu",this.events.context),document.removeEventListener("click",this.events.dismiss),document.removeEventListener("keydown",this.events.keydown),window.removeEventListener("resize",this.events.reset),window.removeEventListener("scroll",this.events.reset),document.body.contains(this.containerDOM)&&document.body.removeChild(this.containerDOM),this.options.inline&&(this.dt.options.rowRender=this.originalRowRender),this.initialized=!1}rowRender(t,e,s){if(!this.data||this.data.rowIndex!==s)return e;if(this.editingCell){e.childNodes[o(this.data.columnIndex,this.dt.columns.settings)].childNodes=[{nodeName:"INPUT",attributes:{type:"text",value:this.data.content,class:this.options.classes.input}}]}else e.childNodes.forEach(((s,i)=>{const o=a(i,this.dt.columns.settings),r=t[o];if(!this.options.excludeColumns.includes(o)){e.childNodes[i].childNodes=[{nodeName:"INPUT",attributes:{type:"text",value:n(r.text||String(r.data)||""),class:this.options.classes.input}}]}}));return e}}const rt=function(t,e={}){const s=new ot(t,e);return t.initialized?s.init():t.on("datatable.init",(()=>s.init())),s};
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "./src/datatables.css":
/*!****************************!*\
  !*** ./src/datatables.css ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_datatables_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./datatables.css */ "./node_modules/css-loader/dist/cjs.js!./src/datatables.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_datatables_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_datatables_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_datatables_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_datatables_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {



var stylesInDOM = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };

    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);

  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }

      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };

  return updater;
}

module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();

        stylesInDOM.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {



var memo = {};
/* istanbul ignore next  */

function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }

    memo[target] = styleTarget;
  }

  return memo[target];
}
/* istanbul ignore next  */


function insertBySelector(insert, style) {
  var target = getTarget(insert);

  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }

  target.appendChild(style);
}

module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}

module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;

  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}

module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";

  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }

  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }

  var needLayer = typeof obj.layer !== "undefined";

  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }

  css += obj.css;

  if (needLayer) {
    css += "}";
  }

  if (obj.media) {
    css += "}";
  }

  if (obj.supports) {
    css += "}";
  }

  var sourceMap = obj.sourceMap;

  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  options.styleTagTransform(css, styleElement, options.options);
}

function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }

  styleElement.parentNode.removeChild(styleElement);
}
/* istanbul ignore next  */


function domAPI(options) {
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}

module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }

    styleElement.appendChild(document.createTextNode(css));
  }
}

module.exports = styleTagTransform;

/***/ }),

/***/ "./src/documentChart.ts":
/*!******************************!*\
  !*** ./src/documentChart.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "chart": () => (/* binding */ chart),
/* harmony export */   "chart2": () => (/* binding */ chart2)
/* harmony export */ });
/* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chart.js/auto */ "./node_modules/chart.js/auto/auto.js");

function chart(canvasElement, label, documents, valueExtractor, borderColorIn) {
    const values = documents.map((document) => valueExtractor(document));
    // The "labels" are just the document positions in the result set, from 1 to N.
    const labels = values.map((_, idx) => idx + 1);
    const data = {
        labels: labels,
        datasets: [{
                label: label,
                data: values,
                fill: false,
                borderColor: borderColorIn,
                tension: 0.1
            }]
    };
    new chart_js_auto__WEBPACK_IMPORTED_MODULE_0__["default"](canvasElement, {
        type: 'line',
        data: data
    });
    return canvasElement;
}
function chart2(canvasElement, label1, label2, label3, documents1, documents2, documents3, valueExtractor1, valueExtractor2, valueExtractor3, borderColorIn1, borderColorIn2, borderColorIn3) {
    const values1 = documents1.map((document) => valueExtractor1(document));
    const values2 = documents2.map((document) => valueExtractor2(document));
    const values3 = documents3.map((document) => valueExtractor3(document));
    // the labels are just the document positions 1..n
    const labels1 = values1.map((_, idx) => ((idx + 1)));
    const labels2 = values2.map((_, idx) => ((idx + 1)));
    const labels3 = values3.map((_, idx) => ((idx + 1)));
    const data = {
        legend: {
            reversed: true
        },
        labels: labels1,
        datasets: [{
                label: label1,
                data: values1,
                fill: false,
                borderColor: borderColorIn1,
                tension: 0.1,
                order: 1,
                borderWidth: 2,
                borderRadius: 2,
                pointRadius: 2
            },
            {
                label: label2,
                data: values2,
                fill: false,
                borderColor: borderColorIn2,
                tension: 0.1,
                order: 2,
                borderWidth: 7,
                borderRadius: 2,
                pointRadius: 2
            },
            {
                label: label3,
                data: values3,
                fill: false,
                borderColor: borderColorIn3,
                tension: 0.1,
                order: 3,
                borderWidth: 10,
                borderRadius: 2,
                pointRadius: 2
            }]
    };
    new chart_js_auto__WEBPACK_IMPORTED_MODULE_0__["default"](canvasElement, {
        type: 'line',
        data: data,
        options: {
            responsive: true,
            maintainAspectRatio: true,
            scales: {
                y: {
                    type: 'linear',
                    position: 'top',
                    min: -7000,
                    max: 0,
                }
            }
        },
    });
    return canvasElement;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnRDaGFydC5qcyIsInNvdXJjZVJvb3QiOiIuLi9zcmMvIiwic291cmNlcyI6WyJzcmMvZG9jdW1lbnRDaGFydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssTUFBTSxlQUFlLENBQUM7QUFFbEMsTUFBTSxVQUFVLEtBQUssQ0FBQyxhQUFnQyxFQUNoQyxLQUFhLEVBQ2IsU0FBZ0MsRUFDaEMsY0FBa0QsRUFDbEQsYUFBcUI7SUFFdkMsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFFckUsK0VBQStFO0lBQy9FLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFL0MsTUFBTSxJQUFJLEdBQUc7UUFDVCxNQUFNLEVBQUUsTUFBTTtRQUNkLFFBQVEsRUFBRSxDQUFDO2dCQUNQLEtBQUssRUFBRSxLQUFLO2dCQUNaLElBQUksRUFBRSxNQUFNO2dCQUNaLElBQUksRUFBRSxLQUFLO2dCQUNYLFdBQVcsRUFBRSxhQUFhO2dCQUMxQixPQUFPLEVBQUUsR0FBRzthQUNmLENBQUM7S0FDTCxDQUFBO0lBRUQsSUFBSSxLQUFLLENBQ0wsYUFBYSxFQUNiO1FBQ0ksSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsSUFBSTtLQUNiLENBQ0osQ0FBQztJQUVGLE9BQU8sYUFBYSxDQUFDO0FBRXpCLENBQUM7QUFFRCxNQUFNLFVBQVUsTUFBTSxDQUFDLGFBQWdDLEVBQ2pDLE1BQWMsRUFDZCxNQUFjLEVBQ2QsTUFBYyxFQUNkLFVBQWlDLEVBQ2pDLFVBQWlDLEVBQ2pDLFVBQWlDLEVBQ2pDLGVBQW1ELEVBQ25ELGVBQW1ELEVBQ25ELGVBQW1ELEVBQ25ELGNBQXNCLEVBQ3RCLGNBQXNCLEVBQ3RCLGNBQXNCO0lBRXhDLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBR3hFLGtEQUFrRDtJQUNsRCxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDcEQsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ3BELE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVyRCxNQUFNLElBQUksR0FBRztRQUNULE1BQU0sRUFBRTtZQUNKLFFBQVEsRUFBRSxJQUFJO1NBQ2pCO1FBQ0QsTUFBTSxFQUFFLE9BQU87UUFDZixRQUFRLEVBQUUsQ0FBQztnQkFDUCxLQUFLLEVBQUUsTUFBTTtnQkFDYixJQUFJLEVBQUUsT0FBTztnQkFDYixJQUFJLEVBQUUsS0FBSztnQkFDWCxXQUFXLEVBQUUsY0FBYztnQkFDM0IsT0FBTyxFQUFFLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLENBQUM7Z0JBQ1IsV0FBVyxFQUFFLENBQUM7Z0JBQ2QsWUFBWSxFQUFFLENBQUM7Z0JBQ2YsV0FBVyxFQUFFLENBQUM7YUFDakI7WUFDRDtnQkFDSSxLQUFLLEVBQUUsTUFBTTtnQkFDYixJQUFJLEVBQUUsT0FBTztnQkFDYixJQUFJLEVBQUUsS0FBSztnQkFDWCxXQUFXLEVBQUUsY0FBYztnQkFDM0IsT0FBTyxFQUFFLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLENBQUM7Z0JBQ1IsV0FBVyxFQUFFLENBQUM7Z0JBQ2QsWUFBWSxFQUFFLENBQUM7Z0JBQ2YsV0FBVyxFQUFFLENBQUM7YUFDakI7WUFDRDtnQkFDSSxLQUFLLEVBQUUsTUFBTTtnQkFDYixJQUFJLEVBQUUsT0FBTztnQkFDYixJQUFJLEVBQUUsS0FBSztnQkFDWCxXQUFXLEVBQUUsY0FBYztnQkFDM0IsT0FBTyxFQUFFLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLENBQUM7Z0JBQ1IsV0FBVyxFQUFFLEVBQUU7Z0JBQ2YsWUFBWSxFQUFFLENBQUM7Z0JBQ2YsV0FBVyxFQUFFLENBQUM7YUFDakIsQ0FBQztLQUNMLENBQUE7SUFFRCxJQUFJLEtBQUssQ0FDTCxhQUFhLEVBQ2I7UUFDSSxJQUFJLEVBQUUsTUFBTTtRQUNaLElBQUksRUFBRSxJQUFJO1FBQ1YsT0FBTyxFQUFFO1lBQ0wsVUFBVSxFQUFFLElBQUk7WUFDaEIsbUJBQW1CLEVBQUUsSUFBSTtZQUN6QixNQUFNLEVBQUU7Z0JBQ0osQ0FBQyxFQUFFO29CQUNDLElBQUksRUFBRSxRQUFRO29CQUNkLFFBQVEsRUFBRSxLQUFLO29CQUNmLEdBQUcsRUFBRSxDQUFDLElBQUk7b0JBQ1YsR0FBRyxFQUFFLENBQUM7aUJBQ1Q7YUFDSjtTQUNKO0tBRUosQ0FDSixDQUFDO0lBRUYsT0FBTyxhQUFhLENBQUM7QUFFekIsQ0FBQyJ9

/***/ }),

/***/ "./src/elastic.ts":
/*!************************!*\
  !*** ./src/elastic.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ElasticClient": () => (/* binding */ ElasticClient),
/* harmony export */   "SearchRequest": () => (/* binding */ SearchRequest),
/* harmony export */   "SearchRequests": () => (/* binding */ SearchRequests),
/* harmony export */   "SearchResult": () => (/* binding */ SearchResult),
/* harmony export */   "SearchResults": () => (/* binding */ SearchResults)
/* harmony export */ });
/* harmony import */ var _queryTemplate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryTemplate */ "./src/queryTemplate.ts");

class SearchRequest {
    constructor(client_in, id_in, name_in, queryTemplate_in, parameters_in, fieldsToLoad_in = null) {
        this.client = client_in;
        this.id = id_in;
        this.name = name_in;
        this.queryTemplate = queryTemplate_in;
        this.parameters = parameters_in;
        this.fieldsToLoad = fieldsToLoad_in;
    }
    async make() {
        return this.client.search(this.id, this.name, this.queryTemplate, this.parameters, this.fieldsToLoad);
    }
}
class SearchResult {
    constructor(id_in, name_in, keywords_in, totalHits_in, documents_in) {
        this.id = id_in;
        this.name = name_in;
        this.keywords = keywords_in;
        this.totalHits = totalHits_in;
        this.documents = documents_in;
    }
}
class SearchRequests {
    constructor(client) {
        this.client = client;
        this.requests = [];
    }
    add(request) {
        this.requests.push(request);
    }
}
class SearchResults {
    constructor(client) {
        this.client = client;
        this.results = [];
    }
    add(result) {
        this.results.push(result);
    }
    get(index) {
        return this.results[index];
    }
}
class ElasticClient {
    constructor(url) {
        this.url = url;
    }
    async searchMultiple(searchRequests) {
        let results = new SearchResults(searchRequests.requests[0].client);
        return Promise.all([
            searchRequests.requests[0].make(),
            searchRequests.requests[1].make(),
            searchRequests.requests[2].make()
        ])
            .then((x) => {
            x.forEach(result => {
                results.add(result);
            });
        })
            .then(() => {
            return results;
        })
            .catch(error => {
            console.log(error); // rejectReason of any first rejected promise
            return results;
        });
    }
    async searchMultiple2(keywords, searchRequests) {
        let results = new SearchResults(searchRequests.requests[0].client);
        return Promise.all([
            searchRequests.requests[0].make(),
            searchRequests.requests[1].make(),
            searchRequests.requests[2].make()
        ])
            .then((x) => {
            x.forEach(result => {
                results.add(result);
            });
        })
            .then(() => {
            return results;
        })
            .catch(error => {
            console.log(error); // rejectReason of any first rejected promise
            return results;
        });
    }
    async search2(searchRequest) {
        return this.search(searchRequest.id, searchRequest.name, searchRequest.queryTemplate, searchRequest.parameters, searchRequest.fieldsToLoad);
    }
    async search(id, name, queryTemplate, parameters, fieldsToLoad = null) {
        // we currently extract the keywords from a well known property of the params
        const keywords = parameters['keywords'];
        // prepare the query by replacing placeholders in template
        const query = (0,_queryTemplate__WEBPACK_IMPORTED_MODULE_0__.replacePlaceholders)(queryTemplate, parameters);
        const requestParams = {
            headers: {
                "content-type": "application/json; charset=utf-8"
            },
            body: JSON.stringify(query),
            method: "POST"
        };
        return fetch(this.url, requestParams)
            .then((response) => response.json())
            .then((responseJson) => {
            const totalHits = responseJson['hits']['total']['value'];
            const documents = responseJson['hits']['hits'].map((documentWithSource) => {
                const sortFieldValues = "sort" in documentWithSource ? { "_sort": documentWithSource['sort'] } : {};
                const documentMeta = {
                    "_id": documentWithSource['_id'],
                    "_score": documentWithSource['_score']
                };
                const documentFieldValues = fieldsToLoad == null
                    ? documentWithSource["_source"] // simply load all fields from _source
                    : Object.assign({}, ...fieldsToLoad.map((key) => ({ [key]: documentWithSource['_source']['key'] })));
                return { ...documentMeta, ...sortFieldValues, ...this.potentiallyConvertValues(documentFieldValues) };
            });
            return {
                id: id,
                name: name,
                keywords: keywords,
                totalHits: totalHits,
                documents: documents
            };
        });
    }
    potentiallyConvertValues(document) {
        return Object.entries(document).reduce((acc, entry) => {
            acc[entry[0]] = this.potentiallyConvertValue(entry[1]);
            return acc;
        }, {});
    }
    potentiallyConvertValue(originalValue) {
        if (typeof (originalValue) == 'string') {
            const originalString = originalValue;
            if (/^\d/.test(originalString)) {
                // try date conversion for all strings starting with a digit
                const dateParsed = Date.parse(originalString);
                if (!isNaN(dateParsed)) {
                    return new Date(dateParsed);
                }
            }
        }
        return originalValue;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxhc3RpYy5qcyIsInNvdXJjZVJvb3QiOiIuLi9zcmMvIiwic291cmNlcyI6WyJzcmMvZWxhc3RpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUlwRCxNQUFNLE9BQU8sYUFBYTtJQVF0QixZQUFZLFNBQXdCLEVBQUUsS0FBYSxFQUFFLE9BQWUsRUFBRSxnQkFBd0IsRUFBRSxhQUFrQyxFQUFFLGtCQUFtQyxJQUFJO1FBQ3ZLLElBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxhQUFhLEdBQUcsZ0JBQWdCLENBQUM7UUFDdEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxhQUFhLENBQUM7UUFDaEMsSUFBSSxDQUFDLFlBQVksR0FBRyxlQUFlLENBQUM7SUFDeEMsQ0FBQztJQUVNLEtBQUssQ0FBQyxJQUFJO1FBQ2IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUMxRyxDQUFDO0NBQ0o7QUFFRCxNQUFNLE9BQU8sWUFBWTtJQU1yQixZQUFZLEtBQWEsRUFBRSxPQUFlLEVBQUUsV0FBbUIsRUFBRSxZQUFvQixFQUFFLFlBQTZDO1FBQ2hJLElBQUksQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDO1FBQzVCLElBQUksQ0FBQyxTQUFTLEdBQUcsWUFBWSxDQUFDO1FBQzlCLElBQUksQ0FBQyxTQUFTLEdBQUcsWUFBWSxDQUFDO0lBQ2xDLENBQUM7Q0FDSjtBQUVELE1BQU0sT0FBTyxjQUFjO0lBR3ZCLFlBQVksTUFBcUI7UUFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUNNLEdBQUcsQ0FBQyxPQUFzQjtRQUM3QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0o7QUFFRCxNQUFNLE9BQU8sYUFBYTtJQUd0QixZQUFZLE1BQXFCO1FBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFDTSxHQUFHLENBQUMsTUFBb0I7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNNLEdBQUcsQ0FBQyxLQUFhO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDO0NBQ0o7QUFFRCxNQUFNLE9BQU8sYUFBYTtJQUl0QixZQUFZLEdBQVc7UUFDbkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDbkIsQ0FBQztJQUVNLEtBQUssQ0FBQyxjQUFjLENBQUMsY0FBOEI7UUFDdEQsSUFBSSxPQUFPLEdBQUcsSUFBSSxhQUFhLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVuRSxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUM7WUFDZixjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtZQUNqQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtZQUNqQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtTQUFFLENBQUM7YUFDdkMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDUixDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDeEIsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUM7YUFDRCxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1AsT0FBTyxPQUFPLENBQUE7UUFBQSxDQUFDLENBQUM7YUFDbkIsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFFLDZDQUE2QztZQUNsRSxPQUFPLE9BQU8sQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxLQUFLLENBQUMsZUFBZSxDQUFDLFFBQWdCLEVBQUUsY0FBOEI7UUFDekUsSUFBSSxPQUFPLEdBQUcsSUFBSSxhQUFhLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVuRSxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUM7WUFDZixjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtZQUNqQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtZQUNqQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtTQUFFLENBQUM7YUFDdkMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDUixDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDeEIsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUM7YUFDRCxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1AsT0FBTyxPQUFPLENBQUE7UUFBQSxDQUFDLENBQUM7YUFDbkIsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFFLDZDQUE2QztZQUNsRSxPQUFPLE9BQU8sQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxLQUFLLENBQUMsT0FBTyxDQUFDLGFBQTRCO1FBQzdDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxFQUFFLGFBQWEsQ0FBQyxJQUFJLEVBQUUsYUFBYSxDQUFDLGFBQWEsRUFBRSxhQUFhLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNoSixDQUFDO0lBRU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFVLEVBQUUsSUFBWSxFQUFFLGFBQXFCLEVBQUUsVUFBK0IsRUFBRSxlQUFnQyxJQUFJO1FBQ3RJLDZFQUE2RTtRQUM3RSxNQUFNLFFBQVEsR0FBVyxVQUFVLENBQUMsVUFBVSxDQUFXLENBQUM7UUFFMUQsMERBQTBEO1FBQzFELE1BQU0sS0FBSyxHQUFHLG1CQUFtQixDQUFDLGFBQWEsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUU3RCxNQUFNLGFBQWEsR0FBRztZQUNsQixPQUFPLEVBQUU7Z0JBQ0wsY0FBYyxFQUFFLGlDQUFpQzthQUNwRDtZQUNELElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztZQUMzQixNQUFNLEVBQUUsTUFBTTtTQUNqQixDQUFBO1FBRUQsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUM7YUFDaEMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDbkMsSUFBSSxDQUFDLENBQUMsWUFBaUMsRUFBRSxFQUFFO1lBQ3hDLE1BQU0sU0FBUyxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN6RCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsa0JBQXVDLEVBQUUsRUFBRTtnQkFDM0YsTUFBTSxlQUFlLEdBQUcsTUFBTSxJQUFJLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxFQUFDLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUE7Z0JBQ2pHLE1BQU0sWUFBWSxHQUFHO29CQUNqQixLQUFLLEVBQUUsa0JBQWtCLENBQUMsS0FBSyxDQUFDO29CQUNoQyxRQUFRLEVBQUUsa0JBQWtCLENBQUMsUUFBUSxDQUFDO2lCQUN6QyxDQUFDO2dCQUNGLE1BQU0sbUJBQW1CLEdBQUcsWUFBWSxJQUFJLElBQUk7b0JBQzVDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxzQ0FBc0M7b0JBQ3RFLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxHQUFHLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFXLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQy9HLE9BQU8sRUFBQyxHQUFHLFlBQVksRUFBRSxHQUFHLGVBQWUsRUFBRSxHQUFHLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFDLENBQUE7WUFDdkcsQ0FBQyxDQUFDLENBQUM7WUFFSCxPQUFPO2dCQUNILEVBQUUsRUFBRSxFQUFFO2dCQUNOLElBQUksRUFBRSxJQUFJO2dCQUNWLFFBQVEsRUFBRSxRQUFRO2dCQUNsQixTQUFTLEVBQUUsU0FBUztnQkFDcEIsU0FBUyxFQUFFLFNBQVM7YUFDUCxDQUFDO1FBQ3RCLENBQUMsQ0FBQyxDQUFBO0lBQ1YsQ0FBQztJQUVPLHdCQUF3QixDQUFDLFFBQTZCO1FBQzFELE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDbEQsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2RCxPQUFPLEdBQUcsQ0FBQztRQUNmLENBQUMsRUFBRSxFQUF5QixDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVPLHVCQUF1QixDQUFDLGFBQWtCO1FBQzlDLElBQUksT0FBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLFFBQVEsRUFBRTtZQUNuQyxNQUFNLGNBQWMsR0FBRyxhQUF1QixDQUFDO1lBQy9DLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRTtnQkFDNUIsNERBQTREO2dCQUM1RCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO2dCQUM5QyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFO29CQUNwQixPQUFPLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2lCQUMvQjthQUNKO1NBQ0o7UUFDRCxPQUFPLGFBQWEsQ0FBQztJQUN6QixDQUFDO0NBRUoifQ==

/***/ }),

/***/ "./src/queryTemplate.ts":
/*!******************************!*\
  !*** ./src/queryTemplate.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FixedQuerySource": () => (/* binding */ FixedQuerySource),
/* harmony export */   "replacePlaceholders": () => (/* binding */ replacePlaceholders)
/* harmony export */ });
//TODO cjm: the Math.exp curve Matthias showed originally does not relate to what we are
// actually doing in the quepid query for ICF/HUDx, so we hid that.
class FixedQuerySource {
    constructor() {
        this.size = 50.0; //do 50 for David
        this.decayA = 0.5;
        this.weightA = 30.0;
        this.scaleA = 365.0;
        this.offsetA = 180.0;
        this.decayB = 0.5;
        this.weightB = 30.0;
        this.scaleB = 365.0;
        this.offsetB = 180.0;
        this.documentNumberMatch = {
            "bool": {
                "must": [
                    {
                        "match": {
                            "documentNumber": {
                                "query": "{{keywords}}",
                                "operator": "OR",
                                "boost": 100
                            }
                        }
                    }
                ]
            }
        };
        this.fieldsMatch = {
            "bool": {
                "must": [
                    {
                        "simple_query_string": {
                            "query": "{{keywords}}",
                            "fields": [
                                "title^20",
                                "abstract^1.0",
                                "composedBody^0.1"
                            ],
                            "default_operator": "and",
                            "flags": "PHRASE",
                            "quote_field_suffix": ".exact"
                        }
                    }
                ]
            }
        };
        this.locationFilter = {
            "bool": {
                "must": [
                    {
                        "bool": {
                            "should": [
                                {
                                    "bool": {
                                        "must_not": [
                                            {
                                                "exists": {
                                                    "field": "location"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "terms": {
                                        "location": [
                                            "1",
                                            "2",
                                            "7"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        };
        this.scriptSortFunction = "long docDateMillis = doc['documentDate'].value.toInstant().toEpochMilli();" +
            "long now = params['now'];" +
            "double ageInWeeks = (now - docDateMillis) / (7d * 24 * 3600 * 1000);" +
            "double ageDecay = 1 / Math.exp(ageInWeeks * {{freshnessDecay}});" +
            "return _score * ageDecay";
        this.scriptSort = {
            "_script": {
                "type": "number",
                "script": {
                    "lang": "painless",
                    "source": this.scriptSortFunction,
                    "params": {
                        "now": 1671887740000
                    }
                },
                "order": "desc"
            }
        };
        this.match_phrase = {
            "match_phrase": {
                "title": "{{keywords}}"
            }
        };
        this.simple_query_block = { "query": this.match_phrase };
        this.should_block = [
            {
                "match": {
                    "important_content": {
                        "query": "{{keywords}}"
                    }
                }
            },
            {
                "match_phrase": {
                    "content": {
                        "query": "{{keywords}}"
                    }
                }
            },
            {
                "match_phrase": {
                    "paragraph_content": {
                        "query": "{{keywords}}"
                    }
                }
            },
            {
                "match_phrase": {
                    "title": "{{keywords}}"
                }
            },
            {
                "match_phrase": {
                    "content": "{{keywords}}"
                }
            },
            {
                "match": {
                    "mimetype": {
                        "query": "text/html",
                        "boost": 70
                    }
                }
            }
        ];
        this.must_block = [
            {
                "multi_match": {
                    "query": "{{keywords}}",
                    "fields": [
                        "title^15",
                        "content^10"
                    ]
                }
            }
        ];
        this.bool_block = {
            "must": this.must_block,
            "should": this.should_block
        };
        this.inner_query_block = {
            "bool": this.bool_block
        };
        this.aggs_block = {
            "dsp": {
                "terms": {
                    "size": "100",
                    "field": "hudx_dsp"
                }
            },
            "ct": {
                "terms": {
                    "field": "hudx_ct"
                }
            }
        };
        this.highlight_block = {
            "pre_tags": [
                "<strong>"
            ],
            "post_tags": [
                "</strong>"
            ],
            "fields": {
                "content": {
                    "fragment_size": 250,
                    "type": "fvh"
                },
                "paragraph_content": {
                    "fragment_size": 250,
                    "type": "fvh"
                }
            }
        };
        this.suggest_block = {
            "spellcheck": {
                "text": "{{keywords}}",
                "phrase": {
                    "field": "suggest_trigrams",
                    "size": 3,
                    "gram_size": 2,
                    "real_word_error_likelihood": 0.15,
                    "confidence": 1,
                    "direct_generator": [
                        {
                            "field": "suggest_trigrams",
                            "suggest_mode": "missing",
                            "size": 2,
                            "max_edits": 1,
                            "min_word_length": 2
                        }
                    ]
                }
            }
        };
        this.source_block = [
            "doc_id",
            "click_count",
            "title.en_minimal", "title",
            "content",
            "url",
            "mimetype",
            "digest",
            "hudx_*"
        ];
        this.script_score = {
            "script_score": {
                "script": {
                    "source": "(doc['url'].value.indexOf('.info/programs/') > 0) ? 1 : 0"
                }
            }
        };
        this.field_value_factor = {
            "field_value_factor": {
                "missing": 1,
                "factor": 10,
                "field": "hudx_pop"
            }
        };
        this.function_blockA = [
            this.script_score,
            this.field_value_factor,
            {
                "exp": {
                    "hudx_dr": {
                        "origin": "now",
                        "scale": this.getScaleA(),
                        "offset": this.getOffsetA(),
                        "decay": this.getDecayA()
                    }
                },
                "weight": this.getWeightA()
            }
        ];
        this.function_blockB = [
            this.script_score,
            this.field_value_factor,
            {
                "exp": {
                    "hudx_dr": {
                        "origin": "now",
                        "scale": this.getScaleB(),
                        "offset": this.getOffsetB(),
                        "decay": this.getDecayB()
                    }
                },
                "weight": this.getWeightB()
            }
        ];
        this.function_block_control = [
            this.script_score,
            this.field_value_factor,
        ];
        this.function_score_block_control = {
            "query": this.inner_query_block,
            "functions": this.function_block_control,
            "score_mode": "sum"
        };
        this.function_score_blockA = {
            "query": this.inner_query_block,
            "functions": this.function_blockA,
            "score_mode": "sum"
        };
        this.function_score_blockB = {
            "query": this.inner_query_block,
            "functions": this.function_blockB,
            "score_mode": "sum"
        };
        this.outer_query_block_control = { "function_score": this.function_score_block_control };
        this.outer_query_blockA = { "function_score": this.function_score_blockA };
        this.outer_query_blockB = { "function_score": this.function_score_blockB };
    }
    getDecayA() {
        return this.decayA;
    }
    getWeightA() {
        return this.weightA;
    }
    getScaleA() {
        return this.scaleA + "d";
    }
    getOffsetA() {
        return this.offsetA + "d";
    }
    getDecayB() {
        return this.decayB;
    }
    getWeightB() {
        return this.weightB;
    }
    getScaleB() {
        return this.scaleB + "d";
    }
    getOffsetB() {
        return this.offsetB + "d";
    }
    rebuild_outer_query_blockA() {
        this.function_blockA = [
            {
                "script_score": {
                    "script": {
                        "source": "(doc['url'].value.indexOf('.info/programs/') > 0) ? 1 : 0"
                    }
                }
            },
            {
                "field_value_factor": {
                    "missing": 1,
                    "factor": 10,
                    "field": "hudx_pop"
                }
            },
            {
                "exp": {
                    "hudx_dr": {
                        "origin": "now",
                        "scale": this.getScaleA(),
                        "offset": this.getOffsetA(),
                        "decay": this.getDecayA()
                    }
                },
                "weight": this.getWeightA()
            }
        ];
        this.function_score_blockA = {
            "query": this.inner_query_block,
            "functions": this.function_blockA,
            "score_mode": "sum"
        };
        this.outer_query_blockA = { "function_score": this.function_score_blockA };
        return;
    }
    rebuild_outer_query_blockB() {
        this.function_blockB = [
            {
                "script_score": {
                    "script": {
                        "source": "(doc['url'].value.indexOf('.info/programs/') > 0) ? 1 : 0"
                    }
                }
            },
            {
                "field_value_factor": {
                    "missing": 1,
                    "factor": 10,
                    "field": "hudx_pop"
                }
            },
            {
                "exp": {
                    "hudx_dr": {
                        "origin": "now",
                        "scale": this.getScaleB(),
                        "offset": this.getOffsetB(),
                        "decay": this.getDecayB()
                    }
                },
                "weight": this.getWeightB()
            }
        ];
        this.function_score_blockB = {
            "query": this.inner_query_block,
            "functions": this.function_blockB,
            "score_mode": "sum"
        };
        this.outer_query_blockB = { "function_score": this.function_score_blockB };
        return;
    }
    rebuild_outer_query_block_control() {
        this.function_block_control = [
            {
                "script_score": {
                    "script": {
                        "source": "(doc['url'].value.indexOf('.info/programs/') > 0) ? 1 : 0"
                    }
                }
            },
            {
                "field_value_factor": {
                    "missing": 1,
                    "factor": 10,
                    "field": "hudx_pop"
                }
            }
        ];
        this.function_score_block_control = {
            "query": this.inner_query_block,
            "functions": this.function_block_control,
            "score_mode": "sum"
        };
        this.outer_query_block_control = { "function_score": this.function_score_block_control };
        return;
    }
    loadQueryTemplateExperimentA(queryTemplateFromQuepid, decay, weight, scale, offset) {
        this.decayA = decay;
        this.weightA = weight;
        this.scaleA = scale;
        this.offsetA = offset;
        if (queryTemplateFromQuepid && queryTemplateFromQuepid.length > 0) {
            queryTemplateFromQuepid = queryTemplateFromQuepid.replace("#$query##", "{{keywords}}");
            let newObject = JSON.parse(queryTemplateFromQuepid);
            newObject["from"] = 0;
            newObject["size"] = this.size;
            newObject["track_total_hits"] = true;
            //TODO make the field name (hudx_dr) configurable
            let newFunctionScoreAddition = {
                "exp": {
                    "hudx_dr": {
                        "origin": "now",
                        "scale": this.getScaleA(),
                        "offset": this.getOffsetA(),
                        "decay": this.getDecayA()
                    }
                },
                "weight": this.getWeightA()
            };
            newObject["query"]["function_score"]["functions"].push(newFunctionScoreAddition);
            let queryParsedFromQuepid = newObject;
            return queryParsedFromQuepid;
        }
        else {
            this.rebuild_outer_query_blockA();
            let queryTemplate = {
                "from": 0,
                "size": this.size,
                "track_total_hits": true,
                "query": this.outer_query_blockA,
                "aggs": this.aggs_block,
                "highlight": this.highlight_block,
                "suggest": this.suggest_block,
                "_source": this.source_block
            };
            return queryTemplate;
        }
    }
    ;
    loadQueryTemplateExperimentB(queryTemplateFromQuepid, decay, weight, scale, offset) {
        this.decayB = decay;
        this.weightB = weight;
        this.scaleB = scale;
        this.offsetB = offset;
        if (queryTemplateFromQuepid && queryTemplateFromQuepid.length > 0) {
            queryTemplateFromQuepid = queryTemplateFromQuepid.replace("#$query##", "{{keywords}}");
            let newObject = JSON.parse(queryTemplateFromQuepid);
            newObject["from"] = 0;
            newObject["size"] = this.size;
            newObject["track_total_hits"] = true;
            //TODO make the field name (hudx_dr) configurable
            let newFunctionScoreAddition = {
                "exp": {
                    "hudx_dr": {
                        "origin": "now",
                        "scale": this.getScaleB(),
                        "offset": this.getOffsetB(),
                        "decay": this.getDecayB()
                    }
                },
                "weight": this.getWeightB()
            };
            newObject["query"]["function_score"]["functions"].push(newFunctionScoreAddition);
            let queryParsedFromQuepid = newObject;
            return queryParsedFromQuepid;
        }
        else {
            this.rebuild_outer_query_blockB();
            let queryTemplate = {
                "from": 0,
                "size": this.size,
                "track_total_hits": true,
                "query": this.outer_query_blockB,
                "aggs": this.aggs_block,
                "highlight": this.highlight_block,
                "suggest": this.suggest_block,
                "_source": this.source_block
            };
            return queryTemplate;
        }
    }
    ;
    loadQueryTemplateControl(queryTemplateFromQuepid) {
        if (queryTemplateFromQuepid && queryTemplateFromQuepid.length > 0) {
            queryTemplateFromQuepid = queryTemplateFromQuepid.replace("#$query##", "{{keywords}}");
            let newObject = JSON.parse(queryTemplateFromQuepid);
            newObject["from"] = 0;
            newObject["size"] = this.size;
            newObject["track_total_hits"] = true;
            let queryParsedFromQuepid = newObject;
            return queryParsedFromQuepid;
        }
        else {
            this.rebuild_outer_query_block_control();
            let queryTemplate = {
                "from": 0,
                "size": this.size,
                "track_total_hits": true,
                "query": this.outer_query_block_control,
                "aggs": this.aggs_block,
                "highlight": this.highlight_block,
                "suggest": this.suggest_block,
                "_source": this.source_block
            };
            return queryTemplate;
        }
    }
    ;
}
function replacePlaceholders(queryTemplate, parameterValues) {
    // did not find a recursive-replace lib for objects, just using string replace here
    const queryTemplateSerialized = JSON.stringify(queryTemplate);
    const queryAsString = Object.entries(parameterValues).reduce((acc, cur) => {
        const parameter = cur[0];
        let value = cur[1];
        if (typeof value == 'string') {
            // JSON escape quotes, remove leading/trailing quote added by stringify
            value = JSON.stringify(value).slice(0, -1).substring(1);
        }
        // console.log(`Replacing {{${parameter}}} with ${value}`);
        return acc.replaceAll(`{{${parameter}}}`, value);
    }, queryTemplateSerialized);
    return JSON.parse(queryAsString);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnlUZW1wbGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIuLi9zcmMvIiwic291cmNlcyI6WyJzcmMvcXVlcnlUZW1wbGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3RkFBd0Y7QUFDeEYsbUVBQW1FO0FBV25FLE1BQU0sT0FBTyxnQkFBZ0I7SUFBN0I7UUFFWSxTQUFJLEdBQVcsSUFBSSxDQUFDLENBQUMsaUJBQWlCO1FBRXRDLFdBQU0sR0FBVyxHQUFHLENBQUM7UUFDckIsWUFBTyxHQUFXLElBQUksQ0FBQztRQUN2QixXQUFNLEdBQVcsS0FBSyxDQUFDO1FBQ3ZCLFlBQU8sR0FBVyxLQUFLLENBQUM7UUFFeEIsV0FBTSxHQUFXLEdBQUcsQ0FBQztRQUNyQixZQUFPLEdBQVcsSUFBSSxDQUFDO1FBQ3ZCLFdBQU0sR0FBVyxLQUFLLENBQUM7UUFDdkIsWUFBTyxHQUFXLEtBQUssQ0FBQztRQUVoQyx3QkFBbUIsR0FBRztZQUNsQixNQUFNLEVBQUU7Z0JBQ0osTUFBTSxFQUFFO29CQUNKO3dCQUNJLE9BQU8sRUFBRTs0QkFDTCxnQkFBZ0IsRUFBRTtnQ0FDZCxPQUFPLEVBQUUsY0FBYztnQ0FDdkIsVUFBVSxFQUFFLElBQUk7Z0NBQ2hCLE9BQU8sRUFBRSxHQUFHOzZCQUNmO3lCQUNKO3FCQUNKO2lCQUNKO2FBQ0o7U0FDSixDQUFDO1FBRUYsZ0JBQVcsR0FBRztZQUNWLE1BQU0sRUFBRTtnQkFDSixNQUFNLEVBQUU7b0JBQ0o7d0JBQ0kscUJBQXFCLEVBQUU7NEJBQ25CLE9BQU8sRUFBRSxjQUFjOzRCQUN2QixRQUFRLEVBQUU7Z0NBQ04sVUFBVTtnQ0FDVixjQUFjO2dDQUNkLGtCQUFrQjs2QkFDckI7NEJBQ0Qsa0JBQWtCLEVBQUUsS0FBSzs0QkFDekIsT0FBTyxFQUFFLFFBQVE7NEJBQ2pCLG9CQUFvQixFQUFFLFFBQVE7eUJBQ2pDO3FCQUNKO2lCQUNKO2FBQ0o7U0FDSixDQUFDO1FBRUYsbUJBQWMsR0FBRztZQUNiLE1BQU0sRUFBRTtnQkFDSixNQUFNLEVBQUU7b0JBQ0o7d0JBQ0ksTUFBTSxFQUFFOzRCQUNKLFFBQVEsRUFBRTtnQ0FDTjtvQ0FDSSxNQUFNLEVBQUU7d0NBQ0osVUFBVSxFQUFFOzRDQUNSO2dEQUNJLFFBQVEsRUFBRTtvREFDTixPQUFPLEVBQUUsVUFBVTtpREFDdEI7NkNBQ0o7eUNBQ0o7cUNBQ0o7aUNBQ0o7Z0NBQ0Q7b0NBQ0ksT0FBTyxFQUFFO3dDQUNMLFVBQVUsRUFBRTs0Q0FDUixHQUFHOzRDQUNILEdBQUc7NENBQ0gsR0FBRzt5Q0FDTjtxQ0FDSjtpQ0FDSjs2QkFDSjt5QkFDSjtxQkFDSjtpQkFDSjthQUNKO1NBQ0osQ0FBQztRQUVGLHVCQUFrQixHQUNkLDRFQUE0RTtZQUM1RSwyQkFBMkI7WUFDM0Isc0VBQXNFO1lBQ3RFLGtFQUFrRTtZQUNsRSwwQkFBMEIsQ0FBQztRQUUvQixlQUFVLEdBQUc7WUFDVCxTQUFTLEVBQUU7Z0JBQ1AsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLFFBQVEsRUFBRTtvQkFDTixNQUFNLEVBQUUsVUFBVTtvQkFDbEIsUUFBUSxFQUFFLElBQUksQ0FBQyxrQkFBa0I7b0JBQ2pDLFFBQVEsRUFBRTt3QkFDTixLQUFLLEVBQUUsYUFBYTtxQkFDdkI7aUJBQ0o7Z0JBQ0QsT0FBTyxFQUFFLE1BQU07YUFDbEI7U0FDSixDQUFBO1FBRUQsaUJBQVksR0FBRztZQUNYLGNBQWMsRUFBRztnQkFDYixPQUFPLEVBQUcsY0FBYzthQUMzQjtTQUNKLENBQUE7UUFFRCx1QkFBa0IsR0FBRyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUU7UUFFckQsaUJBQVksR0FBRztZQUNQO2dCQUNFLE9BQU8sRUFBRTtvQkFDUCxtQkFBbUIsRUFBRTt3QkFDbkIsT0FBTyxFQUFFLGNBQWM7cUJBQ3hCO2lCQUNGO2FBQ0Y7WUFDRDtnQkFDRSxjQUFjLEVBQUU7b0JBQ2QsU0FBUyxFQUFFO3dCQUNULE9BQU8sRUFBRSxjQUFjO3FCQUN4QjtpQkFDRjthQUNGO1lBQ0Q7Z0JBQ0UsY0FBYyxFQUFFO29CQUNkLG1CQUFtQixFQUFFO3dCQUNuQixPQUFPLEVBQUUsY0FBYztxQkFDeEI7aUJBQ0Y7YUFDRjtZQUNEO2dCQUNFLGNBQWMsRUFBRTtvQkFDZCxPQUFPLEVBQUUsY0FBYztpQkFDeEI7YUFDRjtZQUNEO2dCQUNFLGNBQWMsRUFBRTtvQkFDZCxTQUFTLEVBQUUsY0FBYztpQkFDMUI7YUFDRjtZQUNEO2dCQUNFLE9BQU8sRUFBRTtvQkFDUCxVQUFVLEVBQUU7d0JBQ1YsT0FBTyxFQUFFLFdBQVc7d0JBQ3BCLE9BQU8sRUFBRSxFQUFFO3FCQUNaO2lCQUNGO2FBQ0Y7U0FDRixDQUFDO1FBRVIsZUFBVSxHQUFHO1lBQ0w7Z0JBQ0UsYUFBYSxFQUFFO29CQUNiLE9BQU8sRUFBRSxjQUFjO29CQUN2QixRQUFRLEVBQUU7d0JBQ1IsVUFBVTt3QkFDVixZQUFZO3FCQUNiO2lCQUNGO2FBQ0Y7U0FDRixDQUFDO1FBRVIsZUFBVSxHQUFHO1lBQ1QsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVO1lBQ3ZCLFFBQVEsRUFBRSxJQUFJLENBQUMsWUFBWTtTQUM5QixDQUFDO1FBRUYsc0JBQWlCLEdBQUc7WUFDaEIsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVO1NBQzFCLENBQUM7UUFFRixlQUFVLEdBQUc7WUFDVCxLQUFLLEVBQUU7Z0JBQ0wsT0FBTyxFQUFFO29CQUNQLE1BQU0sRUFBRSxLQUFLO29CQUNiLE9BQU8sRUFBRSxVQUFVO2lCQUNwQjthQUNGO1lBQ0QsSUFBSSxFQUFFO2dCQUNKLE9BQU8sRUFBRTtvQkFDUCxPQUFPLEVBQUUsU0FBUztpQkFDbkI7YUFDRjtTQUNKLENBQUM7UUFFRixvQkFBZSxHQUFHO1lBQ2QsVUFBVSxFQUFFO2dCQUNWLFVBQVU7YUFDWDtZQUNELFdBQVcsRUFBRTtnQkFDWCxXQUFXO2FBQ1o7WUFDRCxRQUFRLEVBQUU7Z0JBQ1IsU0FBUyxFQUFFO29CQUNULGVBQWUsRUFBRSxHQUFHO29CQUNwQixNQUFNLEVBQUUsS0FBSztpQkFDZDtnQkFDRCxtQkFBbUIsRUFBRTtvQkFDbkIsZUFBZSxFQUFFLEdBQUc7b0JBQ3BCLE1BQU0sRUFBRSxLQUFLO2lCQUNkO2FBQ0Y7U0FDSixDQUFDO1FBRUYsa0JBQWEsR0FBRztZQUNaLFlBQVksRUFBRTtnQkFDWixNQUFNLEVBQUUsY0FBYztnQkFDdEIsUUFBUSxFQUFFO29CQUNSLE9BQU8sRUFBRSxrQkFBa0I7b0JBQzNCLE1BQU0sRUFBRSxDQUFDO29CQUNULFdBQVcsRUFBRSxDQUFDO29CQUNkLDRCQUE0QixFQUFFLElBQUk7b0JBQ2xDLFlBQVksRUFBRSxDQUFDO29CQUNmLGtCQUFrQixFQUFFO3dCQUNsQjs0QkFDRSxPQUFPLEVBQUUsa0JBQWtCOzRCQUMzQixjQUFjLEVBQUUsU0FBUzs0QkFDekIsTUFBTSxFQUFFLENBQUM7NEJBQ1QsV0FBVyxFQUFFLENBQUM7NEJBQ2QsaUJBQWlCLEVBQUUsQ0FBQzt5QkFDckI7cUJBQ0Y7aUJBQ0Y7YUFDRjtTQUNKLENBQUM7UUFFRixpQkFBWSxHQUFHO1lBQ1gsUUFBUTtZQUNSLGFBQWE7WUFDYixrQkFBa0IsRUFBQyxPQUFPO1lBQzFCLFNBQVM7WUFDVCxLQUFLO1lBQ0wsVUFBVTtZQUNWLFFBQVE7WUFDUixRQUFRO1NBQ1gsQ0FBQztRQUVGLGlCQUFZLEdBQ0o7WUFDRSxjQUFjLEVBQUU7Z0JBQ2QsUUFBUSxFQUFFO29CQUNSLFFBQVEsRUFBRSwyREFBMkQ7aUJBQ3RFO2FBQ0Y7U0FDRixDQUFDO1FBRVYsdUJBQWtCLEdBQ1Y7WUFDRSxvQkFBb0IsRUFBRTtnQkFDcEIsU0FBUyxFQUFFLENBQUM7Z0JBQ1osUUFBUSxFQUFFLEVBQUU7Z0JBQ1osT0FBTyxFQUFFLFVBQVU7YUFDcEI7U0FDRixDQUFDO1FBRVYsb0JBQWUsR0FBRztZQUNWLElBQUksQ0FBQyxZQUFZO1lBQ2pCLElBQUksQ0FBQyxrQkFBa0I7WUFDdkI7Z0JBQ0UsS0FBSyxFQUFFO29CQUNMLFNBQVMsRUFBRTt3QkFDVCxRQUFRLEVBQUUsS0FBSzt3QkFDZixPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRTt3QkFDekIsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUU7d0JBQzNCLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO3FCQUMxQjtpQkFDRjtnQkFDRCxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRTthQUM1QjtTQUNGLENBQUM7UUFFUixvQkFBZSxHQUFHO1lBQ1YsSUFBSSxDQUFDLFlBQVk7WUFDakIsSUFBSSxDQUFDLGtCQUFrQjtZQUN2QjtnQkFDRSxLQUFLLEVBQUU7b0JBQ0wsU0FBUyxFQUFFO3dCQUNULFFBQVEsRUFBRSxLQUFLO3dCQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO3dCQUN6QixRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRTt3QkFDM0IsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUU7cUJBQzFCO2lCQUNGO2dCQUNELFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFO2FBQzVCO1NBQ0YsQ0FBQztRQUVSLDJCQUFzQixHQUFHO1lBQ2pCLElBQUksQ0FBQyxZQUFZO1lBQ2pCLElBQUksQ0FBQyxrQkFBa0I7U0FDeEIsQ0FBQztRQUVSLGlDQUE0QixHQUFHO1lBQzNCLE9BQU8sRUFBRSxJQUFJLENBQUMsaUJBQWlCO1lBQy9CLFdBQVcsRUFBRSxJQUFJLENBQUMsc0JBQXNCO1lBQ3hDLFlBQVksRUFBRSxLQUFLO1NBQ3RCLENBQUM7UUFFRiwwQkFBcUIsR0FBRztZQUNwQixPQUFPLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtZQUMvQixXQUFXLEVBQUUsSUFBSSxDQUFDLGVBQWU7WUFDakMsWUFBWSxFQUFFLEtBQUs7U0FDdEIsQ0FBQztRQUVGLDBCQUFxQixHQUFHO1lBQ3BCLE9BQU8sRUFBRSxJQUFJLENBQUMsaUJBQWlCO1lBQy9CLFdBQVcsRUFBRSxJQUFJLENBQUMsZUFBZTtZQUNqQyxZQUFZLEVBQUUsS0FBSztTQUN0QixDQUFDO1FBRUYsOEJBQXlCLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztRQUNwRix1QkFBa0IsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQ3RFLHVCQUFrQixHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUF3UDFFLENBQUM7SUF0UFcsU0FBUztRQUNiLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRU8sVUFBVTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBRU8sU0FBUztRQUNiLE9BQU8sSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7SUFDN0IsQ0FBQztJQUVPLFVBQVU7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO0lBQzlCLENBQUM7SUFFTyxTQUFTO1FBQ2IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFTyxVQUFVO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hCLENBQUM7SUFFTyxTQUFTO1FBQ2IsT0FBTyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztJQUM3QixDQUFDO0lBRU8sVUFBVTtRQUNkLE9BQU8sSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUM7SUFDOUIsQ0FBQztJQUVPLDBCQUEwQjtRQUM5QixJQUFJLENBQUMsZUFBZSxHQUFHO1lBQ25CO2dCQUNFLGNBQWMsRUFBRTtvQkFDZCxRQUFRLEVBQUU7d0JBQ1IsUUFBUSxFQUFFLDJEQUEyRDtxQkFDdEU7aUJBQ0Y7YUFDRjtZQUNEO2dCQUNFLG9CQUFvQixFQUFFO29CQUNwQixTQUFTLEVBQUUsQ0FBQztvQkFDWixRQUFRLEVBQUUsRUFBRTtvQkFDWixPQUFPLEVBQUUsVUFBVTtpQkFDcEI7YUFDRjtZQUNEO2dCQUNFLEtBQUssRUFBRTtvQkFDTCxTQUFTLEVBQUU7d0JBQ1QsUUFBUSxFQUFFLEtBQUs7d0JBQ2YsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUU7d0JBQ3pCLFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFO3dCQUMzQixPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRTtxQkFDMUI7aUJBQ0Y7Z0JBQ0QsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUU7YUFDNUI7U0FDRixDQUFDO1FBQ0osSUFBSSxDQUFDLHFCQUFxQixHQUFHO1lBQ3pCLE9BQU8sRUFBRSxJQUFJLENBQUMsaUJBQWlCO1lBQy9CLFdBQVcsRUFBRSxJQUFJLENBQUMsZUFBZTtZQUNqQyxZQUFZLEVBQUUsS0FBSztTQUN0QixDQUFDO1FBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDM0UsT0FBTztJQUNYLENBQUM7SUFFTywwQkFBMEI7UUFDOUIsSUFBSSxDQUFDLGVBQWUsR0FBRztZQUNuQjtnQkFDRSxjQUFjLEVBQUU7b0JBQ2QsUUFBUSxFQUFFO3dCQUNSLFFBQVEsRUFBRSwyREFBMkQ7cUJBQ3RFO2lCQUNGO2FBQ0Y7WUFDRDtnQkFDRSxvQkFBb0IsRUFBRTtvQkFDcEIsU0FBUyxFQUFFLENBQUM7b0JBQ1osUUFBUSxFQUFFLEVBQUU7b0JBQ1osT0FBTyxFQUFFLFVBQVU7aUJBQ3BCO2FBQ0Y7WUFDRDtnQkFDRSxLQUFLLEVBQUU7b0JBQ0wsU0FBUyxFQUFFO3dCQUNULFFBQVEsRUFBRSxLQUFLO3dCQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO3dCQUN6QixRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRTt3QkFDM0IsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUU7cUJBQzFCO2lCQUNGO2dCQUNELFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFO2FBQzVCO1NBQ0YsQ0FBQztRQUNKLElBQUksQ0FBQyxxQkFBcUIsR0FBRztZQUN6QixPQUFPLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtZQUMvQixXQUFXLEVBQUUsSUFBSSxDQUFDLGVBQWU7WUFDakMsWUFBWSxFQUFFLEtBQUs7U0FDdEIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQzNFLE9BQU87SUFDWCxDQUFDO0lBRU8saUNBQWlDO1FBQ3JDLElBQUksQ0FBQyxzQkFBc0IsR0FBRztZQUMxQjtnQkFDRSxjQUFjLEVBQUU7b0JBQ2QsUUFBUSxFQUFFO3dCQUNSLFFBQVEsRUFBRSwyREFBMkQ7cUJBQ3RFO2lCQUNGO2FBQ0Y7WUFDRDtnQkFDRSxvQkFBb0IsRUFBRTtvQkFDcEIsU0FBUyxFQUFFLENBQUM7b0JBQ1osUUFBUSxFQUFFLEVBQUU7b0JBQ1osT0FBTyxFQUFFLFVBQVU7aUJBQ3BCO2FBQ0Y7U0FDRixDQUFDO1FBQ0osSUFBSSxDQUFDLDRCQUE0QixHQUFHO1lBQ2hDLE9BQU8sRUFBRSxJQUFJLENBQUMsaUJBQWlCO1lBQy9CLFdBQVcsRUFBRSxJQUFJLENBQUMsc0JBQXNCO1lBQ3hDLFlBQVksRUFBRSxLQUFLO1NBQ3RCLENBQUM7UUFDRixJQUFJLENBQUMseUJBQXlCLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztRQUN6RixPQUFPO0lBQ1gsQ0FBQztJQUlNLDRCQUE0QixDQUFDLHVCQUErQixFQUFFLEtBQWEsRUFBRSxNQUFjLEVBQUUsS0FBYSxFQUFFLE1BQWM7UUFFN0gsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFFdEIsSUFBSSx1QkFBdUIsSUFBSSx1QkFBdUIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQy9ELHVCQUF1QixHQUFHLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7WUFDdkYsSUFBSSxTQUFTLEdBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1lBQ3pELFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdEIsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDOUIsU0FBUyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3JDLGlEQUFpRDtZQUNqRCxJQUFJLHdCQUF3QixHQUFRO2dCQUNsQyxLQUFLLEVBQUU7b0JBQ0wsU0FBUyxFQUFFO3dCQUNULFFBQVEsRUFBRSxLQUFLO3dCQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO3dCQUN6QixRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRTt3QkFDM0IsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUU7cUJBQzFCO2lCQUNGO2dCQUNELFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFO2FBQzVCLENBQUM7WUFDRixTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQztZQUNqRixJQUFJLHFCQUFxQixHQUFVLFNBQVMsQ0FBQztZQUM3QyxPQUFPLHFCQUFxQixDQUFDO1NBQ2hDO2FBQU07WUFDSCxJQUFJLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztZQUNsQyxJQUFJLGFBQWEsR0FBRztnQkFDaEIsTUFBTSxFQUFHLENBQUM7Z0JBQ1YsTUFBTSxFQUFHLElBQUksQ0FBQyxJQUFJO2dCQUNsQixrQkFBa0IsRUFBRSxJQUFJO2dCQUN4QixPQUFPLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtnQkFDaEMsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVO2dCQUN2QixXQUFXLEVBQUUsSUFBSSxDQUFDLGVBQWU7Z0JBQ2pDLFNBQVMsRUFBRSxJQUFJLENBQUMsYUFBYTtnQkFDN0IsU0FBUyxFQUFFLElBQUksQ0FBQyxZQUFZO2FBQy9CLENBQUM7WUFDRixPQUFPLGFBQWEsQ0FBQztTQUN4QjtJQUNMLENBQUM7SUFBQSxDQUFDO0lBRUssNEJBQTRCLENBQUMsdUJBQStCLEVBQUUsS0FBYSxFQUFFLE1BQWMsRUFBRSxLQUFhLEVBQUUsTUFBYztRQUU3SCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUV0QixJQUFJLHVCQUF1QixJQUFJLHVCQUF1QixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDL0QsdUJBQXVCLEdBQUcsdUJBQXVCLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsQ0FBQztZQUN2RixJQUFJLFNBQVMsR0FBUSxJQUFJLENBQUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7WUFDekQsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN0QixTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUM5QixTQUFTLENBQUMsa0JBQWtCLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDckMsaURBQWlEO1lBQ2pELElBQUksd0JBQXdCLEdBQVE7Z0JBQ2xDLEtBQUssRUFBRTtvQkFDTCxTQUFTLEVBQUU7d0JBQ1QsUUFBUSxFQUFFLEtBQUs7d0JBQ2YsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUU7d0JBQ3pCLFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFO3dCQUMzQixPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRTtxQkFDMUI7aUJBQ0Y7Z0JBQ0QsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUU7YUFDNUIsQ0FBQztZQUNGLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBQ2pGLElBQUkscUJBQXFCLEdBQVUsU0FBUyxDQUFDO1lBQzdDLE9BQU8scUJBQXFCLENBQUM7U0FDaEM7YUFBTTtZQUNILElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1lBQ2xDLElBQUksYUFBYSxHQUFHO2dCQUNoQixNQUFNLEVBQUcsQ0FBQztnQkFDVixNQUFNLEVBQUcsSUFBSSxDQUFDLElBQUk7Z0JBQ2xCLGtCQUFrQixFQUFFLElBQUk7Z0JBQ3hCLE9BQU8sRUFBRSxJQUFJLENBQUMsa0JBQWtCO2dCQUNoQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVU7Z0JBQ3ZCLFdBQVcsRUFBRSxJQUFJLENBQUMsZUFBZTtnQkFDakMsU0FBUyxFQUFFLElBQUksQ0FBQyxhQUFhO2dCQUM3QixTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVk7YUFDL0IsQ0FBQztZQUNGLE9BQU8sYUFBYSxDQUFDO1NBQ3hCO0lBQ0wsQ0FBQztJQUFBLENBQUM7SUFFSyx3QkFBd0IsQ0FBQyx1QkFBK0I7UUFDM0QsSUFBSSx1QkFBdUIsSUFBSSx1QkFBdUIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQy9ELHVCQUF1QixHQUFHLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7WUFDdkYsSUFBSSxTQUFTLEdBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1lBQ3pELFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdEIsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDOUIsU0FBUyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3JDLElBQUkscUJBQXFCLEdBQVUsU0FBUyxDQUFDO1lBQzdDLE9BQU8scUJBQXFCLENBQUM7U0FDaEM7YUFBTTtZQUNILElBQUksQ0FBQyxpQ0FBaUMsRUFBRSxDQUFDO1lBQ3pDLElBQUksYUFBYSxHQUFHO2dCQUNoQixNQUFNLEVBQUcsQ0FBQztnQkFDVixNQUFNLEVBQUcsSUFBSSxDQUFDLElBQUk7Z0JBQ2xCLGtCQUFrQixFQUFFLElBQUk7Z0JBQ3hCLE9BQU8sRUFBRSxJQUFJLENBQUMseUJBQXlCO2dCQUN2QyxNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVU7Z0JBQ3ZCLFdBQVcsRUFBRSxJQUFJLENBQUMsZUFBZTtnQkFDakMsU0FBUyxFQUFFLElBQUksQ0FBQyxhQUFhO2dCQUM3QixTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVk7YUFDL0IsQ0FBQztZQUNGLE9BQU8sYUFBYSxDQUFDO1NBQ3hCO0lBQ0wsQ0FBQztJQUFBLENBQUM7Q0FDTDtBQUVELE1BQU0sVUFBVSxtQkFBbUIsQ0FBQyxhQUFvQixFQUFFLGVBQW9DO0lBQzFGLG1GQUFtRjtJQUNuRixNQUFNLHVCQUF1QixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDOUQsTUFBTSxhQUFhLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLENBQVMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDOUUsTUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLElBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQixJQUFJLE9BQU8sS0FBSyxJQUFJLFFBQVEsRUFBRTtZQUMxQix1RUFBdUU7WUFDdkUsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMzRDtRQUNELDJEQUEyRDtRQUMzRCxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxTQUFTLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNyRCxDQUFDLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztJQUM1QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDckMsQ0FBQyJ9

/***/ }),

/***/ "./src/resultAggregator.ts":
/*!*********************************!*\
  !*** ./src/resultAggregator.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "aggregateDates": () => (/* binding */ aggregateDates),
/* harmony export */   "aggregateNumeric": () => (/* binding */ aggregateNumeric),
/* harmony export */   "aggregateResults": () => (/* binding */ aggregateResults),
/* harmony export */   "aggregateResults2": () => (/* binding */ aggregateResults2),
/* harmony export */   "avg": () => (/* binding */ avg),
/* harmony export */   "getOldDate": () => (/* binding */ getOldDate)
/* harmony export */ });
function aggregateResults(searchResult, columnDefinition) {
    return columnDefinition.map((cd) => {
        const directSource = cd['source'];
        if (directSource) {
            if (directSource == "_hits") {
                return searchResult.totalHits;
            }
            else {
                console.log(`Unknown key: ${directSource}`);
                return null;
            }
        }
        const documentSource = cd['documentSource'];
        const agg = cd['agg'];
        // find first non-null value for field in search result
        const valuesForField = searchResult.documents.map((document) => document[documentSource]);
        const firstNonNullValue = valuesForField.find(value => value !== undefined);
        if (typeof (firstNonNullValue) == 'number') {
            return aggregateNumeric(valuesForField, agg);
        }
        else if (firstNonNullValue instanceof Date) {
            return aggregateDates(valuesForField, agg);
        }
        else {
            //console.log("Unsupported type " + firstNonNullValue);
            return null;
        }
    });
}
function aggregateResults2(searchResultControl, searchResultExperimentA, searchResultExperimentB, columnDefinition) {
    return columnDefinition.map((cd) => {
        let searchResult = searchResultControl;
        const directSource = cd['source'];
        if (directSource) {
            if (directSource == "_hits") {
                return searchResult.totalHits;
            }
            else {
                console.log(`Unknown key: ${directSource}`);
                return null;
            }
        }
        const documentSource = cd['documentSource'];
        const agg = cd['agg'];
        // find first non-null value for field in search result
        const valuesForField = searchResult.documents.map((document) => document[documentSource]);
        const firstNonNullValue = valuesForField.find(value => value !== undefined);
        if (typeof (firstNonNullValue) == 'number') {
            return aggregateNumeric(valuesForField, agg);
        }
        else if (firstNonNullValue instanceof Date) {
            return aggregateDates(valuesForField, agg);
        }
        else {
            console.log("Unsupported type " + firstNonNullValue);
            return null;
        }
    });
}
function aggregateNumeric(numbers, agg) {
    if (numbers.length == 0) {
        // cannot agg empty lists
        return null;
    }
    else {
        if (agg == 'min') {
            return Math.min(...numbers);
        }
        else if (agg == 'max') {
            return Math.max(...numbers);
        }
        else if (agg == 'avg') {
            return avg(numbers);
        }
        else {
            return null;
        }
    }
}
function avg(numbers) {
    return numbers.reduce(function (p, c, i, a) { return p + (c / a.length); }, 0);
}
function getOldDate() {
    //TODO 2010-01-01T00:00:00 is the default value for ICF/HUDx column hudx_dr if no value is specified when a doc is loaded. Let's use that here instead.
    let value = Date.now() - 400000000000;
    return value;
}
function aggregateDates(dates, agg) {
    if (dates.length == 0) {
        return null;
    }
    else {
        const datesAsMillis = dates.map((date) => {
            if (date === null || date === undefined) {
                let value = getOldDate();
                return value;
            }
            else {
                let value = date.valueOf();
                return value;
            }
        });
        const aggregationValue = aggregateNumeric(datesAsMillis, agg);
        return aggregationValue != null ? new Date(aggregationValue) : null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0QWdncmVnYXRvci5qcyIsInNvdXJjZVJvb3QiOiIuLi9zcmMvIiwic291cmNlcyI6WyJzcmMvcmVzdWx0QWdncmVnYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsWUFBMEIsRUFBRSxnQkFBMEM7SUFDbkcsT0FBTyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRTtRQUMvQixNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEMsSUFBSSxZQUFZLEVBQUU7WUFDZCxJQUFJLFlBQVksSUFBSSxPQUFPLEVBQUU7Z0JBQ3pCLE9BQU8sWUFBWSxDQUFDLFNBQVMsQ0FBQzthQUNqQztpQkFBTTtnQkFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixZQUFZLEVBQUUsQ0FBQyxDQUFDO2dCQUM1QyxPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFDRCxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLENBQVcsQ0FBQztRQUN0RCxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFXLENBQUM7UUFFaEMsdURBQXVEO1FBQ3ZELE1BQU0sY0FBYyxHQUFHLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBdUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFFekgsTUFBTSxpQkFBaUIsR0FBRyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDO1FBRTVFLElBQUksT0FBTSxDQUFDLGlCQUFpQixDQUFDLElBQUksUUFBUSxFQUFFO1lBQ3ZDLE9BQU8sZ0JBQWdCLENBQUMsY0FBMEIsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUM1RDthQUFNLElBQUksaUJBQWlCLFlBQVksSUFBSSxFQUFFO1lBQzFDLE9BQU8sY0FBYyxDQUFDLGNBQXdCLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDeEQ7YUFBTTtZQUNILHVEQUF1RDtZQUN2RCxPQUFPLElBQUksQ0FBQztTQUNmO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQixDQUM3QixtQkFBaUMsRUFDakMsdUJBQXFDLEVBQ3JDLHVCQUFxQyxFQUNyQyxnQkFBMEM7SUFDMUMsT0FBTyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRTtRQUUvQixJQUFJLFlBQVksR0FBRyxtQkFBbUIsQ0FBQztRQUV2QyxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEMsSUFBSSxZQUFZLEVBQUU7WUFDZCxJQUFJLFlBQVksSUFBSSxPQUFPLEVBQUU7Z0JBQ3pCLE9BQU8sWUFBWSxDQUFDLFNBQVMsQ0FBQzthQUNqQztpQkFBTTtnQkFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixZQUFZLEVBQUUsQ0FBQyxDQUFDO2dCQUM1QyxPQUFPLElBQUksQ0FBQzthQUNmO1NBQ0o7UUFDRCxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLENBQVcsQ0FBQztRQUN0RCxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFXLENBQUM7UUFFaEMsdURBQXVEO1FBQ3ZELE1BQU0sY0FBYyxHQUFHLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBdUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFFekgsTUFBTSxpQkFBaUIsR0FBRyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDO1FBRTVFLElBQUksT0FBTSxDQUFDLGlCQUFpQixDQUFDLElBQUksUUFBUSxFQUFFO1lBQ3ZDLE9BQU8sZ0JBQWdCLENBQUMsY0FBMEIsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUM1RDthQUFNLElBQUksaUJBQWlCLFlBQVksSUFBSSxFQUFFO1lBQzFDLE9BQU8sY0FBYyxDQUFDLGNBQXdCLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDeEQ7YUFBTTtZQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEdBQUcsaUJBQWlCLENBQUMsQ0FBQztZQUNyRCxPQUFPLElBQUksQ0FBQztTQUNmO0lBRUwsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLE9BQWlCLEVBQUUsR0FBVztJQUMzRCxJQUFJLE9BQU8sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1FBQ3JCLHlCQUF5QjtRQUN6QixPQUFPLElBQUksQ0FBQztLQUNmO1NBQU07UUFDSCxJQUFJLEdBQUcsSUFBSSxLQUFLLEVBQUU7WUFDZCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQztTQUMvQjthQUFNLElBQUksR0FBRyxJQUFJLEtBQUssRUFBRTtZQUNyQixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQztTQUMvQjthQUFNLElBQUksR0FBRyxJQUFJLEtBQUssRUFBRTtZQUNyQixPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUN2QjthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUM7U0FDZjtLQUNKO0FBQ0wsQ0FBQztBQUVELE1BQU0sVUFBVSxHQUFHLENBQUMsT0FBaUI7SUFDakMsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxJQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQSxDQUFBLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVU7SUFDdEIsdUpBQXVKO0lBQ3ZKLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxZQUFZLENBQUM7SUFDdEMsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQUVELE1BQU0sVUFBVSxjQUFjLENBQUMsS0FBYSxFQUFFLEdBQVc7SUFDckQsSUFBSSxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtRQUNuQixPQUFPLElBQUksQ0FBQztLQUNmO1NBQU07UUFDSCxNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDckMsSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxTQUFTLEVBQUU7Z0JBQ3JDLElBQUksS0FBSyxHQUFHLFVBQVUsRUFBRSxDQUFDO2dCQUN6QixPQUFPLEtBQUssQ0FBQzthQUNoQjtpQkFDSTtnQkFDRCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUE7Z0JBQzFCLE9BQU8sS0FBSyxDQUFDO2FBQ2hCO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDSCxNQUFNLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUM5RCxPQUFPLGdCQUFnQixJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0tBQ3ZFO0FBQ0wsQ0FBQyJ9

/***/ }),

/***/ "./src/rreStore.ts":
/*!*************************!*\
  !*** ./src/rreStore.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rreStore": () => (/* binding */ rreStore)
/* harmony export */ });
/* harmony import */ var _data_Hudx_Experiment_100_rre_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data/Hudx_Experiment_100_rre.json */ "./src/data/Hudx_Experiment_100_rre.json");

//Notes: RRE stands for Rated Ranking Evaluator according to https://quepid.com/tutorials/
// To create the JSON file referred to above, I used app.quepid.com, then
// navigated to Hudx Experiment 100, did Export, picked RRE.
class rreStore {
    constructor() {
        this.maxK = 50; //we are going to ensure that we can take at least this many
        this.rre = JSON.parse(_data_Hudx_Experiment_100_rre_json__WEBPACK_IMPORTED_MODULE_0__.toString());
        this.id_field = this.rre.id_field;
        this.index = this.rre.index;
        this.template = this.rre.template;
        this.store = [];
        this.queryStrings = [];
        this.allRatings = [];
        this.bestRatings = [];
        this.rre.queries.forEach((query) => {
            if (this.exists(query) && this.exists(query.relevant_documents) && this.exists(Object.keys(query.relevant_documents))) {
                let queryString = query.placeholders["$query"];
                Object.keys(query.relevant_documents).forEach((relevant_document_key) => {
                    if (query.relevant_documents[relevant_document_key] !== null) {
                        query.relevant_documents[relevant_document_key].forEach((url) => {
                            if (this.exists(queryString)) {
                                //console.log("for the queryString " + queryString + " the url " + url + " is a " + relevant_document_key);
                                this.queryStrings.push(queryString);
                                this.store[queryString + "_" + url] = relevant_document_key; //which is the rating as a string
                                if (this.allRatings[queryString] == null)
                                    this.allRatings[queryString] = [];
                                this.allRatings[queryString].push(relevant_document_key);
                            }
                        });
                    }
                });
            }
        });
        this.rre.queries.forEach((query) => {
            if (this.exists(query) && this.exists(query.relevant_documents) && this.exists(Object.keys(query.relevant_documents))) {
                let queryString = query.placeholders["$query"];
                //console.log("queryString1: " + queryString);
                this.bestRatings[queryString] = [...this.allRatings[queryString]]; //copy all ratings for that query string
                const sorter = function (a, b) {
                    //sort in order of descending numbers, with nulls at the end
                    if (a === b)
                        return 0;
                    else if (a === null)
                        return 1;
                    else if (b === null)
                        return -1;
                    else
                        return (a < b) ? 1 : -1;
                };
                this.bestRatings[queryString].sort(sorter);
                this.pushNullsOnTheEndToEnsureLength(this.bestRatings[queryString], this.maxK);
                this.bestRatings[queryString] = this.chopLengthsToMaxK(this.bestRatings[queryString], this.maxK);
                //console.log(this.bestRatings[<any>queryString]);
            }
        });
    }
    pushNullsOnTheEndToEnsureLength(array, k) {
        let nullsToPush = k - (array.length);
        for (let i = 0; i < nullsToPush; i++) {
            array.push(null);
        }
    }
    chopLengthsToMaxK(array, k) {
        return array.slice(0, k);
    }
    exists(value) {
        return value !== null && value !== undefined;
    }
    get_id_field() {
        return this.id_field;
    }
    get_index() {
        return this.index;
    }
    get_template() {
        return this.template;
    }
    get_rating(queryString, url) {
        let answer = this.store[queryString + "_" + url];
        if (this.exists(answer)) {
            return answer;
        }
        else {
            return undefined;
        }
    }
    get_rating_or_zero(queryString, url) {
        let answer = this.store[queryString + "_" + url];
        if (this.exists(answer)) {
            return parseInt(answer);
        }
        else {
            return 0;
        }
    }
    get_rating_or_null(queryString, url) {
        let answer = this.store[queryString + "_" + url];
        if (this.exists(answer)) {
            return parseInt(answer);
        }
        else {
            return null;
        }
    }
    get_ideal_ratings(queryString, k) {
        if (k > this.maxK) {
            throw Error("Error - requested k was " + k + " but the maximum value of k is: " + this.maxK);
        }
        if (!this.exists(this.bestRatings[queryString]))
            return new Array(20).fill(null).slice(0, k);
        else
            return this.bestRatings[queryString].slice(0, k);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnJlU3RvcmUuanMiLCJzb3VyY2VSb290IjoiLi4vc3JjLyIsInNvdXJjZXMiOlsic3JjL3JyZVN0b3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sT0FBTyxNQUFNLHFDQUFxQyxDQUFDO0FBRTFELDBGQUEwRjtBQUMxRix5RUFBeUU7QUFDekUsNERBQTREO0FBRTVELE1BQU0sT0FBTyxRQUFRO0lBWWpCO1FBRlEsU0FBSSxHQUFXLEVBQUUsQ0FBQyxDQUFDLDREQUE0RDtRQUluRixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztRQUNsQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUM7UUFDbEMsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBUyxFQUFFLEVBQUU7WUFDbkMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEVBQUU7Z0JBQ25ILElBQUksV0FBVyxHQUFXLEtBQUssQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ3ZELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMscUJBQTBCLEVBQUUsRUFBRTtvQkFDekUsSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMscUJBQXFCLENBQUMsS0FBSyxJQUFJLEVBQUU7d0JBQzFELEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQVEsRUFBRSxFQUFFOzRCQUNqRSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEVBQUU7Z0NBQzFCLDJHQUEyRztnQ0FDM0csSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7Z0NBQ3BDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxxQkFBcUIsQ0FBQyxDQUFDLGlDQUFpQztnQ0FDOUYsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFNLFdBQVcsQ0FBQyxJQUFJLElBQUk7b0NBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBTSxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7Z0NBQ3RGLElBQUksQ0FBQyxVQUFVLENBQU0sV0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7NkJBQ2pFO3dCQUNMLENBQUMsQ0FBQyxDQUFDO3FCQUNOO2dCQUNMLENBQUMsQ0FBQyxDQUFDO2FBQ047UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQVMsRUFBRSxFQUFFO1lBQ2pDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxFQUFFO2dCQUNuSCxJQUFJLFdBQVcsR0FBVyxLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUN2RCw4Q0FBOEM7Z0JBQzlDLElBQUksQ0FBQyxXQUFXLENBQU0sV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQU0sV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLHdDQUF3QztnQkFDckgsTUFBTSxNQUFNLEdBQUcsVUFBVSxDQUFrQixFQUFFLENBQWtCO29CQUMzRCw0REFBNEQ7b0JBQzVELElBQUksQ0FBQyxLQUFLLENBQUM7d0JBQUUsT0FBTyxDQUFDLENBQUM7eUJBQ2pCLElBQUksQ0FBQyxLQUFLLElBQUk7d0JBQUUsT0FBTyxDQUFDLENBQUM7eUJBQ3pCLElBQUksQ0FBQyxLQUFLLElBQUk7d0JBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQzs7d0JBQzFCLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pDLENBQUMsQ0FBQTtnQkFDRCxJQUFJLENBQUMsV0FBVyxDQUFNLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDaEQsSUFBSSxDQUFDLCtCQUErQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQU0sV0FBVyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNwRixJQUFJLENBQUMsV0FBVyxDQUFNLFdBQVcsQ0FBQyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFNLFdBQVcsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDM0csa0RBQWtEO2FBQ3JEO1FBQ1AsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU8sK0JBQStCLENBQUMsS0FBc0IsRUFBRSxDQUFTO1FBQ3JFLElBQUksV0FBVyxHQUFVLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2xDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDcEI7SUFDTCxDQUFDO0lBRU8saUJBQWlCLENBQUMsS0FBc0IsRUFBRSxDQUFTO1FBQ3ZELE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFVO1FBQ3BCLE9BQU8sS0FBSyxLQUFLLElBQUksSUFBSSxLQUFLLEtBQUssU0FBUyxDQUFDO0lBQ2pELENBQUM7SUFFTSxZQUFZO1FBQ2YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFTSxZQUFZO1FBQ2YsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxVQUFVLENBQUMsV0FBa0IsRUFBRSxHQUFVO1FBQzVDLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNqRCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDckIsT0FBTyxNQUFNLENBQUM7U0FDakI7YUFBTTtZQUNILE9BQU8sU0FBUyxDQUFDO1NBQ3BCO0lBQ0wsQ0FBQztJQUVNLGtCQUFrQixDQUFDLFdBQWtCLEVBQUUsR0FBVTtRQUNwRCxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDakQsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3JCLE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzNCO2FBQU07WUFDSCxPQUFPLENBQUMsQ0FBQztTQUNaO0lBQ0wsQ0FBQztJQUNNLGtCQUFrQixDQUFDLFdBQWtCLEVBQUUsR0FBVTtRQUNwRCxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDakQsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3JCLE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzNCO2FBQU07WUFDSCxPQUFPLElBQUksQ0FBQztTQUNmO0lBQ0wsQ0FBQztJQUVNLGlCQUFpQixDQUFDLFdBQWtCLEVBQUUsQ0FBUztRQUNsRCxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2YsTUFBTSxLQUFLLENBQUMsMEJBQTBCLEdBQUcsQ0FBQyxHQUFHLGtDQUFrQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNoRztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQU0sV0FBVyxDQUFDLENBQUM7WUFBRSxPQUFPLElBQUksS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDOztZQUM3RixPQUFPLElBQUksQ0FBQyxXQUFXLENBQU0sV0FBVyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0NBRUoifQ==

/***/ }),

/***/ "./src/scorer.ts":
/*!***********************!*\
  !*** ./src/scorer.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScorerForNdcg": () => (/* binding */ ScorerForNdcg)
/* harmony export */ });
class ScorerForNdcg {
    constructor() {
    }
    calcNdcgScore(rreStore, keywords, sr) {
        let k = 10; // @Rank
        let missing_rating = 0; // pessimistic assumption
        let ratings = Array(k);
        let i = 0;
        sr.documents.forEach((element) => {
            if (i < 10) {
                ratings[i] = rreStore.get_rating_or_null(keywords, "" + element.url);
                i = i + 1;
            }
        });
        let ideal = rreStore.get_ideal_ratings(keywords, k);
        let scores = Array(k);
        for (let i = 0; i < k; i++) {
            if (!ideal[i]) {
                ideal[i] = missing_rating;
            }
            if ((ratings[i] != null)) {
                scores[i] = (ratings[i]);
            }
            else {
                scores[i] = missing_rating;
            }
        }
        let nDCG = this.nDCG(scores, ideal, k);
        let roundedOffNDCG = Math.round(((nDCG) + Number.EPSILON) * 1000) / 1000;
        return roundedOffNDCG;
    }
    DCG(values, k) {
        let dcg = 0;
        for (let i = 0; i < k; i++) {
            if (values[i] != null) {
                let val = values[i];
                let d = Math.log2(i + 2);
                let n = Math.pow(2, val) - 1;
                dcg += d ? (n / d) : 0;
            }
        }
        return dcg;
    }
    nDCG(values, ideal, k) {
        let n = this.DCG(values, k);
        let d = this.DCG(ideal, k);
        return d ? (n / d) : 0;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NvcmVyLmpzIiwic291cmNlUm9vdCI6Ii4uL3NyYy8iLCJzb3VyY2VzIjpbInNyYy9zY29yZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxPQUFPLGFBQWE7SUFDdEI7SUFFQSxDQUFDO0lBRU0sYUFBYSxDQUFDLFFBQWtCLEVBQUUsUUFBZ0IsRUFBRSxFQUFnQjtRQUN2RSxJQUFJLENBQUMsR0FBVyxFQUFFLENBQUMsQ0FBQyxRQUFRO1FBQzVCLElBQUksY0FBYyxHQUFXLENBQUMsQ0FBQyxDQUFDLHlCQUF5QjtRQUN6RCxJQUFJLE9BQU8sR0FBVSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLEdBQVcsQ0FBQyxDQUFDO1FBRWxCLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBd0QsRUFBRSxFQUFFO1lBQzdFLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRTtnQkFDUixPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLGtCQUFrQixDQUFDLFFBQVEsRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNyRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNiO1FBQ04sQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLEtBQUssR0FBb0IsUUFBUSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVyRSxJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUNYLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxjQUFjLENBQUM7YUFDN0I7WUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFFO2dCQUN0QixNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUM1QjtpQkFBTTtnQkFDSCxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsY0FBYyxDQUFDO2FBQzlCO1NBQ0o7UUFDRCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdkMsSUFBSSxjQUFjLEdBQVksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsRixPQUFPLGNBQWMsQ0FBQztJQUMxQixDQUFDO0lBRU8sR0FBRyxDQUFDLE1BQXVCLEVBQUUsQ0FBUztRQUMxQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDWixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hCLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRTtnQkFDbkIsSUFBSSxHQUFHLEdBQWtCLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDbkMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDN0IsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUMxQjtTQUNKO1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBRU8sSUFBSSxDQUFDLE1BQXVCLEVBQUUsS0FBc0IsRUFBRSxDQUFTO1FBQ25FLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNCLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNCLENBQUM7Q0FFSiJ9

/***/ }),

/***/ "./src/state.ts":
/*!**********************!*\
  !*** ./src/state.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SessionStateStore": () => (/* binding */ SessionStateStore),
/* harmony export */   "StateManager": () => (/* binding */ StateManager)
/* harmony export */ });
class SessionStateStore {
    loadState() {
        const storedState = sessionStorage.getItem(SessionStateStore.STATE_KEY);
        if (!storedState) {
            return null;
        }
        else {
            return JSON.parse(storedState);
        }
    }
    saveState(state) {
        sessionStorage.setItem(SessionStateStore.STATE_KEY, JSON.stringify(state));
    }
}
SessionStateStore.STATE_KEY = "list_state";
class StateManager {
    constructor(stateStore, initialState) {
        this.stateStore = stateStore;
        this.initialState = initialState;
    }
    getState() {
        const stateFromStore = this.stateStore.loadState();
        if (stateFromStore == null) {
            const state = this.initialState();
            this.stateStore.saveState(state);
            return state;
        }
        else {
            return stateFromStore;
        }
    }
    setState(state) {
        this.stateStore.saveState(state);
    }
    setUrl(url) {
        return this.transformState((oldState) => ({ ...oldState, ...{ url: url } }));
    }
    setQueryTemplateControl(queryTemplate) {
        return this.transformState((oldState) => ({ ...oldState, ...{ queryTemplateControl: queryTemplate } }));
    }
    setQueryTemplateExperimentA(queryTemplate) {
        return this.transformState((oldState) => ({ ...oldState, ...{ queryTemplateExperimentA: queryTemplate } }));
    }
    setQueryTemplateExperimentB(queryTemplate) {
        return this.transformState((oldState) => ({ ...oldState, ...{ queryTemplateExperimentB: queryTemplate } }));
    }
    setQueries(queries) {
        return this.transformState((oldState) => ({ ...oldState, ...{ keywords: queries, expanded: [] } }));
    }
    setDecayA(decay) {
        return this.transformState((oldState) => ({ ...oldState, ...{ decayA: decay } }));
    }
    setWeightA(weight) {
        return this.transformState((oldState) => ({ ...oldState, ...{ weightA: weight } }));
    }
    setScaleA(scale) {
        return this.transformState((oldState) => ({ ...oldState, ...{ scaleA: scale } }));
    }
    setOffsetA(offset) {
        return this.transformState((oldState) => ({ ...oldState, ...{ offsetA: offset } }));
    }
    setDecayB(decay) {
        return this.transformState((oldState) => ({ ...oldState, ...{ decayB: decay } }));
    }
    setWeightB(weight) {
        return this.transformState((oldState) => ({ ...oldState, ...{ weightB: weight } }));
    }
    setScaleB(scale) {
        return this.transformState((oldState) => ({ ...oldState, ...{ scaleB: scale } }));
    }
    setOffsetB(offset) {
        return this.transformState((oldState) => ({ ...oldState, ...{ offsetB: offset } }));
    }
    transformState(stateModifier) {
        const currentState = this.getState();
        const newState = stateModifier(currentState);
        this.stateStore.saveState(newState);
        return newState;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUuanMiLCJzb3VyY2VSb290IjoiLi4vc3JjLyIsInNvdXJjZXMiOlsic3JjL3N0YXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDQSxNQUFNLE9BQU8saUJBQWlCO0lBSTFCLFNBQVM7UUFDTCxNQUFNLFdBQVcsR0FBRyxjQUFjLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hFLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDZCxPQUFPLElBQUksQ0FBQztTQUNmO2FBQU07WUFDSCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFVLENBQUM7U0FDM0M7SUFDTCxDQUFDO0lBRUQsU0FBUyxDQUFDLEtBQVk7UUFDbEIsY0FBYyxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQy9FLENBQUM7O0FBYmUsMkJBQVMsR0FBVyxZQUFZLENBQUM7QUFpQnJELE1BQU0sT0FBTyxZQUFZO0lBS3JCLFlBQVksVUFBc0IsRUFBRSxZQUF5QjtRQUN6RCxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQTtRQUM1QixJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUNyQyxDQUFDO0lBRUQsUUFBUTtRQUNKLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDbkQsSUFBSSxjQUFjLElBQUksSUFBSSxFQUFFO1lBQ3hCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNsQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNqQyxPQUFPLEtBQUssQ0FBQztTQUNoQjthQUFNO1lBQ0gsT0FBTyxjQUFjLENBQUM7U0FDekI7SUFDTCxDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQVk7UUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELE1BQU0sQ0FBQyxHQUFXO1FBQ2QsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsUUFBZSxFQUFTLEVBQUUsQ0FBQyxDQUNuRCxFQUFDLEdBQUcsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQVcsQ0FBQSxDQUMzQyxDQUFBO0lBQ0wsQ0FBQztJQUVELHVCQUF1QixDQUFDLGFBQW9CO1FBQ3hDLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLFFBQWUsRUFBUyxFQUFFLENBQUMsQ0FDbkQsRUFBQyxHQUFHLFFBQVEsRUFBRSxHQUFHLEVBQUUsb0JBQW9CLEVBQUUsYUFBYSxFQUFFLEVBQVcsQ0FBQSxDQUN0RSxDQUFBO0lBQ0wsQ0FBQztJQUVELDJCQUEyQixDQUFDLGFBQW9CO1FBQzVDLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLFFBQWUsRUFBUyxFQUFFLENBQUMsQ0FDbkQsRUFBQyxHQUFHLFFBQVEsRUFBRSxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsYUFBYSxFQUFFLEVBQVcsQ0FBQSxDQUMxRSxDQUFBO0lBQ0wsQ0FBQztJQUVELDJCQUEyQixDQUFDLGFBQW9CO1FBQzVDLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLFFBQWUsRUFBUyxFQUFFLENBQUMsQ0FDbkQsRUFBQyxHQUFHLFFBQVEsRUFBRSxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsYUFBYSxFQUFFLEVBQVcsQ0FBQSxDQUMxRSxDQUFBO0lBQ0wsQ0FBQztJQUVELFVBQVUsQ0FBQyxPQUFpQjtRQUN4QixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxRQUFlLEVBQVMsRUFBRSxDQUFDLENBQ25ELEVBQUMsR0FBRyxRQUFRLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxFQUFXLENBQUEsQ0FDbEUsQ0FBQTtJQUNMLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBYTtRQUNuQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxRQUFlLEVBQVMsRUFBRSxDQUFDLENBQ25ELEVBQUMsR0FBRyxRQUFRLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBVyxDQUFBLENBQ2hELENBQUE7SUFDTCxDQUFDO0lBRUQsVUFBVSxDQUFDLE1BQWM7UUFDckIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsUUFBZSxFQUFTLEVBQUUsQ0FBQyxDQUNuRCxFQUFDLEdBQUcsUUFBUSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQVcsQ0FBQSxDQUNsRCxDQUFBO0lBQ0wsQ0FBQztJQUVELFNBQVMsQ0FBQyxLQUFhO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLFFBQWUsRUFBUyxFQUFFLENBQUMsQ0FDbkQsRUFBQyxHQUFHLFFBQVEsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFXLENBQUEsQ0FDaEQsQ0FBQTtJQUNMLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBYztRQUNyQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxRQUFlLEVBQVMsRUFBRSxDQUFDLENBQ25ELEVBQUMsR0FBRyxRQUFRLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBVyxDQUFBLENBQ2xELENBQUE7SUFDTCxDQUFDO0lBRUQsU0FBUyxDQUFDLEtBQWE7UUFDbkIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsUUFBZSxFQUFTLEVBQUUsQ0FBQyxDQUNuRCxFQUFDLEdBQUcsUUFBUSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQVcsQ0FBQSxDQUNoRCxDQUFBO0lBQ0wsQ0FBQztJQUVELFVBQVUsQ0FBQyxNQUFjO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLFFBQWUsRUFBUyxFQUFFLENBQUMsQ0FDbkQsRUFBQyxHQUFHLFFBQVEsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFXLENBQUEsQ0FDbEQsQ0FBQTtJQUNMLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBYTtRQUNuQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxRQUFlLEVBQVMsRUFBRSxDQUFDLENBQ25ELEVBQUMsR0FBRyxRQUFRLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBVyxDQUFBLENBQ2hELENBQUE7SUFDTCxDQUFDO0lBRUQsVUFBVSxDQUFDLE1BQWM7UUFDckIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsUUFBZSxFQUFTLEVBQUUsQ0FBQyxDQUNuRCxFQUFDLEdBQUcsUUFBUSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQVcsQ0FBQSxDQUNsRCxDQUFBO0lBQ0wsQ0FBQztJQUVELGNBQWMsQ0FBQyxhQUFrQztRQUM3QyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDckMsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7Q0FFSiJ9

/***/ }),

/***/ "./src/data/Hudx_Experiment_100_rre.json":
/*!***********************************************!*\
  !*** ./src/data/Hudx_Experiment_100_rre.json ***!
  \***********************************************/
/***/ ((module) => {

module.exports = "{\n  \"id_field\": \"url\",\n  \"index\": \"fess.search\",\n  \"template\": \"template.json\",\n  \"queries\": [\n    {\n      \"placeholders\": {\n        \"$query\": \"happy fair housing month\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/nfhta/digest/2022-04/\",\n          \"https://www.hudexchange.info/news/april-is-fair-housing-month-fair-housing-equals-opportunity/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/housing-counseling-works/\",\n          \"https://www.hudexchange.info/programs/nfhta/digest/2022-05/\",\n          \"https://www.hudexchange.info/programs/nfhta/fair-housing-highlights/\",\n          \"https://www.hudexchange.info/programs/nfhta/courses/basics-of-fair-housing/\",\n          \"https://www.hudexchange.info/programs/fair-housing/\",\n          \"https://www.hudexchange.info/programs/fair-housing-planning/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/news/fair-housing-month-2020-national-training-day-on-sexual-harassment-prevention-in-housing-april-29-2020/\",\n          \"https://www.hudexchange.info/news/fair-housing-month-hiv-housing-discrimination-poster-available/\",\n          \"https://www.hudexchange.info/trainings/courses/fair-housing-2021-what-counselors-need-to-know-fair-housing-in-practice/\",\n          \"https://www.hudexchange.info/resource/6699/housing-counseling-fair-housing-fact-sheet-for-housing-counselors/\",\n          \"https://www.hudexchange.info/news/new-resources-for-national-preparedness-month/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-12-fair-housing-issues-impediments-and-contributing-fact/4713/\",\n          \"https://www.hudexchange.info/trainings/courses/fair-housing-2021-what-counselors-need-to-know-fair-housing-in-disaster-recovery/\",\n          \"https://www.hudexchange.info/trainings/courses/nfhta-basics-of-fair-housing-september-2022/4755/\",\n          \"https://www.hudexchange.info/trainings/courses/fair-housing-act-s-familial-status-protections-webinar/\",\n          \"https://www.hudexchange.info/news/2022-fair-housing-office-hours/\",\n          \"https://www.hudexchange.info/trainings/courses/nfhta-fundamentals-of-fair-housing-intake-november-2022/4782/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"vawa\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/hopwa/\",\n          \"https://www.hudexchange.info/programs/cdbg-entitlement/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/vawa-implementation-call/\",\n          \"https://www.hudexchange.info/resource/4782/vawa-hopwa-project-demonstration-nofa-and-faqs/\",\n          \"https://www.hudexchange.info/news/reauthorization-of-the-violence-against-women-act-vawa/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/moves-and-portability/portability/do-violence-against-women-act-transfers-take-priority-over-all-other/\",\n          \"https://www.hudexchange.info/trainings/courses/vawa-housing-protections-implementation-considerations-for-esg-and-coc-programs/\",\n          \"https://www.hudexchange.info/resource/4718/federal-register-notice-proposed-rule-violence-against-women-act-2013-vawa-2013/\",\n          \"https://www.hudexchange.info/trainings/courses/upcoming-webcast-vawa-and-hopwa-project-demonstration-webcast/\",\n          \"https://www.hudexchange.info/trainings/courses/vawa-right-to-report-from-home-for-cdbg-recipients-webinar/4780/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/terminations/terminations/is-there-a-timeframe-by-which-an-alleged-victim-must-request-protection/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/hopwa/vawa-hopwa-demonstration/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"lsa\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/trainings/courses/lsa-office-hours-for-communities-lsa-submission-process-discussion-session/2679/\",\n          \"https://www.hudexchange.info/resource/5829/preparing-lsa-files-for-stella-p/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/6210/lsa-training-video-uploading-lsa-files/\",\n          \"https://www.hudexchange.info/resource/5726/lsa-report-specifications-and-tools/\",\n          \"https://www.hudexchange.info/trainings/courses/lsa-reminder-and-office-hours/\",\n          \"https://www.hudexchange.info/resource/6546/preparing-for-the-lsa-guidance-on-common-data-quality-issues/\",\n          \"https://www.hudexchange.info/resource/5763/overview-of-the-lsa-submission-process/\",\n          \"https://www.hudexchange.info/resource/6556/lsa-common-flags-library/\",\n          \"https://www.hudexchange.info/news/stellavising-lsa-datasets-for-cocs/\",\n          \"https://www.hudexchange.info/resource/5736/lsa-summary-display-table-shells/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/homelessness-assistance/lsa/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"consolidated plan\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/faqs/programs/cdbg-entitlement-program/consolidated-plan/can-consolidated-plan-certifications-be-attached-to-the-plan-and-sent-in/\",\n          \"https://www.hudexchange.info/resource/4528/using-data-for-consolidated-planning/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/consolidated-plan/guides/\",\n          \"https://www.hudexchange.info/programs/consolidated-plan/consolidated-plan-regulations-and-federal-register-notices/\",\n          \"https://www.hudexchange.info/programs/consolidated-plan/con-plans-aaps-capers/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-best-practices-for-the-consolidated-plan-and-action-plan-in-the-econ-planning-suite/4643/\",\n          \"https://www.hudexchange.info/resource/5040/consolidated-plan-quick-guides/\",\n          \"https://www.hudexchange.info/trainings/courses/incorporating-the-afh-in-the-consolidated-plan-webinar/2346/\",\n          \"https://www.hudexchange.info/resource/3179/consolidated-planning-data-sources/\",\n          \"https://www.hudexchange.info/news/best-practices-for-the-consolidated-plan-and-action-plan-in-the-econ-planning-suite/\",\n          \"https://www.hudexchange.info/trainings/courses/incorporating-the-afh-in-the-consolidated-plan-webinar/\",\n          \"https://www.hudexchange.info/resource/2728/esg-checklist-requirements-homelessness-annual-action-plan/\",\n          \"https://files.hudexchange.info/resources/documents/Incorporating-the-AFH-into-the-Consolidated-Plan.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/consolidated-plan/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cdbg-cv\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/state-cdbg-cv-implementation/\",\n          \"https://www.hudexchange.info/programs/covid-19/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/introduction/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/duplication-of-benefits/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/program-management/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/eligible-uses/\",\n          \"https://www.hudexchange.info/news/cdbg-cv-notice-published/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/national-objectives/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/documentation/\",\n          \"https://www.hudexchange.info/trainings/cdbg-cv-webinars/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/cdbg-cv/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"transitional housing\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/grantees/transition-house-california/\",\n          \"https://www.hudexchange.info/resource/4365/randolph-county-housing-and-transit-study/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/resource/944/characteristics-of-transitional-housing-for-homeless-families/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/project-application/other/we-have-a-transitional-housing-project-that-would-like-to-reallocate/\",\n          \"https://www.hudexchange.info/grantees/transitional-housing-services-new-jersey/?program=3\",\n          \"https://files.hudexchange.info/resources/documents/CDBG-Memorandum-Pre-agreement-Costs-for-Transitional-Housing.pdf\",\n          \"https://www.hudexchange.info/resource/3370/cdbg-memorandum-pre-agreement-costs-for-transitional-housing/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/project-application/housing-for-participants/is-hud-attempting-to-phase-out-all-coc-funded-transitional-housing/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-program-components/transitional-housing/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/news/snaps-weekly-focus-what-about-transitional-housing/\",\n          \"https://www.hudexchange.info/resource/6274/yhdp-th-rrh-joint-component-project/\",\n          \"https://www.hudexchange.info/news/snaps-in-focus-the-new-joint-transitional-housing-and-rapid-re-housing-component/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"tbra\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/resource/2279/tbra-budget-worksheet/\",\n          \"https://www.hudexchange.info/resource/6133/emergency-home-tbra-sample-application/\",\n          \"https://www.hudexchange.info/programs/home/covid-19/\",\n          \"https://www.hudexchange.info/trainings/building-home/\",\n          \"https://www.hudexchange.info/trainings/courses/designing-and-implementing-an-emergency-home-tbra-program/3513/\",\n          \"https://www.hudexchange.info/programs/home/project-profiles/homeward-bound-tbra/\",\n          \"https://www.hudexchange.info/trainings/courses/using-idis-to-administer-a-home-tbra-program/\",\n          \"https://www.hudexchange.info/resource/6139/emergency-home-tbra-sample-subrecipient-agreement/\",\n          \"https://www.hudexchange.info/resource/2128/tbra-applications-for-rental-assistance/\",\n          \"https://www.hudexchange.info/trainings/courses/ebll-lshr-amendment-training-for-tbra-recipients/4824/\",\n          \"https://www.hudexchange.info/news/now-available-emergency-home-tbra-toolkit/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/home/emergency-tbra-toolkit/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"covid\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/coc/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/programs/esg/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/home/covid-19/\",\n          \"https://www.hudexchange.info/programs/cdbg/disease/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/\",\n          \"https://www.hudexchange.info/programs/hopwa/covid-19/\",\n          \"https://www.hudexchange.info/programs/home/home-after-the-covid-19-waivers/\",\n          \"https://www.hudexchange.info/programs/environmental-review/covid-19-guidance/\",\n          \"https://www.hudexchange.info/programs/htf/covid-19/\",\n          \"https://www.hudexchange.info/programs/better-buildings-challenge/covid-19/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/covid-19/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"ura\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/trainings/courses/ura-dr-video/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/ura-overview-video/\",\n          \"https://www.hudexchange.info/trainings/courses/ura-the-hud-way-module-1-ura-overview/\",\n          \"https://www.hudexchange.info/trainings/ura-the-hud-way/resources/\",\n          \"https://www.hudexchange.info/trainings/courses/ura-al-estilo-hud-m-dulo-1-descripci-n-general-de-ura/\",\n          \"https://www.hudexchange.info/trainings/courses/ura-and-tenant-protections-nsp-webinar1/\",\n          \"https://www.hudexchange.info/resource/5754/ura-statute/\",\n          \"https://www.hudexchange.info/trainings/courses/ura-the-hud-way-module-3-ura-planning-budgeting/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/trainings/ura-the-hud-way/\",\n          \"https://www.hudexchange.info/programs/relocation/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"system performance measures\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/news/hud-releases-system-performance-measures-videos/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/news/preparing-for-the-hud-system-performance-measures/\",\n          \"https://www.hudexchange.info/news/system-performance-measures-data-now-available/\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/CoC-System-Performance-Measure-Video-Overview-Transcript.pdf\",\n          \"https://www.hudexchange.info/resource/3890/system-performance-measures-in-context/\",\n          \"https://files.hudexchange.info/course-content/2338/SPM-FY-2016-Data-Submission-Guidance-Webinar-Transcript.pdf\",\n          \"https://files.hudexchange.info/resources/documents/System-Performance-Measures-Table-Shells.pdf\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/3894/system-performance-measures-introductory-guide/\",\n          \"https://www.hudexchange.info/news/system-performance-measures-updates-for-cocs/\",\n          \"https://www.hudexchange.info/resource/5081/system-performance-measures-hmis-review-handout/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/system-performance-measures/do-the-system-performance-measures-replace-the-annual-performance-report/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/coc/system-performance-measures/\",\n          \"https://www.hudexchange.info/trainings/courses/coc-system-performance-measures-videos/\",\n          \"https://files.hudexchange.info/resources/documents/system-performance-measures-in-context.pdf\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"point in time\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/trainings/courses/point-in-time-count-office-hours/\",\n          \"https://www.hudexchange.info/news/snaps-in-focus-a-discussion-about-the-point-in-time-count/\",\n          \"https://www.hudexchange.info/trainings/courses/preparing-for-your-2018-housing-inventory-and-point-time-counts/2252/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/1760/state-of-iowa-point-in-time-unsheltered-homeless-count/\",\n          \"https://files.hudexchange.info/resources/documents/Point-in-Time-Mobile-Application.pdf\",\n          \"https://www.hudexchange.info/resource/5184/housing-and-school-partnership-on-the-pit-count/\",\n          \"https://www.hudexchange.info/resource/4036/point-in-time-count-methodology-guide/\",\n          \"https://www.hudexchange.info/news/reminder-point-in-time-count-resources/\",\n          \"https://www.hudexchange.info/news/new-point-in-time-count-resources-available/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/hdx/pit-hic/\",\n          \"https://www.hudexchange.info/resource/5198/point-in-time-mobile-application/\",\n          \"https://www.hudexchange.info/resource/3322/point-in-time-survey-tools/\",\n          \"https://www.hudexchange.info/resource/4433/point-in-time-count-implementation-tools/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"housing counseling\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/research/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/hcs/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/program-guidance/\",\n          \"https://www.hudexchange.info/trainings/courses/housing-counseling-webinar-remote-housing-counseling/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/training-digest/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/technology/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/webinars/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/housing-counseling-works/\",\n          \"https://www.hudexchange.info/trainings/courses/housing-counseling-webinar-delivering-housing-counseling-services1/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/program-description/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/training-partners/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"continuum of care\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/trainings/courses/continuum-of-care-forum1/\",\n          \"https://www.hudexchange.info/programs/coc/coc-2-0-training-materials/prezis/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/coc/gis-tools/\",\n          \"https://files.hudexchange.info/resources/documents/CoC101.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/program-administration/general/what-is-a-continuum-of-care/\",\n          \"https://www.hudexchange.info/programs/coc/coc-2-0-training-materials/broadcasts/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2020-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/resource/5735/balance-of-state-continuum-of-care-toolkit/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/coc/\",\n          \"https://www.hudexchange.info/resource/1187/continuum-of-care-101/\",\n          \"https://www.hudexchange.info/programs/coc/coc-2-0-training-materials/videos/\",\n          \"https://www.hudexchange.info/programs/coc/coc-program-eligibility-requirements/\",\n          \"https://www.hudexchange.info/programs/coc/coc-2-0-training-materials/podcasts/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"section 8\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/faqs/programs/neighborhood-stabilization-program-nsp/homebuyer-assistance-programs/homebuyer-program-design-and-implementation/are-participants-in-the-section-8-homeownership-program-eligible-for-nsp/\",\n          \"https://www.hudexchange.info/programs/sro/\",\n          \"https://www.hudexchange.info/resource/3002/homefires-vol3-no8-impact-of-changes-to-section-8-income-calculation-methodology/\",\n          \"https://www.hudexchange.info/faqs/crosscutting-requirements/section-3/applicability/do-the-section-3-requirements-apply-to-section-8-project-based-rental/\",\n          \"https://www.hudexchange.info/resource/832/housing-homeless-individuals-through-huds-sro-program/\",\n          \"https://www.hudexchange.info/faqs/programs/neighborhood-stabilization-program-nsp/underwriting-and-project-selection/subsidy-layering/can-a-household-use-federally-funded-rental-assistance-such-as-section-8-or/\",\n          \"https://www.hudexchange.info/resource/3007/homefires-vol3-no3-section-8-exception-rent-limits-and-home-rent-exceptions/\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/environmental-review/we-have-eight-properties-that-have-either-home-or-section-8-financing/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-counseling/agency-activity-report-9902/regarding-sections-8-and-9-if-a-client-is-participating-in-a-rental/\",\n          \"https://www.hudexchange.info/resource/3596/cdbg-memorandum-funding-section-8-housing-options-programs-with-cdbg/\",\n          \"https://www.hudexchange.info/resource/5180/part-5-section-8-income-inclusions-and-exclusions/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"ross\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/ross/guide/introduction/\",\n          \"https://www.hudexchange.info/programs/ross/guide/internal-coordination-and-advocacy/advocating-internally/\",\n          \"https://www.hudexchange.info/programs/ross/guide/collaboration-and-partnerships/what-is-a-ross-pcc/\",\n          \"https://www.hudexchange.info/programs/ross/guide/ross-program-requirements-and-expectations/how-can-ross-program-funds-be-used/\",\n          \"https://www.hudexchange.info/programs/ross/guide/tracking-activities-measuring-performance-and-outcomes-and-preparing-for-hud-monitoring-visits-and-audits/why-benchmarks-and-outcomes-matter/tracking-outcomes-in-ross/\",\n          \"https://www.hudexchange.info/programs/ross/guide/ross-program-requirements-and-expectations/what-is-the-ross-program-and-what-is-its-purpose/\",\n          \"https://www.hudexchange.info/programs/ross/guide/collaboration-and-partnerships/what-is-a-ross-pcc/how-often-should-service-coordinators-meet-with-pcc-members/\",\n          \"https://www.hudexchange.info/programs/ross/guide/working-with-residents/\",\n          \"https://www.hudexchange.info/programs/ross/guide/ross-program-requirements-and-expectations/what-are-the-key-qualifications-expected-of-new-service-coordinators/\",\n          \"https://www.hudexchange.info/programs/ross/guide/tracking-activities-measuring-performance-and-outcomes-and-preparing-for-hud-monitoring-visits-and-audits/tracking-individual-participant-outcomes/selecting-a-data-tracking-system/\",\n          \"https://www.hudexchange.info/trainings/courses/ross-reporting-ross-data-guide-3-0/\",\n          \"https://www.hudexchange.info/programs/ross/guide/collaboration-and-partnerships/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"program income\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/resource/4894/smart-management-of-cdbg-program-income-video/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/drgr/drawdown/program-income-receipts-rlfs-and-pi-accounts/the-available-amount-calculations-for-program-funds-or-program-income1/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-match/cash-match/program-income/\",\n          \"https://www.hudexchange.info/faqs/programs/neighborhood-stabilization-program-nsp/financial-and-grants-management/program-income/the-nsp-program-income-notice-states-that-nsp-program-income-can-be/\",\n          \"https://www.hudexchange.info/resource/5122/neighborhood-stabilization-program-program-income-transfer-instructions/\",\n          \"https://www.hudexchange.info/trainings/courses/nsp-program-income-planning-webinar/\",\n          \"https://www.hudexchange.info/faqs/programs/neighborhood-stabilization-program-nsp/financial-and-grants-management/program-income/what-is-not-considered-program-income/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/drgr/drawdown/program-income-receipts-rlfs-and-pi-accounts/how-do-i-create-a-program-income-account/\",\n          \"https://www.hudexchange.info/trainings/courses/nsp-program-income-transfer-procedures-and-faqs-webinar/\",\n          \"https://www.hudexchange.info/trainings/courses/greatest-hits-of-program-income-nsp-webinar1/\",\n          \"https://www.hudexchange.info/trainings/courses/effective-use-of-nsp2-program-income-webinar1/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/financial-and-grants-management/program-income/what-are-the-eligible-uses-of-program-income-in-the-coc-program/\",\n          \"https://www.hudexchange.info/resource/5082/nsp-faqs-transfer-of-program-income/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"fss\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/fss-webinar-fss-enrollment-and-appointments/\",\n          \"https://www.hudexchange.info/trainings/courses/fss-webinar-developing-your-fss-infrastructure/\",\n          \"https://www.hudexchange.info/programs/multifamily-fss/resources/oarq-adjustment-basics/\",\n          \"https://www.hudexchange.info/programs/multifamily-fss/resources/your-fss-escrow-savings-account/\",\n          \"https://www.hudexchange.info/trainings/courses/fss-webinar-operating-fss-program-rules-and-regulations/\",\n          \"https://www.hudexchange.info/resource/6191/multifamily-fss-escrow-credit-worksheet/\",\n          \"https://www.hudexchange.info/trainings/courses/fss-webinar-preparing-to-launch-fss/\",\n          \"https://www.hudexchange.info/programs/multifamily-fss/resources/staffing-a-program/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/fss/\",\n          \"https://www.hudexchange.info/programs/multifamily-fss/\",\n          \"https://www.hudexchange.info/programs/multifamily-fss/resources/\",\n          \"https://www.hudexchange.info/programs/multifamily-fss/resources/mfh-fss-resources/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"ask a question\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/resource/4060/ahar-frequently-asked-questions/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-03/counselormax/\",\n          \"https://www.hudexchange.info/resource/6739/ross-frequently-asked-questions/\",\n          \"https://files.hudexchange.info/resources/documents/Flood-Insurance-FAQs.pdf\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2017-12/FAQs/\",\n          \"https://www.hudexchange.info/programs/nfhta/faqs/\",\n          \"https://www.hudexchange.info/resource/6738/commonly-asked-questions-about-monkeypox/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-02/faqs/\",\n          \"https://www.hudexchange.info/trainings/courses/heros-frequently-asked-questions-webinar/3643/\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-2e.html\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-2a.html\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-2c.html\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-3a.html\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-3b.html\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-3e.html\",\n          \"https://www.hudexchange.info/programs/cdbg/public-services/question-1a.html\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-2d.html\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/question-1b.html\",\n          \"https://files.hudexchange.info/resources/documents/Endangered-Species-FAQs.pdf\",\n          \"https://files.hudexchange.info/resources/documents/Historic-Preservation-FAQs.pdf\"\n        ],\n        \"1\": [\n          \"https://files.hudexchange.info/resources/documents/10-Important-Questions-to-Ask-Your-Home-Inspector.pdf\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/project-application/consolidation/on-the-renewal-grant-consolidation-screen-question-2-asks-if-this-is-an-in/\",\n          \"https://files.hudexchange.info/resources/documents/10-Important-Questions-to-Ask-Your-Home-Inspector-Spanish-Version.pdf\",\n          \"https://files.hudexchange.info/course-content/housing-counseling-webinar-home-inspections-tutorial1/10-Important-Questions-to-Ask-Your-Home-Inspector-Spanish-Version.pdf\",\n          \"https://www.hudexchange.info/resource/5295/standards-for-success-frequently-asked-questions/\",\n          \"https://www.hudexchange.info/resource/6217/hmis-homes-data-transfer-commonly-asked-questions/\",\n          \"https://www.hudexchange.info/programs/census/low-mod-income-summary-data/faqs/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/news/new-homelessness-and-infectious-disease-ask-a-question-desk/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"pit\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/news/2020-pit-count-announcement-and-additional-pit-count-resources/\",\n          \"https://www.hudexchange.info/resource/3031/pit-and-hic-data-since-2007/\",\n          \"https://www.hudexchange.info/news/register-now-for-upcoming-pit-count-office-hours/\",\n          \"https://www.hudexchange.info/news/2019-hic-and-pit-data-collection-notice-and-pit-count-office-hours/\",\n          \"https://www.hudexchange.info/resource/5770/2019-pit-count-poster/\",\n          \"https://www.hudexchange.info/trainings/courses/april-2021-pit-count-office-hours-submitting-the-2021-hic-and-pit-count-data/\",\n          \"https://www.hudexchange.info/resource/6570/reporting-gender-for-the-pit-count/\",\n          \"https://www.hudexchange.info/resource/1978/2012-point-in-time-pit-and-housing-inventory-count-hic-faqs/\",\n          \"https://www.hudexchange.info/resource/5170/2017-PIT-Count-Poster/\",\n          \"https://www.hudexchange.info/homelessness-assistance/ahar/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/hdx/guides/pit-hic/\",\n          \"https://www.hudexchange.info/programs/hdx/guides/pit-hic/?utm_source=HUD+Exchange+Mailing+List&utm_campaign=6e453d32ab-PIT+Count+Office+Hours+and+Resources+10.26.18&utm_medium=email&utm_term=0_f32b935a5f-6e453d32ab-19226917\",\n          \"https://www.hudexchange.info/programs/hdx/pit-hic/\",\n          \"https://www.hudexchange.info/news/register-today-pit-count-office-hours-january-12-2022/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cdbg-dr\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/cdbg-dr/guidance/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/2020-grantees/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/overview/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/reports/\",\n          \"https://www.hudexchange.info/trainings/courses/cdbg-dr-financial-management-mapping-cdbg-dr-to-financial-systems-training/\",\n          \"https://www.hudexchange.info/news/allocations-for-cdbg-dr-and-implementation-of-the-cdbg-dr-consolidated-waivers-and-alternative-requirements-notice-2020-cdbg-dr-grantees/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/cdbg-dr-grantee-contact-information/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/resource/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/cdbg-dr/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/toolkits/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"hcs\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2019-08/Improving-data-quality/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/certification/fhac-application/introduction/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-10/cms-hcs/\",\n          \"https://www.hudexchange.info/resource/4738/9902-form-and-instructions/\",\n          \"https://www.hudexchange.info/news/instructions-for-updating-hcs-with-your-hcas-unique-entity-identifier/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/\",\n          \"https://www.hudexchange.info/news/hcs-pii-removal-notification-for-housing-counseling-agencies/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-02/HCS/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-10/data-HCS/\",\n          \"https://www.hudexchange.info/trainings/courses/housing-counseling-webinar-hcs-agency-profile-training/\",\n          \"https://www.hudexchange.info/trainings/courses/housing-counseling-webinar-hud-client-projections-in-hcs1/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/resource/6743/hcs-cms-and-9902-submission-errors-codes/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/hcs/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"ahar\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/resource/987/the-second-annual-homeless-assessment-report-ahar-to-congress/\",\n          \"https://www.hudexchange.info/resource/1872/2010-annual-homeless-assessment-report-ahar/\",\n          \"https://www.hudexchange.info/resource/1966/2011-ahar-to-congress-and-supplemental-reports/\",\n          \"https://www.hudexchange.info/resource/1165/2008-annual-homeless-assessment-report-ahar-to-congress/\",\n          \"https://www.hudexchange.info/resource/999/2007-annual-homeless-assessment-report-ahar-to-congress/\",\n          \"https://www.hudexchange.info/resource/1177/the-first-annual-homeless-assessment-report-ahar-to-congress/\",\n          \"https://www.hudexchange.info/programs/hdx/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/4780/ahar-submission-report/\",\n          \"https://www.hudexchange.info/resource/4830/ahar-data-mapping-instructions/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/ahar/ahar-overview/how-do-cocs-use-their-ahar-data-post-submission/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/homelessness-assistance/ahar/\",\n          \"https://www.hudexchange.info/resource/1227/introductory-guide-to-the-annual-homeless-assessment-report-ahar/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"nsp\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/nsp/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-multimedia/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-eligibility-requirements/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-demolition-toolkit/\",\n          \"https://www.hudexchange.info/programs/nsp/toolkits/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-closeout-guidance/additional-resources/\",\n          \"https://www.hudexchange.info/resource/361/hud-nsp-policy-alert-program-income-in-nsp/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-action-plans/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-toolkits-disposition/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-production-reports/\",\n          \"https://www.hudexchange.info/programs/nsp/nsp-snapshot-reports/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"aaq\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/e-snaps/\",\n          \"https://www.hudexchange.info/programs/drgr/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2013-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/\",\n          \"https://www.hudexchange.info/news/deadline-extension-for-lsa-data-validation/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2016-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2017-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2020-coc-program-nofa-coc-program-competition/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/how-to-submit-a-question-to-the-map-guide-aaq/\",\n          \"https://www.hudexchange.info/news/home-arp-allocation-plan-aaq-help-desk-now-open/\",\n          \"https://files.hudexchange.info/course-content/how-to-submit-a-question-to-the-map-guide-aaq/How-to-Submit-a-Question-to-the-MAP-Guide-AAQ-Transcript.pdf\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"building home\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/building-home-home-program-administration/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-home-match/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-home-program-requirements/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-overview-of-the-home-program/\",\n          \"https://www.hudexchange.info/trainings/building-home/tour/\",\n          \"https://www.hudexchange.info/news/building-home-online-training/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-chdos/\",\n          \"https://www.hudexchange.info/resource/2368/building-home-a-home-program-primer/\",\n          \"https://www.hudexchange.info/trainings/courses/2018-building-home-webinar-series/2386/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-homebuyer-programs/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/trainings/building-home/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"income calculator\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/environmental-review/dnl-calculator/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/programs/census/low-mod-income-summary-data/calculation/\",\n          \"https://www.hudexchange.info/faqs/programs/neighborhood-stabilization-program-nsp/program-requirements/eligible-activitiesuses/how-is-area-median-income-calculated/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/using-the-income-calculator-to-determine-annual-income-webinar1/\",\n          \"https://www.hudexchange.info/news/cpd-income-eligibility-calculator-updated-with-income-limits/\",\n          \"https://www.hudexchange.info/news/update-for-cpd-income-eligibility-calculator-users/\",\n          \"https://www.hudexchange.info/resource/1835/hopwa-income-resident-rent-calculation/\",\n          \"https://www.hudexchange.info/resource/3002/homefires-vol3-no8-impact-of-changes-to-section-8-income-calculation-methodology/\",\n          \"https://www.hudexchange.info/trainings/courses/using-the-income-calculator-for-rental-and-tbra-programs-webinar1/\",\n          \"https://files.hudexchange.info/resources/documents/CPDIncomeEligibilityCalculator_User_Manual.pdf\",\n          \"https://www.hudexchange.info/resource/2079/cpd-income-eligibility-calculator/\",\n          \"https://www.hudexchange.info/news/update-for-cpd-income-eligibility-calculator-users1/\",\n          \"https://www.hudexchange.info/news/information-for-hopwa-grantees-related-to-the-cpd-income-eligibility-calculator/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/incomecalculator/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"wiser\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/wiser-farmlands-online-module/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-historic-preservation-online-module/\",\n          \"https://www.hudexchange.info/news/new-web-based-instructional-system-for-environmental-review-wiser-training-modules-now-available/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-environmental-justice-online-module/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-air-quality-online-module/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-site-contamination-online-module/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-endangered-species-online-module/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-airport-hazards-online-module/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-environmental-assessment-factors/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-noise-abatement-and-control-online-module/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-floodplain-management-wetlands-and-flood-insurance/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/trainings/wiser/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"coordinated entry\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/implementing-and-operating-a-coordinated-entry-system-project/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/coc/toolkit/responsibilities-and-duties/coordinated-entry-samples-toolkit/\",\n          \"https://www.hudexchange.info/resource/5758/coordinated-entry-management-and-data-guide/\",\n          \"https://www.hudexchange.info/resource/5340/coordinated-entry-core-elements/\",\n          \"https://www.hudexchange.info/resource/4427/coordinated-entry-policy-brief/\",\n          \"https://www.hudexchange.info/resource/5219/coordinated-entry-self-assessment/\",\n          \"https://files.hudexchange.info/resources/documents/coordinated-entry-for-youth-brief.pdf\",\n          \"https://www.hudexchange.info/resource/5135/coordinated-entry-and-youth-faqs/\",\n          \"https://www.hudexchange.info/resource/4430/coordinated-entry-and-hmis-faqs/\",\n          \"https://www.hudexchange.info/resource/5320/coordinated-entry-for-youth-brief/\",\n          \"https://www.hudexchange.info/news/coordinated-entry-guidebook-now-available/\",\n          \"https://www.hudexchange.info/resource/6643/coordinated-entry-data-and-system-performance/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"basically cdbg\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/resource/269/basically-cdbg-for-states/\",\n          \"https://www.hudexchange.info/resource/19/basically-cdbg-training-guidebook-and-slides/\",\n          \"https://www.hudexchange.info/trainings/courses/basically-cdbg-online-training/\",\n          \"https://www.hudexchange.info/trainings/basically-cdbg-online/idis-and-cdbg/\",\n          \"https://www.hudexchange.info/trainings/courses/basically-cdbg-for-states/\",\n          \"https://www.hudexchange.info/trainings/courses/basically-cdbg-online-idis-and-cdbg/\",\n          \"https://www.hudexchange.info/trainings/courses/basically-cdbg-for-entitlements-training/\",\n          \"https://www.hudexchange.info/trainings/basically-cdbg-online/public-services/\",\n          \"https://www.hudexchange.info/trainings/basically-cdbg-online/financial-management/\",\n          \"https://www.hudexchange.info/trainings/basically-cdbg-online/idis-and-cdbg/reinforce/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/trainings/basically-cdbg/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"rapid rehousing\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/resource/6274/yhdp-th-rrh-joint-component-project/\",\n          \"https://files.hudexchange.info/resources/documents/2018-Rapid-Rehousing-Institute-Agenda-and-Session-List-9-7-18.pdf\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/a-discussion-of-wioa-rapid-rehousing-and-rapid-job-placement/\",\n          \"https://www.hudexchange.info/trainings/courses/rapid-rehousing-roundtable-discussion-series-rapid-resolution-rapid-exit/\",\n          \"https://www.hudexchange.info/trainings/courses/rapid-rehousing-roundtable-discussion-series-equity-as-a-foundation/\",\n          \"https://www.hudexchange.info/news/rapid-rehousing-roundtable-discussion-series/\",\n          \"https://www.hudexchange.info/trainings/courses/rapid-rehousing-roundtable-discussion-series-innovation-in-rrh/\",\n          \"https://www.hudexchange.info/trainings/courses/rapid-rehousing-roundtable-discussion-series-assertive-engagement-in-practice/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/homelessness-assistance/resources-for-homeless-youth/rrh-models-for-homeless-youth/\",\n          \"https://www.hudexchange.info/programs/esg/onboarding-toolkits-for-esg-funded-programs/program-director/staffing-in-rapid-rehousing/\",\n          \"https://files.hudexchange.info/resources/documents/Rapid-Re-Housing-for-Youth-Checklist.pdf\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"heros\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/news/heros-quick-guides/\",\n          \"https://www.hudexchange.info/programs/environmental-review/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/heros-e-tutorial-accessing-heros1/\",\n          \"https://www.hudexchange.info/resource/3150/heros-user-guide/\",\n          \"https://www.hudexchange.info/resource/5848/heros-quick-guides/\",\n          \"https://www.hudexchange.info/trainings/courses/using-heros-as-a-partner/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/heros/general/when-will-heros-become-mandatory/\",\n          \"https://www.hudexchange.info/trainings/courses/heros-working-with-partners/\",\n          \"https://www.hudexchange.info/trainings/courses/heros-administrative-functions/\",\n          \"https://www.hudexchange.info/news/hud-publishes-heros-quick-guides-and-an-update-to-the-heros-user-guide/\",\n          \"https://www.hudexchange.info/programs/environmental-review/heros-e-tutorials/\",\n          \"https://www.hudexchange.info/trainings/courses/heros-frequently-asked-questions-webinar/3643/\",\n          \"https://www.hudexchange.info/news/heros-hours-of-operation/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/environmental-review/heros/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"fair housing\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/news/april-is-fair-housing-month-fair-housing-equals-opportunity/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/nfhta/fair-housing-highlights/\",\n          \"https://www.hudexchange.info/programs/nfhta/forums/\",\n          \"https://www.hudexchange.info/programs/nfhta/fair-housing-highlights/7/\",\n          \"https://www.hudexchange.info/programs/nfhta/fair-housing-highlights/2/\",\n          \"https://www.hudexchange.info/programs/nfhta/fair-housing-highlights/3/\",\n          \"https://www.hudexchange.info/programs/nfhta/courses/litigating-fair-housing-cases/\",\n          \"https://www.hudexchange.info/programs/nfhta/courses/basics-of-fair-housing/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/fheo/\",\n          \"https://www.hudexchange.info/programs/nfhta/fair-housing-highlights/5/\",\n          \"https://www.hudexchange.info/programs/nfhta/fair-housing-highlights/4/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/fair-housing/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"income limits\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_UncappedIncomeLimitsMemo_2004.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_UncappedIncomeLimitsMemo_2012.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2005.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2011.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2004.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2003.pdf\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/incomecalculator/\",\n          \"https://www.hudexchange.info/resource/5079/esg-income-limits/\",\n          \"https://www.hudexchange.info/resource/5332/hopwa-income-limits/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/home/home-income-limits/\",\n          \"https://www.hudexchange.info/programs/htf/htf-income-limits/\",\n          \"https://www.hudexchange.info/resource/5334/cdbg-income-limits/\",\n          \"https://www.hudexchange.info/resource/6499/home-arp-income-limits/\",\n          \"https://www.hudexchange.info/resource/3680/nsp-income-limits/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"esnaps\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/resource/1288/hprp-webinar-hprp-quarterly-reporting/\",\n          \"https://www.hudexchange.info/news/fy-2017-coc-program-registration-notice-is-now-posted-and-e-snaps-is-available/\",\n          \"https://www.hudexchange.info/resource/2712/fy2012-coc-program-nofa/\",\n          \"https://www.hudexchange.info/news/fy-2017-coc-program-registration-process-deadline-reminder/\",\n          \"https://www.hudexchange.info/news/fy-2017-coc-program-registration-coc-review-step-in-e-snaps-is-now-available/\",\n          \"https://www.hudexchange.info/news/fy-2017-continuum-of-care-coc-program-competition-technical-correction-posted-for-fy-2017-coc-program-competition-nofa/\",\n          \"https://files.hudexchange.info/resources/documents/esnaps-CoC-APR-Guidebook.pdf\",\n          \"https://files.hudexchange.info/course-content/tips-on-accessing-your-apr-in-e-snaps-webinar/TipsonAccessingYourAPRine-snaps_Transcript.pdf\",\n          \"https://files.hudexchange.info/course-content/apr-training-overview-of-the-sage-hmis-repository-webinar/APR-Training-Overview-of-the-Sage-HMIS-Repository-Webinar-Transcript-2017-03-16.pdf\",\n          \"https://www.hudexchange.info/news/fy-2017-continuum-of-care-coc-program-competition-e-snaps-is-now-available/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/apr/apr-general/what-is-the-annual-performance-report-is-it-the-same-as-the-hud-40118/\",\n          \"https://files.hudexchange.info/resources/documents/Updating-the-Project-Applicant-Authorized-Representative.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/apr/apr-general/what-do-i-do-after-logging-in/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/apr/apr-general/what-is-the-website-for-e-snaps/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"hopwa\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/news/hopwa-in-focus-hopwa-formula-modernization/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/hopwa/hopwa-cpd-notices/\",\n          \"https://www.hudexchange.info/programs/hmis/federal-partner-participation/hopwa/\",\n          \"https://www.hudexchange.info/trainings/courses/hopwa-modernization-managing-your-hopwa-budget-in-the-context-of-modernization/\",\n          \"https://www.hudexchange.info/news/changes-to-the-hopwa-pathway-in-idis-to-support-gba-compliance-for-hopwa-formula-grantees/\",\n          \"https://www.hudexchange.info/programs/hopwa/in-focus/\",\n          \"https://www.hudexchange.info/programs/hopwa/hopwa-performance-profiles/\",\n          \"https://www.hudexchange.info/programs/hopwa/formula-modernization/\",\n          \"https://www.hudexchange.info/programs/hopwa/hopwa-eligibility-requirements/\",\n          \"https://www.hudexchange.info/news/idis-update-for-hopwa-hopwa-c-grantees/\",\n          \"https://www.hudexchange.info/programs/hopwa/hopwa-national-technical-assistance/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/hopwa/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"coc\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2021-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/project-application/coc-planning-costs/the-coc-planning-grant-that-our-coc-was-awarded-in-the-previous-coc-program/\",\n          \"https://www.hudexchange.info/resource/2905/coc-application-component-of-the-coc-consolidated-application/\",\n          \"https://www.hudexchange.info/resource/5106/coc-pprn-proposed-formula-impacts-by-coc/\",\n          \"https://www.hudexchange.info/programs/coc/toolkit/program-components-and-eligible-costs/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2022-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/programs/coc/\",\n          \"https://www.hudexchange.info/resource/2900/coc-registration-instructional-guide-coc-registration-coc-review/\",\n          \"https://www.hudexchange.info/programs/coc/toolkit/introduction-to-the-coc-program/\",\n          \"https://www.hudexchange.info/resource/2916/project-priority-listing-coc-consolidated-application/\",\n          \"https://www.hudexchange.info/programs/coc/toolkit/responsibilities-and-duties/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-ufas/becoming-a-ufa/applying-for-coc-funds/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-eligible-activities/coc-acq-rehab-new-construction/property-with-multiple-coc-activities/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"esg\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/esg/onboarding-toolkits-for-esg-funded-programs/grant-administrator/esg-policy-guidance/\",\n          \"https://www.hudexchange.info/programs/esg/onboarding-toolkits-for-esg-funded-programs/grant-administrator/esg-program-overview/\",\n          \"https://www.hudexchange.info/programs/esg/onboarding-toolkits-for-esg-funded-programs/program-director/esg-housing-and-shelter-standards/\",\n          \"https://www.hudexchange.info/programs/esg/onboarding-toolkits-for-esg-funded-programs/program-director/esg-program-components/\",\n          \"https://www.hudexchange.info/programs/esg/guides/\",\n          \"https://www.hudexchange.info/programs/esg/esg-requirements/\",\n          \"https://www.hudexchange.info/programs/esg/onboarding-toolkits-for-esg-funded-programs/grant-administrator/esg-policy-guidance/quiz/\",\n          \"https://www.hudexchange.info/news/esg-and-esg-cv-reporting-office-hours/\",\n          \"https://www.hudexchange.info/trainings/courses/esg-and-esg-cv-reporting-office-hours/\",\n          \"https://www.hudexchange.info/resource/5624/sage-esg-caper-guidebook-for-esgfunded-programs/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/esg/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"caper\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/hopwa/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/using-ecart-for-the-esg-caper/\",\n          \"https://www.hudexchange.info/news/esg-caper-submission-updates/\",\n          \"https://www.hudexchange.info/trainings/courses/preparing-for-the-caper-webinar/3616/\",\n          \"https://www.hudexchange.info/trainings/courses/2020-completing-the-caper-webinar1/3751/\",\n          \"https://www.hudexchange.info/trainings/courses/esg-recipient-caper-training/\",\n          \"https://www.hudexchange.info/programs/consolidated-plan/\",\n          \"https://www.hudexchange.info/trainings/courses/2020-completing-the-caper-webinar/3751/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/sage/esg-caper/\",\n          \"https://www.hudexchange.info/programs/hopwa/new-consolidated-apr-caper/\",\n          \"https://www.hudexchange.info/trainings/courses/hopwa-caper-training-modules1/\",\n          \"https://www.hudexchange.info/resource/1156/hopwa-caper-training-modules/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"environmental review\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/environmental-review/environmental-review-records/\",\n          \"https://www.hudexchange.info/programs/environmental-review/environmental-review-training/\",\n          \"https://www.hudexchange.info/programs/environmental-review/tiered-environmental-reviews/?utm_source=HUD+Exchange+Mailing+List&utm_campaign=b311dbe441-RT%3A+HEROS_Tier_Enviro_Review_Web_April+19%2C+2017&utm_medium=email&utm_term=0_f32b935a5f-b311dbe441-\",\n          \"https://www.hudexchange.info/programs/environmental-review/orientation-to-environmental-reviews/\",\n          \"https://www.hudexchange.info/resource/47/cdbg-crosscutting-issues-environmental-review-environmental-review-flowchart/\",\n          \"https://www.hudexchange.info/programs/environmental-review/tiered-environmental-reviews/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-environmental-review/completing-the-environmental-review/\",\n          \"https://www.hudexchange.info/programs/environmental-review/heros/\",\n          \"https://www.hudexchange.info/programs/environmental-review/housing/\",\n          \"https://www.hudexchange.info/programs/environmental-review/housing/fact-sheets/\",\n          \"https://www.hudexchange.info/resource/48/cdbg-crosscutting-issues-environmental-review-five-methods-for-managing-the-environmental-review-process/\",\n          \"https://www.hudexchange.info/resource/45/cdbg-crosscutting-issues-environmental-review-case-study-conducting-an-environmental-review/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/environmental-review/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"hmis\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/hmis/federal-partner-participation/hopwa/\",\n          \"https://www.hudexchange.info/programs/hmis/hmis-data-standards/standards/\",\n          \"https://www.hudexchange.info/trainings/courses/hmis-101-understanding-the-interconnectedness-of-hmis-data/\",\n          \"https://www.hudexchange.info/programs/hmis/hmis-data-and-technical-standards/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/hmis/hmis-requirements/\",\n          \"https://www.hudexchange.info/resource/3824/hmis-data-dictionary/\",\n          \"https://www.hudexchange.info/programs/hmis/hmis-guides/\",\n          \"https://www.hudexchange.info/trainings/courses/hmis-system-administrator-training-hmis-1011/\",\n          \"https://www.hudexchange.info/faqs/programs/emergency-solutions-grants-esg-program/program-requirements/hmis-participation-for-esg-grantees/whose-responsibility-is-it-to-designate-the-hmis-and-hmis-lead-agency/\",\n          \"https://www.hudexchange.info/programs/hmis/community-examples/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"home\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/cdbg/public-facilities-and-improvements/\",\n          \"https://www.hudexchange.info/programs/cdbg/public-services/\",\n          \"https://www.hudexchange.info/programs/cdbg/housing-activities/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/programs/home/home-webcasts/\",\n          \"https://www.hudexchange.info/programs/home/topics/monitoring/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/building-home/\",\n          \"https://www.hudexchange.info/programs/home/home-income-limits/\",\n          \"https://www.hudexchange.info/programs/home/home-rent-limits/\",\n          \"https://www.hudexchange.info/programs/home/home-facts/\",\n          \"https://www.hudexchange.info/programs/home/topics/homeownership/\",\n          \"https://www.hudexchange.info/programs/home/topics/consortia/\",\n          \"https://www.hudexchange.info/programs/home/covid-19/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/home/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"idis\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/covid-19/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/programs/cdbg/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/idis/guides/home/\",\n          \"https://www.hudexchange.info/programs/idis/idis-reporting/\",\n          \"https://www.hudexchange.info/trainings/idis-cdbg/\",\n          \"https://www.hudexchange.info/programs/idis/idis-technical-assistance/\",\n          \"https://www.hudexchange.info/trainings/courses/idis-cdbg-introduction-to-idis-training-for-cdbg-grantees/\",\n          \"https://www.hudexchange.info/resource/2822/cdbg-changes-in-idis-instructions-for-grantees-idis-release-114/\",\n          \"https://www.hudexchange.info/resource/3734/idis-release-notes/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/plansprojectsactivities/addeditcopy-projects/how-should-idis-projects-be-set-up-in-idis/\",\n          \"https://www.hudexchange.info/news/new-home-idis-faq-and-updates-to-existing-idis-faqs-now-available/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/idis/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cdbg\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/cdbg-cv/\",\n          \"https://www.hudexchange.info/programs/cdbg-cv/cdbg-cv-toolkit/state-cdbg-cv-implementation/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/reports/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/cdbg/cdbg-ta-products/\",\n          \"https://www.hudexchange.info/programs/cdbg/disease/\",\n          \"https://www.hudexchange.info/trainings/idis-cdbg/\",\n          \"https://www.hudexchange.info/programs/cdbg/cdbg-memoranda/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/cdbg-entitlement/\",\n          \"https://www.hudexchange.info/programs/cdbg-state/\",\n          \"https://www.hudexchange.info/programs/cdbg/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"section 3\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"homeless\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/resource/6136/covid19-homeless-system-response-estimating-future-homelessness/\",\n          \"https://www.hudexchange.info/faqs/programs/cdbg-entitlement-program/homeless/can-persons-presenting-evidence-of-homelessness-be-considered-homeless-for/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/pit/pit-general/we-are-aware-of-homeless-persons-especially-homeless-youth-who-are-known/\",\n          \"https://www.hudexchange.info/resource/2796/2013-hic-and-pit-supplemental-guidance-counting-homeless-youth/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-homeless-eligibility/definition-of-chronic-homelessness/\",\n          \"https://www.hudexchange.info/programs/coc/coc-homeless-populations-and-subpopulations-reports/\",\n          \"https://www.hudexchange.info/homelessness-assistance/employment/\",\n          \"https://www.hudexchange.info/programs/hmis/\",\n          \"https://www.hudexchange.info/resource/1250/guidance-for-counting-unaccompanied-homeless-children-during-2011-pit/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-homeless-eligibility/four-categories/\",\n          \"https://www.hudexchange.info/resource/4847/hearth-defining-chronically-homeless-final-rule/\",\n          \"https://www.hudexchange.info/trainings/courses/recording-and-documenting-homeless-status/\",\n          \"https://www.hudexchange.info/resource/4783/determining-homeless-status-of-youth/\",\n          \"https://www.hudexchange.info/resource/1928/hearth-defining-homeless-final-rule/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/trainings/courses/homelessness-101/\",\n          \"https://www.hudexchange.info/homelessness-assistance/resources-for-lgbt-homelessness/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-homeless-eligibility/four-categories/at-risk-of-homelessness/\",\n          \"https://www.hudexchange.info/programs/yhdp/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"sage\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"drgr\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"environmental\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"chdo\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/trainings/courses/chdo-training/\",\n          \"https://www.hudexchange.info/programs/home/home-facts/\",\n          \"https://www.hudexchange.info/programs/home/home-laws-and-regulations/fy-2012-home-appropriations-law-requirements/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/faqs/programs/home-investment-partnerships-program-home/chdo/set-aside-funds/can-a-pj-provide-chdo-set-aside-funds-to-a-chdo-that-has-the-capacity-to/\",\n          \"https://www.hudexchange.info/resource/2385/chdo-survivor-kit/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/grant/addedit-subfunds/what-is-the-process-to-commit-funds-to-a-chdo-activity/\",\n          \"https://www.hudexchange.info/news/suspension-of-the-home-commitment-and-chdo-reservation-deadline/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/building-home/\",\n          \"https://www.hudexchange.info/news/chdo-opportunities-in-home-online-course-now-available/\",\n          \"https://www.hudexchange.info/resource/2386/chdo-toolbox-for-home-pjs/\",\n          \"https://www.hudexchange.info/programs/home/home-final-rule/section-by-section-summary/subpart-g/\",\n          \"https://www.hudexchange.info/trainings/courses/chdo-opportunities-in-home-introduction/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/home/topics/chdo/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-chdos/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"homeless definition\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://files.hudexchange.info/resources/documents/HPRP_HomelessDefinition_4.20.10.pdf\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-homeless-eligibility/determining-and-documenting-disability/disability-definition/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/nofasnotices/fy-2017-nofa/if-a-program-participant-meets-the-definition-of-chronically-homeless-as/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/news/huds-definition-of-homelessness-resources-and-guidance/\",\n          \"https://www.hudexchange.info/resource/1935/conplan-reg-amend-esg-interim-rule-homeless-definition-final-rule/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/program-requirements/definition-of-homelessness/with-regard-to-the-final-rule-on-the-definition/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/program-requirements/definition-of-homelessness/the-homeless-definition-final-rule-published-in-the-federal-register/\",\n          \"https://files.hudexchange.info/resources/documents/HUDs-Homeless-Definition-as-it-Relates-to-Children-and-Youth.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/resource/1975/criteria-for-definition-of-at-risk-of-homelessness/\",\n          \"https://www.hudexchange.info/resource/1974/criteria-and-recordkeeping-requirements-for-definition-of-homeless/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-homeless-eligibility/definition-of-chronic-homelessness/\",\n          \"https://www.hudexchange.info/resource/4062/huds-definition-of-homeless-as-it-relates-to-children-and-youth/\",\n          \"https://files.hudexchange.info/resources/documents/HomelessResources_6.5.12.pdf\",\n          \"https://www.hudexchange.info/resource/5181/flowchart-of-huds-definition-of-chronic-homelessness/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-homeless-eligibility/four-categories/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"homelessness\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/hmis/\",\n          \"https://www.hudexchange.info/homelessness-assistance/employment/\",\n          \"https://www.hudexchange.info/homelessness-assistance/resources-for-family-homelessness/\",\n          \"https://www.hudexchange.info/homelessness-assistance/rural/\",\n          \"https://www.hudexchange.info/faqs/programs/cdbg-entitlement-program/homeless/can-persons-presenting-evidence-of-homelessness-be-considered-homeless-for/\",\n          \"https://www.hudexchange.info/homelessness-assistance/alternatives-to-criminalizing-homelessness/\",\n          \"https://www.hudexchange.info/homelessness-assistance/resources-for-homeless-veterans/\",\n          \"https://www.hudexchange.info/homelessness-assistance/resources-for-chronic-homelessness/\",\n          \"https://www.hudexchange.info/homelessness-assistance/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/yhdp/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-homeless-eligibility/four-categories/at-risk-of-homelessness/\",\n          \"https://www.hudexchange.info/homelessness-assistance/resources-for-lgbt-homelessness/\",\n          \"https://www.hudexchange.info/news/partner-resource-usich-releases-voting-guides-for-homeless-providers-and-people-experiencing-homelessness/\",\n          \"https://www.hudexchange.info/trainings/courses/homelessness-101/\",\n          \"https://www.hudexchange.info/housing-and-homeless-assistance/homeless-help/?na=60&start=4\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"davis bacon\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"housing first\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/news/snaps-weekly-focus-adopting-a-housing-first-approach/\",\n          \"https://www.hudexchange.info/resource/5322/using-a-housing-first-philosophy-when-serving-youth/\",\n          \"https://www.hudexchange.info/grantees/housing-first-alabama/\",\n          \"https://www.hudexchange.info/resource/1201/organizational-change-adopting-a-housing-first-approach/\",\n          \"https://www.hudexchange.info/grantees/housing-first-alabama/?program=3\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/news/housing-first-implementation-resources-now-available/\",\n          \"https://www.hudexchange.info/news/coc-competition-focus-housing-first/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/coc/toolkit/responsibilities-and-duties/housing-first-implementation-resources/\",\n          \"https://www.hudexchange.info/resource/5294/housing-first-assessment-tool/\",\n          \"https://www.hudexchange.info/resource/3892/housing-first-in-permanent-supportive-housing-brief/\",\n          \"https://www.hudexchange.info/news/hud-releases-the-housing-first-assessment-tool/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"procurement\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"application\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"forms\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"housing\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"apr\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"nofa\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"monitoring\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"permanent supportive housing\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/resource/4797/pay-for-success-permanent-supportive-housing-demonstration-nofa/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/permanent-supportive-housing/is-it-permissible-for-a-permanent-supportive-housing-project-that-receives/\",\n          \"https://www.hudexchange.info/resource/4901/pfs-demonstration-faqs/\",\n          \"https://www.hudexchange.info/news/pay-for-success-permanent-supportive-housing-demonstration-application-deadline-reminder/\",\n          \"https://www.hudexchange.info/news/fy-2020-hopwa-permanent-supportive-housing-renewal-awards-announced/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/ahar/identifying-projects-to-use-in-your-ahar-data/are-vouchers-factored-in-when-calculating-permanent-supportive-housing-psh/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/hic/do-people-in-permanent-supportive-housing-count-as-persons-listed-in-our/\"\n        ],\n        \"2\": [\n          \"https://files.hudexchange.info/resources/documents/Housing-First-Permanent-Supportive-Housing-Brief.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/resource/3892/housing-first-in-permanent-supportive-housing-brief/\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOPWA-FY2013-Permanent-Supportive-Housing-Renewal-Grant-Summaries.pdf\",\n          \"https://www.hudexchange.info/news/snaps-in-focus-moving-on-strategies-to-support-stable-transitions-from-permanent-supportive-housing/\",\n          \"https://www.hudexchange.info/resource/6128/permanent-supportive-housing-psh-moving-on-services-guide/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"lead the way\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"financial management\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"rad\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"grants\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"match\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"apply\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cpd\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"2 cfr 200\"\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"fmr\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/coc/awards/2020/\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/program-requirements/calculating-rents-and-utility-allowances/does-a-grantee-require-hud-approval-whenever-they-approve/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/programs/home/home-rent-limits/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/project-application/fair-market-rents-fmrs/if-one-or-more-of-a-cocs-eligible-renewal-projects/\",\n          \"https://files.hudexchange.info/resources/documents/Get-the-Facts-HOPWA-and-COVID-19-Response-FMR-Standard.pdf\",\n          \"https://www.hudexchange.info/programs/public-housing/small-area-fair-market-rents/\"\n        ],\n        \"2\": [\n          \"https://files.hudexchange.info/resources/documents/ESG-Rent-Reasonableness-and-FMR.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/rental-assistance/coc-program-funds-for-rental-assistance-be-used-to-pay-rent-for-units/\"\n        ],\n        \"3\": [\n          \"https://files.hudexchange.info/resources/documents/SAFMRs-Implementing-Small-Area-Fair-Market-Rents-Implementation-Guidebook.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/program-requirements/calculating-rents-and-utility-allowances/does-the-fair-market-rent-fmr-include-utilities/\",\n          \"https://www.hudexchange.info/resource/4694/payment-standards-and-fair-market-rents-faqs/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-leasing-rental-assistance-requirements/fmr/\",\n          \"https://www.huduser.gov/portal/datasets/fmr/smallarea/index.html\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cares act\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/covid-19/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/trainings/courses/cares-act-virtual-conference-2021/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2021-quarter-1/CARES-Act-Funding/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/news/cares-act-supplemental-award-information-for-hopwa-grantees/\",\n          \"https://www.hudexchange.info/trainings/cares-act-virtual-conferences/\",\n          \"https://www.hudexchange.info/trainings/courses/implementing-the-hopwa-cares-act-for-competitive-renewal-grantees/\",\n          \"https://www.hudexchange.info/trainings/courses/cares-act-virtual-conference-2022/\",\n          \"https://www.hudexchange.info/trainings/courses/cdbg-cares-act-webinar-series-co-managing-disaster-recovery-and-cares-act-programs/4408/\",\n          \"https://www.hudexchange.info/news/flyer-for-hopwa-participants-on-cares-act-eviction-moratorium/\",\n          \"https://www.hudexchange.info/resource/6042/flyer-for-hopwa-participants-on-cares-act-eviction-moratorium/\",\n          \"https://www.hudexchange.info/resource/6086/setting-up-a-substantial-amendment-for-cares-act-funding/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/cdbg-cv/\",\n          \"https://www.hudexchange.info/programs/esg/esg-cv/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"annual action plan\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://files.hudexchange.info/resources/documents/Amending-a-Con-Plan-Action-Plan-for-State-Entitlement-Grantees.pdf\",\n          \"https://files.hudexchange.info/resources/documents/eCon-Planning-Suite-FAQs.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/cdbg-entitlement-program/cost-reasonableness/when-are-funds-for-a-project-in-our-annual-action-plan-considered-to-be1/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/2728/esg-checklist-requirements-homelessness-annual-action-plan/\",\n          \"https://files.hudexchange.info/course-content/incorporating-the-afh-in-the-consolidated-plan-webinar/Incorporating-AFH-into-the-Consolidated-and-Annual-Action-Plan-slides.pdf\",\n          \"https://www.hudexchange.info/trainings/courses/econ-planning-suite-preparing-an-annual-action-plan-in-idis-online-webinar1/\",\n          \"https://files.hudexchange.info/resources/documents/Amending-a-Con-Plan-Action-Plan-for-Consortia-Grantee.pdf\",\n          \"https://files.hudexchange.info/resources/documents/Amending-a-Con-Plan-Action-Plan-for-Regional-Grantees.pdf\",\n          \"https://files.hudexchange.info/resources/documents/Project-Setup-in-the-Annual-Action-Plan.pdf\",\n          \"https://www.hudexchange.info/trainings/courses/the-new-way-to-amend-consolidated-plans-and-annual-action-plans-in-the-econ-planning-suite-webinar/3263/\",\n          \"https://files.hudexchange.info/resources/documents/ESGActionPlanChecklist.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/consolidated-plan/con-plans-aaps-capers/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cdbg income limits\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/home/home-income-limits/\",\n          \"https://www.hudexchange.info/programs/htf/htf-income-limits/\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2011.pdf\",\n          \"https://www.hudexchange.info/resource/3680/nsp-income-limits/\",\n          \"https://www.hudexchange.info/resource/5079/esg-income-limits/\",\n          \"https://www.hudexchange.info/resource/5332/hopwa-income-limits/\"\n        ],\n        \"1\": [\n          \"https://files.hudexchange.info/resources/documents/CDBG_IncomeLmts_Natl_2019.xlsx\",\n          \"https://files.hudexchange.info/resources/documents/CDBG_IncomeLmts_Natl_2020.xlsx\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2005.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/resource/5334/cdbg-income-limits/\",\n          \"https://www.hudexchange.info/incomecalculator/\",\n          \"https://www.hudexchange.info/programs/cdbg/cdbg-reports-program-data-and-income-limits/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"eloccs\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/news/huds-office-of-housing-counseling-eloccs-reminder/\",\n          \"https://www.hudexchange.info/news/technical-difficulties-accessing-eloccs-system/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2019-06/faqs/\",\n          \"https://www.hudexchange.info/news/eloccs-policy-update/\",\n          \"https://www.hudexchange.info/programs/multifamily-housing/financial-management-toolkit/15-service-coordinators-in-multifamily-housing-scmf-program/15f-changes-to-noa/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2017-12/eloccs/\",\n          \"https://files.hudexchange.info/resources/documents/eLOCCS-Recertification-Guide.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/housing-counseling/recordkeeping/how-can-i-assure-that-my-agency-is-able-to-access-the-eloccs-system-as-soon/\",\n          \"https://www.hudexchange.info/news/coc-program-reporting-and-voucher-due-date/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-esg-financial-management/eloccs/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"e-snaps\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2021-coc-program-nofa-coc-program-competition/\",\n          \"https://files.hudexchange.info/resources/documents/e-snaps-icons.pdf\"\n        ],\n        \"2\": [\n          \"https://files.hudexchange.info/resources/documents/e-snaps-Glossary.pdf\",\n          \"https://www.hudexchange.info/news/explore-e-snaps-101-and-201-toolkits/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2022-coc-program-nofa-coc-program-competition/\",\n          \"https://files.hudexchange.info/resources/documents/Common-Issues-Encountered-in-e-snaps.pdf\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/project-application/subrecipients/may-a-project-subrecipient-submit-a-project-application-in-e-snaps/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/apr/apr-general/who-should-submit-the-apr-in-e-snaps/\",\n          \"https://www.hudexchange.info/news/e-snaps-applications-coc-program-competition/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/apr/apr-general/what-is-the-website-for-e-snaps/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/e-snaps/\",\n          \"https://www.hudexchange.info/resource/6170/esnaps-101-toolkit/\",\n          \"https://www.hudexchange.info/resource/6171/esnaps-201-toolkit/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"lead based paint\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/lead-based-paint/\",\n          \"https://www.hudexchange.info/programs/lead-based-paint/evaluating-lead-based-paint-in-hud-assisted-housing-videos/\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/program-requirements/general/do-lead-based-paint-requirements-pra-217-lead-based-paint-apply-to-any/\",\n          \"https://www.hudexchange.info/resource/1209/hprp-lead-based-paint-documentation-checklist/\",\n          \"https://www.hudexchange.info/resource/1205/hprp-lead-based-paint-screening-worksheet/\",\n          \"https://www.hudexchange.info/resource/1208/hprp-lead-based-paint-property-owner-certification-template/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-opportunities-for-persons-with-aids-hopwa-program/rental-assistance/short-term-rent-mortgage-and-utility-assistance-strmu-payments/how-do-requirements-for-lead-based-paint-inspections-apply-for-strmu/\",\n          \"https://www.hudexchange.info/resource/3332/cdbg-memorandum-home-program-lead-based-paint-q-and-a/\",\n          \"https://www.hudexchange.info/resource/1206/hprp-lead-based-paint-resident-instructions-template/\",\n          \"https://files.hudexchange.info/resources/documents/HPRP_LeadPaintGuidance.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/lead-based-paint/\",\n          \"https://www.hudexchange.info/programs/lead-based-paint/regulations/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"relocation\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/faqs/programs/recovery-housing-program/eligible-activities/can-relocation-involve-a-person-in-recovery/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/relocation/forms/\",\n          \"https://www.hudexchange.info/programs/relocation/training/\",\n          \"https://www.hudexchange.info/programs/relocation/hudrap/\",\n          \"https://www.hudexchange.info/resource/6253/lshr-guidance-on-relocation/\",\n          \"https://www.hudexchange.info/programs/relocation/publications/\",\n          \"https://www.hudexchange.info/programs/relocation/laws/\",\n          \"https://www.hudexchange.info/resource/6240/lshr-guidance-on-relocation-/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/relocation/\",\n          \"https://www.hudexchange.info/programs/relocation/overview/\",\n          \"https://www.hudexchange.info/programs/relocation/guidance/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"noise\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/trainings/courses/noise-assessment-training1/\",\n          \"https://www.hudexchange.info/news/noise-levels-research-synthesis-webinar/\",\n          \"https://www.hudexchange.info/trainings/wiser/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/Noise-Guidebook-Chapter-4-Supplement.doc\",\n          \"https://www.hudexchange.info/faqs/programs/neighborhood-stabilization-program-nsp/environmental-review/what-is-the-process-for-assessing-the-noise-pollution-affecting-a-property/\",\n          \"https://www.hudexchange.info/programs/environmental-review/bpm-calculator/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/environmental-review/noise-abatement-and-control/\",\n          \"https://www.hudexchange.info/trainings/courses/wiser-noise-abatement-and-control-online-module/\",\n          \"https://www.hudexchange.info/resource/313/hud-noise-guidebook/\",\n          \"https://www.hudexchange.info/programs/environmental-review/daynight-noise-level-electronic-assessment-tool/\",\n          \"https://www.hudexchange.info/programs/environmental-review/dnl-calculator/\",\n          \"https://www.hudexchange.info/resource/2830/day-night-noise-level-assessment-tool/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"9902\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/9902/general-overview/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-02/9902/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2022-quarter-1/9902/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-08/HUD-9902s/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-04/9902/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/the-bridge/2018-07/9902/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/9902/completing-the-9902/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/housing-counseling/9902-quarterly-reports/\",\n          \"https://www.hudexchange.info/programs/housing-counseling/9902/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"home arp\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/home-arp/overview/\",\n          \"https://www.hudexchange.info/trainings/courses/home-arp-idis-activity-e-tutorials-home-arp-allocation-plan/\",\n          \"https://www.hudexchange.info/resource/6498/homearp-allocation-plan-template/\",\n          \"https://www.hudexchange.info/resource/6544/home-arp-faqs/\",\n          \"https://www.hudexchange.info/trainings/courses/home-arp-public-participation-video-faq/\",\n          \"https://www.hudexchange.info/news/home-arp-idis-activity-e-tutorials-home-arp-allocation-plan-now-available/\",\n          \"https://www.hudexchange.info/resource/6497/homearp-allocation-plan-certifications/\",\n          \"https://www.hudexchange.info/trainings/courses/home-arp-idis-activity-tutorials-home-arp-allocation-plan/\",\n          \"https://www.hudexchange.info/resource/6480/home-arp-implementation-notice-fact-sheets/\",\n          \"https://www.hudexchange.info/trainings/courses/home-arp-idis-activity-tutorials-elements-of-home-arp-administration-and-planning-activities/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/home-arp/\",\n          \"https://www.hudexchange.info/resource/6499/home-arp-income-limits/\",\n          \"https://www.hudexchange.info/resource/6500/home-arp-rent-limits/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cpd notices\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2022-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/programs/section-3/\",\n          \"https://www.hudexchange.info/programs/cdbg/\",\n          \"https://www.hudexchange.info/programs/cdbg-entitlement/\",\n          \"https://www.hudexchange.info/programs/hopwa/\",\n          \"https://www.hudexchange.info/programs/cdbg-dr/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/resource/2360/notice-cpd-01-11-environmental-review-home/\",\n          \"https://www.hudexchange.info/resource/2186/notice-cpd-00-02-commitment-expenditure-deadline-home/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/2676/notice-cpd-97-03-home-program-match-guidance/\",\n          \"https://www.hudexchange.info/resource/2144/notice-cpd-03-06-procedures-designating-consortia-home/\",\n          \"https://www.hudexchange.info/resource/2162/notice-cpd-97-11-guidance-chdos-under-home/\",\n          \"https://www.hudexchange.info/resource/2126/notice-cpd-98-09-home-program-conflict-of-interest-provisions/\",\n          \"https://files.hudexchange.info/resources/documents/98-11%20(1).pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/hopwa/hopwa-cpd-notices/\",\n          \"https://www.hudexchange.info/programs/htf/notices/\",\n          \"https://www.hudexchange.info/programs/home/home-cpd-notices/\",\n          \"https://www.hudexchange.info/programs/cpd-notices/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"home program\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/home-arp/\",\n          \"https://www.hudexchange.info/trainings/courses/home-program-20th-anniversary-conference/\",\n          \"https://www.hudexchange.info/trainings/courses/allocating-costs-in-the-home-program-webinar/1761/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/opportunity-zones-and-the-home-program/\",\n          \"https://www.hudexchange.info/resources/using-home-htf-funds-within-opportunity-zones/the-essentials-of-oz-home-htf-programs/the-home-program-101-basics/what-is-the-home-program/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/home/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-home-program-administration/\",\n          \"https://www.hudexchange.info/programs/home/topics/program-administration-and-management/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-overview-of-the-home-program/\",\n          \"https://www.hudexchange.info/trainings/courses/building-home-home-program-requirements/\",\n          \"https://www.hudexchange.info/programs/home/topics/home-and-other-federal-programs/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"giw\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2012-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/programs/coc/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/resource/5312/fy-2017-giw-change-form/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2017-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2015-coc-program-nofa-coc-program-competition/\",\n          \"https://www.hudexchange.info/news/fy-2017-coc-program-grant-inventory-worksheets-are-available-for-review-on-the-hud-exchange/\",\n          \"https://www.hudexchange.info/news/fy-2018-coc-program-registration-process-coc-program-registration-notice-posted-to-the-hud-exchange/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/grant-inventory-worksheets-giws/other/what-is-the-purpose-of-the-giw-change-form-why-can-we-not-just-send/\",\n          \"https://www.hudexchange.info/resource/4409/grant-inventory-worksheet-giw-instructions/\",\n          \"https://www.hudexchange.info/resource/4410/grant-inventory-worksheet-giw-webcast/\",\n          \"https://www.hudexchange.info/resource/5698/giw-change-form-with-rental-assistance-worksheet/\",\n          \"https://www.hudexchange.info/resource/6713/giw-change-form-with-rental-assistance-worksheet/\",\n          \"https://www.hudexchange.info/news/revised-fy-2021-giws-posted/\",\n          \"https://www.hudexchange.info/news/giws-available-for-coc-review/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/coc/coc-giw-reports/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"section 108\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/section-108/project-profiles/\",\n          \"https://www.hudexchange.info/trainings/section-108-webinars/\",\n          \"https://www.hudexchange.info/resource/6288/section-108-underwriting-guidelines-for-business-loans-for-section-108-loan-guarantee-recipients/\",\n          \"https://www.hudexchange.info/programs/section-108/section-108-program-eligibility-requirements/\",\n          \"https://www.hudexchange.info/trainings/courses/section-108-loan-guarantee-program-webinar-series-leveraging-section-108-with-lihtcs/3832/\",\n          \"https://www.hudexchange.info/trainings/courses/section-108-loan-guarantee-program-webinar-series-leveraging-section-108-with-nmtcs/3855/\",\n          \"https://www.hudexchange.info/trainings/courses/section-108-loan-guarantee-program-webinar-series-leveraging-section-108-with-oz-and-htc-financing/4320/\",\n          \"https://www.hudexchange.info/resource/6485/leveraging-cdbg-section-108-with-lihtcs/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/section-108/\",\n          \"https://www.hudexchange.info/resource/6073/section-108-business-assessment-tool/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"domestic violence\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/grantees/alabama-coalition-against-domestic-violence/?program=3\",\n          \"https://www.hudexchange.info/grantees/chrysalis-shelter-for-victims-of-domestic-violence/\",\n          \"https://www.hudexchange.info/grantees/catalyst-domestic-violence-services/?program=3\",\n          \"https://www.hudexchange.info/grantees/branches-domestic-violence-shelter/\",\n          \"https://www.hudexchange.info/grantees/catalyst-domestic-violence-services/\",\n          \"https://www.hudexchange.info/grantees/steps-to-end-domestic-violence/?program=3\",\n          \"https://www.hudexchange.info/grantees/branches-domestic-violence-shelter/?program=3\",\n          \"https://www.hudexchange.info/resource/5657/guidance-for-domestic-violence-partners-and-cocs-on-participating-in-the-pit-count/\",\n          \"https://www.hudexchange.info/news/snaps-in-focus-ensuring-access-for-survivors-of-domestic-violence/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/homelessness-assistance/domestic-violence/\",\n          \"https://www.hudexchange.info/grantees/steps-to-end-domestic-violence/\",\n          \"https://www.hudexchange.info/trainings/courses/addressing-the-intersection-of-domestic-violence-and-hiv-aids/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"utility allowance\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/better-buildings-challenge/energy-and-water-efficiency-resources/utility-benchmarking/\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/program-requirements/calculating-rents-and-utility-allowances/how-is-the-total-tenant-payment-ttp-and-tenant-rent-calculated-for-the/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/faqs/programs/home-investment-partnerships-program-home/tenant-based-rental-assistance/section-92-252-d-requires-the-participating-jurisdiction-pj-to-use-the/\",\n          \"https://www.hudexchange.info/programs/home/topics/rental-housing/\",\n          \"https://www.hudexchange.info/programs/mtw/mtw-expansion-training/all-available-mtw-waivers/1-tenant-rent-policies-waivers/\",\n          \"https://www.hudexchange.info/resource/133/tenant-paid-utility-data-sampling-calculator/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/2267/utility-allowance-guidebook/\",\n          \"https://www.hudexchange.info/trainings/courses/hud-utility-schedule-model-calculating-utility-allowances-for-home-webinar1/\",\n          \"https://www.hudexchange.info/homelessness-assistance/coc-esg-virtual-binders/coc-rent-calculation/rent-calculation-process/step-9-determine-the-utility-allowance/\",\n          \"https://www.hudexchange.info/resource/2096/home-rent-determination-chart-2-utility-allowance/\",\n          \"https://files.hudexchange.info/course-content/hud-utility-schedule-model-calculating-utility-allowances-for-home-webinar/HUD-Utility-Schedule-Model-Calculating-Utility-Allowances-for-HOME-Webinar.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/emergency-solutions-grants-esg-program/program-requirements/eligible-activitiesuses/is-it-allowable-to-use-esg-funds-to-provide-utility-assistance-to-homeowner/\",\n          \"https://www.hudexchange.info/resource/5034/homefires-vol-13-no-2-guidance-on-how-to-establish-utility-allowances-for-home-assisted-rental-units/\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/program-requirements/general/can-pra-inspection-utility-allowance-and-rent-adjustment-effective-dates1/\",\n          \"https://files.hudexchange.info/resources/documents/Utility-Allowance-Guidebook-Appendices.pdf\",\n          \"https://files.hudexchange.info/resources/documents/HOME-Rent-Determination-Chart-2-Utility-Allowance.pdf\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"idis login\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/drgr/administration/admin-general/can-i-access-other-hud-cpd-planning-tools-from-drgr/\",\n          \"https://www.hudexchange.info/programs/hopwa/hopwa-national-technical-assistance/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/general/how-do-i-obtain-an-hdx-login/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/e-snaps-homeless-assistance-application-and-grants-management-system/apr/apr-general/how-do-i-obtain-an-apr-login-and-password/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/news/register-today-understanding-recent-idis-changes-based-on-the-home-commitment-interim-rule-april-26-27-2017/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/administration/account-basics-troubleshooting/what-computer-settings-do-i-need-to-log-in/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/reports/access-reports/how-do-you-run-the-idis-pr30-report/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/reports/access-reports/is-there-a-report-that-identifies-the-last-time-a-user-logged/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/administration/account-basics-troubleshooting/when-i-try-to-log-into-idis-it-takes-me-straight-to-heros-and-not-into-idis/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/administration/account-basics-troubleshooting/how-often-am-i-required-to-certify-my-personal-contact-information-in-idis/\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/IDIS-Online-Reports-User-Guide-Chapter-2.pdf\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/integrated-disbursement-and-information-system-idis/administration/account-basics-troubleshooting/how-do-i-log-into-idis/\",\n          \"https://www.hudexchange.info/programs/idis/idis-technical-assistance/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"lead\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/trainings/courses/lead-the-way-pha-governance-and-financial-management/\",\n          \"https://www.hudexchange.info/programs/hmis/hmis-lead-sys-admin-webinars/\",\n          \"https://www.hudexchange.info/trainings/courses/hmis-lead-monitoring/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/program-administration/general/what-is-the-hmis-lead/\",\n          \"https://www.hudexchange.info/resource/6261/hmis-lead-series/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/program-administration/general/what-are-the-responsibilities-of-the-hmis-lead/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/lead-based-paint/resources/\",\n          \"https://www.hudexchange.info/trainings/lead-based-paint/lshr/\",\n          \"https://www.hudexchange.info/resource/3198/historic-properties-and-the-lead-safe-housing-rule/\",\n          \"https://www.hudexchange.info/trainings/lead-based-paint/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/lead-based-paint/\",\n          \"https://www.hudexchange.info/programs/lead-based-paint/regulations/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"rental assistance\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/resource/3099/coc-program-rental-assistance/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/2099/home-rental-assistance-contract/\",\n          \"https://www.hudexchange.info/resource/2128/tbra-applications-for-rental-assistance/\",\n          \"https://www.hudexchange.info/resource/2100/home-rental-assistance-coupon/\",\n          \"https://www.hudexchange.info/programs/section-3/section-3-guidebook/program-specific-application/housing-rental-assistance-demonstration/\",\n          \"https://www.hudexchange.info/resource/6140/emergency-home-tbra-sample-rental-assistance-contract/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/rental-assistance/what-is-long-term-rental-assistance/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/rental-assistance/what-is-medium-term-rental-assistance/\",\n          \"https://www.hudexchange.info/faqs/programs/continuum-of-care-coc-program/rental-assistance/what-is-short-term-rental-assistance/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/rad/\",\n          \"https://www.hudexchange.info/programs/home/topics/tbra/\",\n          \"https://www.hudexchange.info/resource/2818/hopwa-rental-assistance-guidebook/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"lihtc\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/home/ad-hoc-reports/\",\n          \"https://www.hudexchange.info/programs/home/project-profiles/wisdom-village-of-northlake-phase-2/\",\n          \"https://www.hudexchange.info/programs/environmental-review/historic-preservation/tax-credit/\",\n          \"https://www.hudexchange.info/programs/811-pra/pra-program-eligibility-requirements/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/environmental-review/we-have-two-properties-that-are-low-income-housing-tax-credit-lihtc-sites/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/6485/leveraging-cdbg-section-108-with-lihtcs/\",\n          \"https://www.hudexchange.info/trainings/courses/year-15-transition-strategies-for-expiring-lihtc-properties-webinar/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/rent-reasonableness/program-requirements/can-an-owner-of-a-low-income-housing-tax-credit-lihtc-development-charge/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/rent-reasonableness/program-requirements/can-an-owner-of-a-low-income-housing-tax-credit-lihtc-property-increase/\",\n          \"https://files.hudexchange.info/course-content/4529/Leveraging-Section-108-with-LIHTCs-Questions-and-Answers.pdf\",\n          \"https://www.hudexchange.info/trainings/courses/section-108-loan-guarantee-program-webinar-series-leveraging-section-108-with-lihtcs/3832/\",\n          \"https://files.hudexchange.info/course-content/4529/Leveraging-Section-108-with-LIHTCs-Slides.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/fair-housing-and-section-504/some-of-our-older-home-and-low-income-housing-tax-credit-lihtc-properties/\",\n          \"https://www.hudexchange.info/resource/4684/implementing-the-fair-housing-equity-assessment-advancing-opportunity-through-the-low-income-housing-tax-credits/\",\n          \"https://files.hudexchange.info/course-content/section-108-loan-guarantee-program-webinar-series-leveraging-section-108-with-lihtcs/Leveraging-Section-108-with-LIHTCs-Case-Study-2.pdf\",\n          \"https://files.hudexchange.info/course-content/section-108-loan-guarantee-program-webinar-series-leveraging-section-108-with-lihtcs/Leveraging-Section-108-with-LIHTCs-Case-Study-1.pdf\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"hmis data standards\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/news/hud-releases-2017-hmis-data-standards-data-dictionary/\",\n          \"https://files.hudexchange.info/resources/documents/HMIS-Data-Standards-Manual-2017.pdf\",\n          \"https://files.hudexchange.info/resources/documents/HMIS-Data-Dictionary-2018.pdf\",\n          \"https://files.hudexchange.info/resources/documents/HMIS-Data-Standards-Management-Process-Overview.pdf\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/hmis/hmis-data-standards/standards/\",\n          \"https://www.hudexchange.info/news/hud-releases-fy-2022-hmis-data-standards/\",\n          \"https://files.hudexchange.info/resources/documents/HMIS-Data-Standards-Request-For-Services-Template.docx\",\n          \"https://www.hudexchange.info/resource/6745/fy-2024-hmis-data-standards-update-management-process/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/resource/3824/hmis-data-dictionary/\",\n          \"https://www.hudexchange.info/programs/hmis/hmis-data-standards/\",\n          \"https://www.hudexchange.info/programs/hmis/hmis-data-and-technical-standards/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"hqs\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/mtw/mtw-expansion-training/all-available-mtw-waivers/5-housing-quality-standards-hqs/\",\n          \"https://www.hudexchange.info/resource/1827/hqs-habitability-standards/\",\n          \"https://files.hudexchange.info/resources/documents/PIH-HCV-Landlord-HQS-Biennial-Inspection-Flowchart-Spanish.pdf\",\n          \"https://www.hudexchange.info/resource/2091/home-housing-quality-standards-hqs-inspection-form/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-opportunities-for-persons-with-aids-hopwa-program/rental-assistance/short-term-rent-mortgage-and-utility-assistance-strmu-payments/are-hqs-inspections-required-in-units-eligible-for-strmu-assistance/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/uncategorized/housing-quality-standards-hqs/do-housing-quality-standards-hqs-inspections-require-smoke-detectors/\",\n          \"https://files.hudexchange.info/resources/documents/PIH-HCV-Landlord-HQS-Biennial-Inspection-Flowchart.pdf\",\n          \"https://files.hudexchange.info/resources/documents/PIH-HCV-Landlord-HQS-Initial-Inspection-Flowchart.pdf\",\n          \"https://files.hudexchange.info/resources/documents/NSPIRE-and-HQS-Comparison-Job-Aid.pdf\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/uncategorized/housing-quality-standards-hqs/must-a-housing-quality-standards-hqs-inspector-revisit-a-unit-that-has-a/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/uncategorized/housing-quality-standards-hqs/what-are-the-hqs-requirements-for-exterior-paint/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-choice-voucher-program/uncategorized/housing-quality-standards-hqs/please-clarify-housing-quality-standard-requirements-before-public/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"cdbg idis\"\n      },\n      \"relevant_documents\": {\n        \"0\": [\n          \"https://www.hudexchange.info/programs/covid-19/\"\n        ],\n        \"1\": [\n          \"https://www.hudexchange.info/programs/cdbg-entitlement/\",\n          \"https://www.hudexchange.info/trainings/courses/idis-for-state-cdbg-grantees/123/\",\n          \"https://www.hudexchange.info/programs/cdbg/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/idis-cdbg/\",\n          \"https://www.hudexchange.info/trainings/courses/idis-cdbg-introduction-to-idis-training-for-cdbg-grantees/\",\n          \"https://www.hudexchange.info/news/hud-publishes-new-cdbg-idis-faqs/\",\n          \"https://www.hudexchange.info/trainings/courses/basically-cdbg-online-idis-and-cdbg/\",\n          \"https://www.hudexchange.info/resource/2822/cdbg-changes-in-idis-instructions-for-grantees-idis-release-114/\",\n          \"https://www.hudexchange.info/news/new-cdbg-idis-faqs-available-on-the-hud-exchange/\",\n          \"https://www.hudexchange.info/trainings/basically-cdbg-online/idis-and-cdbg/\",\n          \"https://www.hudexchange.info/resource/3087/faqs-cdbg-idis-11-4-system-changes/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/idis/guides/cdbg/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"htf\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/resources/using-home-htf-funds-within-opportunity-zones/the-essentials-of-oz-home-htf-programs/comparison-of-home-and-htf/\",\n          \"https://www.hudexchange.info/programs/environmental-review/htf/\",\n          \"https://www.hudexchange.info/resources/using-home-htf-funds-within-opportunity-zones/the-essentials-of-oz-home-htf-programs/the-htf-program-101-basics/additional-htf-resources/\",\n          \"https://www.hudexchange.info/programs/htf/notices/\",\n          \"https://www.hudexchange.info/resources/using-home-htf-funds-within-opportunity-zones/the-essentials-of-oz-home-htf-programs/the-htf-program-101-basics/what-is-htf/\",\n          \"https://www.hudexchange.info/programs/htf/guides/\",\n          \"https://www.hudexchange.info/programs/htf/htf-national-production-reports/\",\n          \"https://www.hudexchange.info/programs/htf/htf-open-activities-reports/\",\n          \"https://www.hudexchange.info/resources/using-home-htf-funds-within-opportunity-zones/the-essentials-of-oz-home-htf-programs/the-htf-program-101-basics/\",\n          \"https://www.hudexchange.info/programs/htf/laws-regulations/\",\n          \"https://www.hudexchange.info/resources/using-home-htf-funds-within-opportunity-zones/the-essentials-of-oz-home-htf-programs/the-htf-program-101-basics/htf-eligible-activities-and-costs/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/htf/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"faq\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/news/new-home-idis-faq-and-updates-to-existing-idis-faqs-now-available/\",\n          \"https://www.hudexchange.info/resource/3869/promise-zones-archived-application-materials/\",\n          \"https://www.hudexchange.info/news/home-arp-public-participation-video-faq-now-available/\",\n          \"https://www.hudexchange.info/resource/6184/faq-your-fss-escrow-savings-account/\",\n          \"https://www.hudexchange.info/faqs/programs/cdbg-entitlement-program/consolidated-plan/what-are-the-types-of-agreements-that-the-entitlement-city-in-faq-3540/\",\n          \"https://www.hudexchange.info/resource/6605/homearp-housing-production-goal-calculation-worksheet-and-faq/\",\n          \"https://www.hudexchange.info/news/new-home-arp-idis-fact-sheet-and-faq-now-available/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/coc/faqs/\",\n          \"https://www.hudexchange.info/resource/3715/historic-preservation-faqs/\",\n          \"https://www.hudexchange.info/programs/location-affordability-index/faqs/\",\n          \"https://www.hudexchange.info/resource/3821/farmlands-protection-faqs/\",\n          \"https://www.hudexchange.info/resource/4891/cdbg-broadband-infrastructure-faqs/\",\n          \"https://www.hudexchange.info/trainings/courses/home-arp-public-participation-video-faq/\",\n          \"https://files.hudexchange.info/course-content/housing-choice-voucher-homeownership-webinar/HCV-Homeownership-Lender-FAQ.pdf\",\n          \"https://www.hudexchange.info/resource/3763/flood-insurance-faqs/\",\n          \"https://www.hudexchange.info/resource/5155/microstrategy-faqs/\",\n          \"https://files.hudexchange.info/resources/documents/HCV-Homeownership-Lender-FAQ.pdf\",\n          \"https://www.hudexchange.info/resource/3820/endangered-species-faqs/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/faqs/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"home income limits\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2005.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2011.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_UncappedIncomeLimitsMemo_2012.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_UncappedIncomeLimitsMemo_2004.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2004.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2006.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2012.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2007.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2003.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2010.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2009.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2013.pdf\",\n          \"https://www.hudexchange.info/sites/onecpd/assets/File/HOME_IncomeLmts_Memo_2008.pdf\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/resource/6499/home-arp-income-limits/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/home/home-income-limits/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"hic\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/resource/5987/2020-hic-and-pit-count-data-submission-guidance/\",\n          \"https://www.hudexchange.info/resource/6300/2021-hic-and-pit-count-data-submission-guidance/\",\n          \"https://www.hudexchange.info/news/submittal-deadline-reminders-2018-hic-and-pit-count-data-and-fy-2017-system-performance-measures-report/\",\n          \"https://files.hudexchange.info/resources/documents/2013HICandPITDataSubmissionGuidance.pdf\",\n          \"https://www.hudexchange.info/resource/1978/2012-point-in-time-pit-and-housing-inventory-count-hic-faqs/\",\n          \"https://www.hudexchange.info/resource/1241/2011-housing-inventory-count-hic-instruction-guide/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/hic/is-there-a-way-to-edit-the-program-name-in-the-hic/\",\n          \"https://www.hudexchange.info/resource/4453/2015-hic-and-pit-data-submission-guidance/\",\n          \"https://www.hudexchange.info/resource/3764/2014-hic-and-pit-of-homeless-persons-data-collection-guidance/\",\n          \"https://www.hudexchange.info/resource/4960/2016-hic-and-pit-data-submission-guidance/\",\n          \"https://www.hudexchange.info/resource/5314/2017-hic-and-pit-data-submission-presentation/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/hic/how-should-vash-vouchers-be-reported-on-the-hic/\",\n          \"https://www.hudexchange.info/resource/5205/veterans-hicpit-count-data-guidance-tool/\",\n          \"https://www.hudexchange.info/faqs/reporting-systems/homelessness-data-exchange-hdx/hic/what-should-be-included-in-the-hic/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/hdx/guides/pit-hic/?utm_source=HUD+Exchange+Mailing+List&utm_campaign=6e453d32ab-PIT+Count+Office+Hours+and+Resources+10.26.18&utm_medium=email&utm_term=0_f32b935a5f-6e453d32ab-19226917\",\n          \"https://www.hudexchange.info/programs/hdx/guides/pit-hic/\",\n          \"https://www.hudexchange.info/programs/hdx/pit-hic/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"esg-cv\"\n      },\n      \"relevant_documents\": {\n        \"2\": [\n          \"https://www.hudexchange.info/programs/covid-19/\",\n          \"https://www.hudexchange.info/trainings/courses/esg-cv-funds-reallocation-overview/\",\n          \"https://www.hudexchange.info/trainings/courses/esg-cv-updates-webinar/\",\n          \"https://www.hudexchange.info/trainings/courses/esg-cv-notice-webinar/\",\n          \"https://www.hudexchange.info/trainings/courses/esg-cv-reporting-requirements-training-series-for-state-territory-esg-recipients/\",\n          \"https://www.hudexchange.info/news/esg-hopwa-waiver-memo-and-idis-instructions-for-submitting-a-substantial-amendment-for-cdbg-cv-esg-cv-and-hopwa-cv-grants/\",\n          \"https://www.hudexchange.info/news/esg-cv-expenditure-deadline-updates/\",\n          \"https://www.hudexchange.info/news/the-first-esg-cv-quarterly-report-is-open-in-sage/\",\n          \"https://www.hudexchange.info/news/esg-cv-reporting-requirements-training-series-for-esg-recipients/\",\n          \"https://www.hudexchange.info/trainings/courses/esg-and-esg-cv-reporting-office-hours/\",\n          \"https://www.hudexchange.info/news/esg-and-esg-cv-reporting-office-hours/\",\n          \"https://www.hudexchange.info/news/esg-cv-award-letters-distributed/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"yhdp\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/yhdp/fy-2016-application-resources/\",\n          \"https://www.hudexchange.info/programs/yhdp/fy-2018-yhdp-application-resources/\",\n          \"https://www.hudexchange.info/programs/yhdp/fy-2017-application-resources/\",\n          \"https://www.hudexchange.info/resource/5679/fy-2016-yhdp-debrief/\",\n          \"https://www.hudexchange.info/programs/yhdp/fy-2021-application-resources/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/yhdp/listening-sessions/\",\n          \"https://www.hudexchange.info/resource/5733/yhdp-lessons-learned/\",\n          \"https://www.hudexchange.info/programs/e-snaps/fy-2021-coc-program-nofa-coc-program-competition/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/yhdp/community-resources/\",\n          \"https://www.hudexchange.info/programs/yhdp/\",\n          \"https://www.hudexchange.info/resource/6178/yhdp-hmis-manual/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"calculator\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/mtw/mtw-expansion-training/mtw-funding-calculations/step-by-step-how-to-calculate-mtw-hap-renewal-funding/funding-calculation-examples/\",\n          \"https://www.hudexchange.info/programs/mtw/mtw-expansion-training/statutory-requirements/3-substantially-the-same-number-of-households/hcv-families-housed-calculation/\",\n          \"https://www.hudexchange.info/news/update-for-cpd-income-eligibility-calculator-users/\",\n          \"https://www.hudexchange.info/news/update-for-cpd-income-eligibility-calculator-users1/\",\n          \"https://www.hudexchange.info/faqs/programs/housing-counseling/certification-exam-and-training/the-certification-exam/can-a-calculator-be-used-during-the-certification-examination/\",\n          \"https://www.hudexchange.info/trainings/courses/using-the-income-calculator-for-rental-and-tbra-programs-webinar1/\",\n          \"https://www.hudexchange.info/trainings/courses/using-the-income-calculator-to-determine-annual-income-webinar1/\",\n          \"https://www.hudexchange.info/resource/6132/mortgage-interest-differential-payment-calculators/\",\n          \"https://www.hudexchange.info/resource/133/tenant-paid-utility-data-sampling-calculator/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/programs/environmental-review/dnl-calculator/\",\n          \"https://www.hudexchange.info/programs/environmental-review/bpm-calculator/\",\n          \"https://www.hudexchange.info/programs/mtw/mtw-expansion-training/mtw-funding-calculations/\",\n          \"https://www.hudexchange.info/resource/1835/hopwa-income-resident-rent-calculation/\",\n          \"https://www.hudexchange.info/programs/census/low-mod-income-summary-data/calculation/\",\n          \"https://www.hudexchange.info/resource/2079/cpd-income-eligibility-calculator/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/incomecalculator/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"affh\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-14-data-collection-and-analysis/4715/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-10/4709/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-2/4544/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-8/4554/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-6/4553/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-16-goal-setting-and-reporting/4724/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-3/4549/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-1/4543/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-12-fair-housing-issues-impediments-and-contributing-fact/4713/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-13-general-questions/4714/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-11-general-questions/4712/\",\n          \"https://www.hudexchange.info/news/2022-fair-housing-office-hours/\",\n          \"https://www.hudexchange.info/trainings/courses/2022-fair-housing-office-hours-session-4/4552/\",\n          \"https://www.hudexchange.info/trainings/courses/engaging-the-disability-community-in-fair-housing-planning-affh-for-individuals-with-disabilities/4616/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/programs/fair-housing-planning/\"\n        ]\n      }\n    },\n    {\n      \"placeholders\": {\n        \"$query\": \"income\"\n      },\n      \"relevant_documents\": {\n        \"1\": [\n          \"https://www.hudexchange.info/programs/home/home-income-limits/\",\n          \"https://www.hudexchange.info/programs/htf/htf-income-limits/\",\n          \"https://www.hudexchange.info/trainings/courses/income-determination-workshop/\",\n          \"https://www.hudexchange.info/faqs/programs/811-project-rental-assistance-pra/program-requirements/calculating-rents-and-utility-allowances/is-employment-income-or-other-income-of-a-live-in-aide/\",\n          \"https://www.hudexchange.info/programs/home/topics/income-determination/\",\n          \"https://www.hudexchange.info/faqs/programs/public-housing/reexaminations/reexamination-process/for-continued-eligibility-is-adjusted-income-or-gross-income-used-to/\"\n        ],\n        \"2\": [\n          \"https://www.hudexchange.info/news/cpd-income-eligibility-calculator-updated-with-income-limits/\",\n          \"https://www.hudexchange.info/faqs/programs/neighborhood-stabilization-program-nsp/homebuyer-assistance-programs/homebuyer-program-design-and-implementation/whose-income-is-used-to-determine-household-income/\",\n          \"https://www.hudexchange.info/trainings/courses/using-the-income-calculator-to-determine-annual-income-webinar1/\",\n          \"https://www.hudexchange.info/programs/cdbg/cdbg-income-survey-toolkit/\"\n        ],\n        \"3\": [\n          \"https://www.hudexchange.info/incomecalculator/\"\n        ]\n      }\n    }\n  ]\n}";

/***/ }),

/***/ "./node_modules/@kurkle/color/dist/color.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/@kurkle/color/dist/color.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Color": () => (/* binding */ Color),
/* harmony export */   "b2n": () => (/* binding */ b2n),
/* harmony export */   "b2p": () => (/* binding */ b2p),
/* harmony export */   "default": () => (/* binding */ index_esm),
/* harmony export */   "hexParse": () => (/* binding */ hexParse),
/* harmony export */   "hexString": () => (/* binding */ hexString),
/* harmony export */   "hsl2rgb": () => (/* binding */ hsl2rgb),
/* harmony export */   "hslString": () => (/* binding */ hslString),
/* harmony export */   "hsv2rgb": () => (/* binding */ hsv2rgb),
/* harmony export */   "hueParse": () => (/* binding */ hueParse),
/* harmony export */   "hwb2rgb": () => (/* binding */ hwb2rgb),
/* harmony export */   "lim": () => (/* binding */ lim),
/* harmony export */   "n2b": () => (/* binding */ n2b),
/* harmony export */   "n2p": () => (/* binding */ n2p),
/* harmony export */   "nameParse": () => (/* binding */ nameParse),
/* harmony export */   "p2b": () => (/* binding */ p2b),
/* harmony export */   "rgb2hsl": () => (/* binding */ rgb2hsl),
/* harmony export */   "rgbParse": () => (/* binding */ rgbParse),
/* harmony export */   "rgbString": () => (/* binding */ rgbString),
/* harmony export */   "rotate": () => (/* binding */ rotate),
/* harmony export */   "round": () => (/* binding */ round)
/* harmony export */ });
/*!
 * @kurkle/color v0.3.2
 * https://github.com/kurkle/color#readme
 * (c) 2023 Jukka Kurkela
 * Released under the MIT License
 */
function round(v) {
  return v + 0.5 | 0;
}
const lim = (v, l, h) => Math.max(Math.min(v, h), l);
function p2b(v) {
  return lim(round(v * 2.55), 0, 255);
}
function b2p(v) {
  return lim(round(v / 2.55), 0, 100);
}
function n2b(v) {
  return lim(round(v * 255), 0, 255);
}
function b2n(v) {
  return lim(round(v / 2.55) / 100, 0, 1);
}
function n2p(v) {
  return lim(round(v * 100), 0, 100);
}

const map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};
const hex = [...'0123456789ABCDEF'];
const h1 = b => hex[b & 0xF];
const h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];
const eq = b => ((b & 0xF0) >> 4) === (b & 0xF);
const isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);
function hexParse(str) {
  var len = str.length;
  var ret;
  if (str[0] === '#') {
    if (len === 4 || len === 5) {
      ret = {
        r: 255 & map$1[str[1]] * 17,
        g: 255 & map$1[str[2]] * 17,
        b: 255 & map$1[str[3]] * 17,
        a: len === 5 ? map$1[str[4]] * 17 : 255
      };
    } else if (len === 7 || len === 9) {
      ret = {
        r: map$1[str[1]] << 4 | map$1[str[2]],
        g: map$1[str[3]] << 4 | map$1[str[4]],
        b: map$1[str[5]] << 4 | map$1[str[6]],
        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255
      };
    }
  }
  return ret;
}
const alpha = (a, f) => a < 255 ? f(a) : '';
function hexString(v) {
  var f = isShort(v) ? h1 : h2;
  return v
    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)
    : undefined;
}

const HUE_RE = /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
function hsl2rgbn(h, s, l) {
  const a = s * Math.min(l, 1 - l);
  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
  return [f(0), f(8), f(4)];
}
function hsv2rgbn(h, s, v) {
  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);
  return [f(5), f(3), f(1)];
}
function hwb2rgbn(h, w, b) {
  const rgb = hsl2rgbn(h, 1, 0.5);
  let i;
  if (w + b > 1) {
    i = 1 / (w + b);
    w *= i;
    b *= i;
  }
  for (i = 0; i < 3; i++) {
    rgb[i] *= 1 - w - b;
    rgb[i] += w;
  }
  return rgb;
}
function hueValue(r, g, b, d, max) {
  if (r === max) {
    return ((g - b) / d) + (g < b ? 6 : 0);
  }
  if (g === max) {
    return (b - r) / d + 2;
  }
  return (r - g) / d + 4;
}
function rgb2hsl(v) {
  const range = 255;
  const r = v.r / range;
  const g = v.g / range;
  const b = v.b / range;
  const max = Math.max(r, g, b);
  const min = Math.min(r, g, b);
  const l = (max + min) / 2;
  let h, s, d;
  if (max !== min) {
    d = max - min;
    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
    h = hueValue(r, g, b, d, max);
    h = h * 60 + 0.5;
  }
  return [h | 0, s || 0, l];
}
function calln(f, a, b, c) {
  return (
    Array.isArray(a)
      ? f(a[0], a[1], a[2])
      : f(a, b, c)
  ).map(n2b);
}
function hsl2rgb(h, s, l) {
  return calln(hsl2rgbn, h, s, l);
}
function hwb2rgb(h, w, b) {
  return calln(hwb2rgbn, h, w, b);
}
function hsv2rgb(h, s, v) {
  return calln(hsv2rgbn, h, s, v);
}
function hue(h) {
  return (h % 360 + 360) % 360;
}
function hueParse(str) {
  const m = HUE_RE.exec(str);
  let a = 255;
  let v;
  if (!m) {
    return;
  }
  if (m[5] !== v) {
    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);
  }
  const h = hue(+m[2]);
  const p1 = +m[3] / 100;
  const p2 = +m[4] / 100;
  if (m[1] === 'hwb') {
    v = hwb2rgb(h, p1, p2);
  } else if (m[1] === 'hsv') {
    v = hsv2rgb(h, p1, p2);
  } else {
    v = hsl2rgb(h, p1, p2);
  }
  return {
    r: v[0],
    g: v[1],
    b: v[2],
    a: a
  };
}
function rotate(v, deg) {
  var h = rgb2hsl(v);
  h[0] = hue(h[0] + deg);
  h = hsl2rgb(h);
  v.r = h[0];
  v.g = h[1];
  v.b = h[2];
}
function hslString(v) {
  if (!v) {
    return;
  }
  const a = rgb2hsl(v);
  const h = a[0];
  const s = n2p(a[1]);
  const l = n2p(a[2]);
  return v.a < 255
    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`
    : `hsl(${h}, ${s}%, ${l}%)`;
}

const map = {
  x: 'dark',
  Z: 'light',
  Y: 're',
  X: 'blu',
  W: 'gr',
  V: 'medium',
  U: 'slate',
  A: 'ee',
  T: 'ol',
  S: 'or',
  B: 'ra',
  C: 'lateg',
  D: 'ights',
  R: 'in',
  Q: 'turquois',
  E: 'hi',
  P: 'ro',
  O: 'al',
  N: 'le',
  M: 'de',
  L: 'yello',
  F: 'en',
  K: 'ch',
  G: 'arks',
  H: 'ea',
  I: 'ightg',
  J: 'wh'
};
const names$1 = {
  OiceXe: 'f0f8ff',
  antiquewEte: 'faebd7',
  aqua: 'ffff',
  aquamarRe: '7fffd4',
  azuY: 'f0ffff',
  beige: 'f5f5dc',
  bisque: 'ffe4c4',
  black: '0',
  blanKedOmond: 'ffebcd',
  Xe: 'ff',
  XeviTet: '8a2be2',
  bPwn: 'a52a2a',
  burlywood: 'deb887',
  caMtXe: '5f9ea0',
  KartYuse: '7fff00',
  KocTate: 'd2691e',
  cSO: 'ff7f50',
  cSnflowerXe: '6495ed',
  cSnsilk: 'fff8dc',
  crimson: 'dc143c',
  cyan: 'ffff',
  xXe: '8b',
  xcyan: '8b8b',
  xgTMnPd: 'b8860b',
  xWay: 'a9a9a9',
  xgYF: '6400',
  xgYy: 'a9a9a9',
  xkhaki: 'bdb76b',
  xmagFta: '8b008b',
  xTivegYF: '556b2f',
  xSange: 'ff8c00',
  xScEd: '9932cc',
  xYd: '8b0000',
  xsOmon: 'e9967a',
  xsHgYF: '8fbc8f',
  xUXe: '483d8b',
  xUWay: '2f4f4f',
  xUgYy: '2f4f4f',
  xQe: 'ced1',
  xviTet: '9400d3',
  dAppRk: 'ff1493',
  dApskyXe: 'bfff',
  dimWay: '696969',
  dimgYy: '696969',
  dodgerXe: '1e90ff',
  fiYbrick: 'b22222',
  flSOwEte: 'fffaf0',
  foYstWAn: '228b22',
  fuKsia: 'ff00ff',
  gaRsbSo: 'dcdcdc',
  ghostwEte: 'f8f8ff',
  gTd: 'ffd700',
  gTMnPd: 'daa520',
  Way: '808080',
  gYF: '8000',
  gYFLw: 'adff2f',
  gYy: '808080',
  honeyMw: 'f0fff0',
  hotpRk: 'ff69b4',
  RdianYd: 'cd5c5c',
  Rdigo: '4b0082',
  ivSy: 'fffff0',
  khaki: 'f0e68c',
  lavFMr: 'e6e6fa',
  lavFMrXsh: 'fff0f5',
  lawngYF: '7cfc00',
  NmoncEffon: 'fffacd',
  ZXe: 'add8e6',
  ZcSO: 'f08080',
  Zcyan: 'e0ffff',
  ZgTMnPdLw: 'fafad2',
  ZWay: 'd3d3d3',
  ZgYF: '90ee90',
  ZgYy: 'd3d3d3',
  ZpRk: 'ffb6c1',
  ZsOmon: 'ffa07a',
  ZsHgYF: '20b2aa',
  ZskyXe: '87cefa',
  ZUWay: '778899',
  ZUgYy: '778899',
  ZstAlXe: 'b0c4de',
  ZLw: 'ffffe0',
  lime: 'ff00',
  limegYF: '32cd32',
  lRF: 'faf0e6',
  magFta: 'ff00ff',
  maPon: '800000',
  VaquamarRe: '66cdaa',
  VXe: 'cd',
  VScEd: 'ba55d3',
  VpurpN: '9370db',
  VsHgYF: '3cb371',
  VUXe: '7b68ee',
  VsprRggYF: 'fa9a',
  VQe: '48d1cc',
  VviTetYd: 'c71585',
  midnightXe: '191970',
  mRtcYam: 'f5fffa',
  mistyPse: 'ffe4e1',
  moccasR: 'ffe4b5',
  navajowEte: 'ffdead',
  navy: '80',
  Tdlace: 'fdf5e6',
  Tive: '808000',
  TivedBb: '6b8e23',
  Sange: 'ffa500',
  SangeYd: 'ff4500',
  ScEd: 'da70d6',
  pOegTMnPd: 'eee8aa',
  pOegYF: '98fb98',
  pOeQe: 'afeeee',
  pOeviTetYd: 'db7093',
  papayawEp: 'ffefd5',
  pHKpuff: 'ffdab9',
  peru: 'cd853f',
  pRk: 'ffc0cb',
  plum: 'dda0dd',
  powMrXe: 'b0e0e6',
  purpN: '800080',
  YbeccapurpN: '663399',
  Yd: 'ff0000',
  Psybrown: 'bc8f8f',
  PyOXe: '4169e1',
  saddNbPwn: '8b4513',
  sOmon: 'fa8072',
  sandybPwn: 'f4a460',
  sHgYF: '2e8b57',
  sHshell: 'fff5ee',
  siFna: 'a0522d',
  silver: 'c0c0c0',
  skyXe: '87ceeb',
  UXe: '6a5acd',
  UWay: '708090',
  UgYy: '708090',
  snow: 'fffafa',
  sprRggYF: 'ff7f',
  stAlXe: '4682b4',
  tan: 'd2b48c',
  teO: '8080',
  tEstN: 'd8bfd8',
  tomato: 'ff6347',
  Qe: '40e0d0',
  viTet: 'ee82ee',
  JHt: 'f5deb3',
  wEte: 'ffffff',
  wEtesmoke: 'f5f5f5',
  Lw: 'ffff00',
  LwgYF: '9acd32'
};
function unpack() {
  const unpacked = {};
  const keys = Object.keys(names$1);
  const tkeys = Object.keys(map);
  let i, j, k, ok, nk;
  for (i = 0; i < keys.length; i++) {
    ok = nk = keys[i];
    for (j = 0; j < tkeys.length; j++) {
      k = tkeys[j];
      nk = nk.replace(k, map[k]);
    }
    k = parseInt(names$1[ok], 16);
    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];
  }
  return unpacked;
}

let names;
function nameParse(str) {
  if (!names) {
    names = unpack();
    names.transparent = [0, 0, 0, 0];
  }
  const a = names[str.toLowerCase()];
  return a && {
    r: a[0],
    g: a[1],
    b: a[2],
    a: a.length === 4 ? a[3] : 255
  };
}

const RGB_RE = /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
function rgbParse(str) {
  const m = RGB_RE.exec(str);
  let a = 255;
  let r, g, b;
  if (!m) {
    return;
  }
  if (m[7] !== r) {
    const v = +m[7];
    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);
  }
  r = +m[1];
  g = +m[3];
  b = +m[5];
  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));
  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));
  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));
  return {
    r: r,
    g: g,
    b: b,
    a: a
  };
}
function rgbString(v) {
  return v && (
    v.a < 255
      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`
      : `rgb(${v.r}, ${v.g}, ${v.b})`
  );
}

const to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;
const from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);
function interpolate(rgb1, rgb2, t) {
  const r = from(b2n(rgb1.r));
  const g = from(b2n(rgb1.g));
  const b = from(b2n(rgb1.b));
  return {
    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),
    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),
    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),
    a: rgb1.a + t * (rgb2.a - rgb1.a)
  };
}

function modHSL(v, i, ratio) {
  if (v) {
    let tmp = rgb2hsl(v);
    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));
    tmp = hsl2rgb(tmp);
    v.r = tmp[0];
    v.g = tmp[1];
    v.b = tmp[2];
  }
}
function clone(v, proto) {
  return v ? Object.assign(proto || {}, v) : v;
}
function fromObject(input) {
  var v = {r: 0, g: 0, b: 0, a: 255};
  if (Array.isArray(input)) {
    if (input.length >= 3) {
      v = {r: input[0], g: input[1], b: input[2], a: 255};
      if (input.length > 3) {
        v.a = n2b(input[3]);
      }
    }
  } else {
    v = clone(input, {r: 0, g: 0, b: 0, a: 1});
    v.a = n2b(v.a);
  }
  return v;
}
function functionParse(str) {
  if (str.charAt(0) === 'r') {
    return rgbParse(str);
  }
  return hueParse(str);
}
class Color {
  constructor(input) {
    if (input instanceof Color) {
      return input;
    }
    const type = typeof input;
    let v;
    if (type === 'object') {
      v = fromObject(input);
    } else if (type === 'string') {
      v = hexParse(input) || nameParse(input) || functionParse(input);
    }
    this._rgb = v;
    this._valid = !!v;
  }
  get valid() {
    return this._valid;
  }
  get rgb() {
    var v = clone(this._rgb);
    if (v) {
      v.a = b2n(v.a);
    }
    return v;
  }
  set rgb(obj) {
    this._rgb = fromObject(obj);
  }
  rgbString() {
    return this._valid ? rgbString(this._rgb) : undefined;
  }
  hexString() {
    return this._valid ? hexString(this._rgb) : undefined;
  }
  hslString() {
    return this._valid ? hslString(this._rgb) : undefined;
  }
  mix(color, weight) {
    if (color) {
      const c1 = this.rgb;
      const c2 = color.rgb;
      let w2;
      const p = weight === w2 ? 0.5 : weight;
      const w = 2 * p - 1;
      const a = c1.a - c2.a;
      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
      w2 = 1 - w1;
      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;
      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;
      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;
      c1.a = p * c1.a + (1 - p) * c2.a;
      this.rgb = c1;
    }
    return this;
  }
  interpolate(color, t) {
    if (color) {
      this._rgb = interpolate(this._rgb, color._rgb, t);
    }
    return this;
  }
  clone() {
    return new Color(this.rgb);
  }
  alpha(a) {
    this._rgb.a = n2b(a);
    return this;
  }
  clearer(ratio) {
    const rgb = this._rgb;
    rgb.a *= 1 - ratio;
    return this;
  }
  greyscale() {
    const rgb = this._rgb;
    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);
    rgb.r = rgb.g = rgb.b = val;
    return this;
  }
  opaquer(ratio) {
    const rgb = this._rgb;
    rgb.a *= 1 + ratio;
    return this;
  }
  negate() {
    const v = this._rgb;
    v.r = 255 - v.r;
    v.g = 255 - v.g;
    v.b = 255 - v.b;
    return this;
  }
  lighten(ratio) {
    modHSL(this._rgb, 2, ratio);
    return this;
  }
  darken(ratio) {
    modHSL(this._rgb, 2, -ratio);
    return this;
  }
  saturate(ratio) {
    modHSL(this._rgb, 1, ratio);
    return this;
  }
  desaturate(ratio) {
    modHSL(this._rgb, 1, -ratio);
    return this;
  }
  rotate(deg) {
    rotate(this._rgb, deg);
    return this;
  }
}

function index_esm(input) {
  return new Color(input);
}




/***/ }),

/***/ "./node_modules/chart.js/auto/auto.js":
/*!********************************************!*\
  !*** ./node_modules/chart.js/auto/auto.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Animation": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Animation),
/* harmony export */   "Animations": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Animations),
/* harmony export */   "ArcElement": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.ArcElement),
/* harmony export */   "BarController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BarController),
/* harmony export */   "BarElement": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BarElement),
/* harmony export */   "BasePlatform": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BasePlatform),
/* harmony export */   "BasicPlatform": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BasicPlatform),
/* harmony export */   "BubbleController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BubbleController),
/* harmony export */   "CategoryScale": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.CategoryScale),
/* harmony export */   "Chart": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Chart),
/* harmony export */   "Colors": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Colors),
/* harmony export */   "DatasetController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.DatasetController),
/* harmony export */   "Decimation": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Decimation),
/* harmony export */   "DomPlatform": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.DomPlatform),
/* harmony export */   "DoughnutController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.DoughnutController),
/* harmony export */   "Element": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Element),
/* harmony export */   "Filler": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Filler),
/* harmony export */   "Interaction": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Interaction),
/* harmony export */   "Legend": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Legend),
/* harmony export */   "LineController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LineController),
/* harmony export */   "LineElement": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LineElement),
/* harmony export */   "LinearScale": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LinearScale),
/* harmony export */   "LogarithmicScale": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LogarithmicScale),
/* harmony export */   "PieController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.PieController),
/* harmony export */   "PointElement": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.PointElement),
/* harmony export */   "PolarAreaController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.PolarAreaController),
/* harmony export */   "RadarController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.RadarController),
/* harmony export */   "RadialLinearScale": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.RadialLinearScale),
/* harmony export */   "Scale": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Scale),
/* harmony export */   "ScatterController": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.ScatterController),
/* harmony export */   "SubTitle": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.SubTitle),
/* harmony export */   "Ticks": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Ticks),
/* harmony export */   "TimeScale": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.TimeScale),
/* harmony export */   "TimeSeriesScale": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.TimeSeriesScale),
/* harmony export */   "Title": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Title),
/* harmony export */   "Tooltip": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Tooltip),
/* harmony export */   "_adapters": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__._adapters),
/* harmony export */   "_detectPlatform": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__._detectPlatform),
/* harmony export */   "animator": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.animator),
/* harmony export */   "controllers": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.controllers),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "defaults": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.defaults),
/* harmony export */   "elements": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.elements),
/* harmony export */   "layouts": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.layouts),
/* harmony export */   "plugins": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.plugins),
/* harmony export */   "registerables": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.registerables),
/* harmony export */   "registry": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.registry),
/* harmony export */   "scales": () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.scales)
/* harmony export */ });
/* harmony import */ var _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/chart.js */ "./node_modules/chart.js/dist/chart.js");


_dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Chart.register(..._dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.registerables);


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Chart);


/***/ }),

/***/ "./node_modules/chart.js/dist/chart.js":
/*!*********************************************!*\
  !*** ./node_modules/chart.js/dist/chart.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Animation": () => (/* binding */ Animation),
/* harmony export */   "Animations": () => (/* binding */ Animations),
/* harmony export */   "ArcElement": () => (/* binding */ ArcElement),
/* harmony export */   "BarController": () => (/* binding */ BarController),
/* harmony export */   "BarElement": () => (/* binding */ BarElement),
/* harmony export */   "BasePlatform": () => (/* binding */ BasePlatform),
/* harmony export */   "BasicPlatform": () => (/* binding */ BasicPlatform),
/* harmony export */   "BubbleController": () => (/* binding */ BubbleController),
/* harmony export */   "CategoryScale": () => (/* binding */ CategoryScale),
/* harmony export */   "Chart": () => (/* binding */ Chart),
/* harmony export */   "Colors": () => (/* binding */ plugin_colors),
/* harmony export */   "DatasetController": () => (/* binding */ DatasetController),
/* harmony export */   "Decimation": () => (/* binding */ plugin_decimation),
/* harmony export */   "DomPlatform": () => (/* binding */ DomPlatform),
/* harmony export */   "DoughnutController": () => (/* binding */ DoughnutController),
/* harmony export */   "Element": () => (/* binding */ Element),
/* harmony export */   "Filler": () => (/* binding */ index),
/* harmony export */   "Interaction": () => (/* binding */ Interaction),
/* harmony export */   "Legend": () => (/* binding */ plugin_legend),
/* harmony export */   "LineController": () => (/* binding */ LineController),
/* harmony export */   "LineElement": () => (/* binding */ LineElement),
/* harmony export */   "LinearScale": () => (/* binding */ LinearScale),
/* harmony export */   "LogarithmicScale": () => (/* binding */ LogarithmicScale),
/* harmony export */   "PieController": () => (/* binding */ PieController),
/* harmony export */   "PointElement": () => (/* binding */ PointElement),
/* harmony export */   "PolarAreaController": () => (/* binding */ PolarAreaController),
/* harmony export */   "RadarController": () => (/* binding */ RadarController),
/* harmony export */   "RadialLinearScale": () => (/* binding */ RadialLinearScale),
/* harmony export */   "Scale": () => (/* binding */ Scale),
/* harmony export */   "ScatterController": () => (/* binding */ ScatterController),
/* harmony export */   "SubTitle": () => (/* binding */ plugin_subtitle),
/* harmony export */   "Ticks": () => (/* reexport safe */ _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL),
/* harmony export */   "TimeScale": () => (/* binding */ TimeScale),
/* harmony export */   "TimeSeriesScale": () => (/* binding */ TimeSeriesScale),
/* harmony export */   "Title": () => (/* binding */ plugin_title),
/* harmony export */   "Tooltip": () => (/* binding */ plugin_tooltip),
/* harmony export */   "_adapters": () => (/* binding */ adapters),
/* harmony export */   "_detectPlatform": () => (/* binding */ _detectPlatform),
/* harmony export */   "animator": () => (/* binding */ animator),
/* harmony export */   "controllers": () => (/* binding */ controllers),
/* harmony export */   "defaults": () => (/* reexport safe */ _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d),
/* harmony export */   "elements": () => (/* binding */ elements),
/* harmony export */   "layouts": () => (/* binding */ layouts),
/* harmony export */   "plugins": () => (/* binding */ plugins),
/* harmony export */   "registerables": () => (/* binding */ registerables),
/* harmony export */   "registry": () => (/* binding */ registry),
/* harmony export */   "scales": () => (/* binding */ scales)
/* harmony export */ });
/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunks/helpers.segment.js */ "./node_modules/chart.js/dist/chunks/helpers.segment.js");
/*!
 * Chart.js v4.2.1
 * https://www.chartjs.org
 * (c) 2023 Chart.js Contributors
 * Released under the MIT License
 */




class Animator {
    constructor(){
        this._request = null;
        this._charts = new Map();
        this._running = false;
        this._lastDate = undefined;
    }
 _notify(chart, anims, date, type) {
        const callbacks = anims.listeners[type];
        const numSteps = anims.duration;
        callbacks.forEach((fn)=>fn({
                chart,
                initial: anims.initial,
                numSteps,
                currentStep: Math.min(date - anims.start, numSteps)
            }));
    }
 _refresh() {
        if (this._request) {
            return;
        }
        this._running = true;
        this._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.r.call(window, ()=>{
            this._update();
            this._request = null;
            if (this._running) {
                this._refresh();
            }
        });
    }
 _update(date = Date.now()) {
        let remaining = 0;
        this._charts.forEach((anims, chart)=>{
            if (!anims.running || !anims.items.length) {
                return;
            }
            const items = anims.items;
            let i = items.length - 1;
            let draw = false;
            let item;
            for(; i >= 0; --i){
                item = items[i];
                if (item._active) {
                    if (item._total > anims.duration) {
                        anims.duration = item._total;
                    }
                    item.tick(date);
                    draw = true;
                } else {
                    items[i] = items[items.length - 1];
                    items.pop();
                }
            }
            if (draw) {
                chart.draw();
                this._notify(chart, anims, date, 'progress');
            }
            if (!items.length) {
                anims.running = false;
                this._notify(chart, anims, date, 'complete');
                anims.initial = false;
            }
            remaining += items.length;
        });
        this._lastDate = date;
        if (remaining === 0) {
            this._running = false;
        }
    }
 _getAnims(chart) {
        const charts = this._charts;
        let anims = charts.get(chart);
        if (!anims) {
            anims = {
                running: false,
                initial: true,
                items: [],
                listeners: {
                    complete: [],
                    progress: []
                }
            };
            charts.set(chart, anims);
        }
        return anims;
    }
 listen(chart, event, cb) {
        this._getAnims(chart).listeners[event].push(cb);
    }
 add(chart, items) {
        if (!items || !items.length) {
            return;
        }
        this._getAnims(chart).items.push(...items);
    }
 has(chart) {
        return this._getAnims(chart).items.length > 0;
    }
 start(chart) {
        const anims = this._charts.get(chart);
        if (!anims) {
            return;
        }
        anims.running = true;
        anims.start = Date.now();
        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);
        this._refresh();
    }
    running(chart) {
        if (!this._running) {
            return false;
        }
        const anims = this._charts.get(chart);
        if (!anims || !anims.running || !anims.items.length) {
            return false;
        }
        return true;
    }
 stop(chart) {
        const anims = this._charts.get(chart);
        if (!anims || !anims.items.length) {
            return;
        }
        const items = anims.items;
        let i = items.length - 1;
        for(; i >= 0; --i){
            items[i].cancel();
        }
        anims.items = [];
        this._notify(chart, anims, Date.now(), 'complete');
    }
 remove(chart) {
        return this._charts.delete(chart);
    }
}
var animator = /* #__PURE__ */ new Animator();

const transparent = 'transparent';
const interpolators = {
    boolean (from, to, factor) {
        return factor > 0.5 ? to : from;
    },
 color (from, to, factor) {
        const c0 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.c)(from || transparent);
        const c1 = c0.valid && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.c)(to || transparent);
        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;
    },
    number (from, to, factor) {
        return from + (to - from) * factor;
    }
};
class Animation {
    constructor(cfg, target, prop, to){
        const currentValue = target[prop];
        to = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([
            cfg.to,
            to,
            currentValue,
            cfg.from
        ]);
        const from = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([
            cfg.from,
            currentValue,
            to
        ]);
        this._active = true;
        this._fn = cfg.fn || interpolators[cfg.type || typeof from];
        this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.e[cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.e.linear;
        this._start = Math.floor(Date.now() + (cfg.delay || 0));
        this._duration = this._total = Math.floor(cfg.duration);
        this._loop = !!cfg.loop;
        this._target = target;
        this._prop = prop;
        this._from = from;
        this._to = to;
        this._promises = undefined;
    }
    active() {
        return this._active;
    }
    update(cfg, to, date) {
        if (this._active) {
            this._notify(false);
            const currentValue = this._target[this._prop];
            const elapsed = date - this._start;
            const remain = this._duration - elapsed;
            this._start = date;
            this._duration = Math.floor(Math.max(remain, cfg.duration));
            this._total += elapsed;
            this._loop = !!cfg.loop;
            this._to = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([
                cfg.to,
                to,
                currentValue,
                cfg.from
            ]);
            this._from = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([
                cfg.from,
                currentValue,
                to
            ]);
        }
    }
    cancel() {
        if (this._active) {
            this.tick(Date.now());
            this._active = false;
            this._notify(false);
        }
    }
    tick(date) {
        const elapsed = date - this._start;
        const duration = this._duration;
        const prop = this._prop;
        const from = this._from;
        const loop = this._loop;
        const to = this._to;
        let factor;
        this._active = from !== to && (loop || elapsed < duration);
        if (!this._active) {
            this._target[prop] = to;
            this._notify(true);
            return;
        }
        if (elapsed < 0) {
            this._target[prop] = from;
            return;
        }
        factor = elapsed / duration % 2;
        factor = loop && factor > 1 ? 2 - factor : factor;
        factor = this._easing(Math.min(1, Math.max(0, factor)));
        this._target[prop] = this._fn(from, to, factor);
    }
    wait() {
        const promises = this._promises || (this._promises = []);
        return new Promise((res, rej)=>{
            promises.push({
                res,
                rej
            });
        });
    }
    _notify(resolved) {
        const method = resolved ? 'res' : 'rej';
        const promises = this._promises || [];
        for(let i = 0; i < promises.length; i++){
            promises[i][method]();
        }
    }
}

class Animations {
    constructor(chart, config){
        this._chart = chart;
        this._properties = new Map();
        this.configure(config);
    }
    configure(config) {
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(config)) {
            return;
        }
        const animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.animation);
        const animatedProps = this._properties;
        Object.getOwnPropertyNames(config).forEach((key)=>{
            const cfg = config[key];
            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(cfg)) {
                return;
            }
            const resolved = {};
            for (const option of animationOptions){
                resolved[option] = cfg[option];
            }
            ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(cfg.properties) && cfg.properties || [
                key
            ]).forEach((prop)=>{
                if (prop === key || !animatedProps.has(prop)) {
                    animatedProps.set(prop, resolved);
                }
            });
        });
    }
 _animateOptions(target, values) {
        const newOptions = values.options;
        const options = resolveTargetOptions(target, newOptions);
        if (!options) {
            return [];
        }
        const animations = this._createAnimations(options, newOptions);
        if (newOptions.$shared) {
            awaitAll(target.options.$animations, newOptions).then(()=>{
                target.options = newOptions;
            }, ()=>{
            });
        }
        return animations;
    }
 _createAnimations(target, values) {
        const animatedProps = this._properties;
        const animations = [];
        const running = target.$animations || (target.$animations = {});
        const props = Object.keys(values);
        const date = Date.now();
        let i;
        for(i = props.length - 1; i >= 0; --i){
            const prop = props[i];
            if (prop.charAt(0) === '$') {
                continue;
            }
            if (prop === 'options') {
                animations.push(...this._animateOptions(target, values));
                continue;
            }
            const value = values[prop];
            let animation = running[prop];
            const cfg = animatedProps.get(prop);
            if (animation) {
                if (cfg && animation.active()) {
                    animation.update(cfg, value, date);
                    continue;
                } else {
                    animation.cancel();
                }
            }
            if (!cfg || !cfg.duration) {
                target[prop] = value;
                continue;
            }
            running[prop] = animation = new Animation(cfg, target, prop, value);
            animations.push(animation);
        }
        return animations;
    }
 update(target, values) {
        if (this._properties.size === 0) {
            Object.assign(target, values);
            return;
        }
        const animations = this._createAnimations(target, values);
        if (animations.length) {
            animator.add(this._chart, animations);
            return true;
        }
    }
}
function awaitAll(animations, properties) {
    const running = [];
    const keys = Object.keys(properties);
    for(let i = 0; i < keys.length; i++){
        const anim = animations[keys[i]];
        if (anim && anim.active()) {
            running.push(anim.wait());
        }
    }
    return Promise.all(running);
}
function resolveTargetOptions(target, newOptions) {
    if (!newOptions) {
        return;
    }
    let options = target.options;
    if (!options) {
        target.options = newOptions;
        return;
    }
    if (options.$shared) {
        target.options = options = Object.assign({}, options, {
            $shared: false,
            $animations: {}
        });
    }
    return options;
}

function scaleClip(scale, allowedOverflow) {
    const opts = scale && scale.options || {};
    const reverse = opts.reverse;
    const min = opts.min === undefined ? allowedOverflow : 0;
    const max = opts.max === undefined ? allowedOverflow : 0;
    return {
        start: reverse ? max : min,
        end: reverse ? min : max
    };
}
function defaultClip(xScale, yScale, allowedOverflow) {
    if (allowedOverflow === false) {
        return false;
    }
    const x = scaleClip(xScale, allowedOverflow);
    const y = scaleClip(yScale, allowedOverflow);
    return {
        top: y.end,
        right: x.end,
        bottom: y.start,
        left: x.start
    };
}
function toClip(value) {
    let t, r, b, l;
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value)) {
        t = value.top;
        r = value.right;
        b = value.bottom;
        l = value.left;
    } else {
        t = r = b = l = value;
    }
    return {
        top: t,
        right: r,
        bottom: b,
        left: l,
        disabled: value === false
    };
}
function getSortedDatasetIndices(chart, filterVisible) {
    const keys = [];
    const metasets = chart._getSortedDatasetMetas(filterVisible);
    let i, ilen;
    for(i = 0, ilen = metasets.length; i < ilen; ++i){
        keys.push(metasets[i].index);
    }
    return keys;
}
function applyStack(stack, value, dsIndex, options = {}) {
    const keys = stack.keys;
    const singleMode = options.mode === 'single';
    let i, ilen, datasetIndex, otherValue;
    if (value === null) {
        return;
    }
    for(i = 0, ilen = keys.length; i < ilen; ++i){
        datasetIndex = +keys[i];
        if (datasetIndex === dsIndex) {
            if (options.all) {
                continue;
            }
            break;
        }
        otherValue = stack.values[datasetIndex];
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(otherValue) && (singleMode || value === 0 || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(value) === (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(otherValue))) {
            value += otherValue;
        }
    }
    return value;
}
function convertObjectDataToArray(data) {
    const keys = Object.keys(data);
    const adata = new Array(keys.length);
    let i, ilen, key;
    for(i = 0, ilen = keys.length; i < ilen; ++i){
        key = keys[i];
        adata[i] = {
            x: key,
            y: data[key]
        };
    }
    return adata;
}
function isStacked(scale, meta) {
    const stacked = scale && scale.options.stacked;
    return stacked || stacked === undefined && meta.stack !== undefined;
}
function getStackKey(indexScale, valueScale, meta) {
    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;
}
function getUserBounds(scale) {
    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();
    return {
        min: minDefined ? min : Number.NEGATIVE_INFINITY,
        max: maxDefined ? max : Number.POSITIVE_INFINITY
    };
}
function getOrCreateStack(stacks, stackKey, indexValue) {
    const subStack = stacks[stackKey] || (stacks[stackKey] = {});
    return subStack[indexValue] || (subStack[indexValue] = {});
}
function getLastIndexInStack(stack, vScale, positive, type) {
    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){
        const value = stack[meta.index];
        if (positive && value > 0 || !positive && value < 0) {
            return meta.index;
        }
    }
    return null;
}
function updateStacks(controller, parsed) {
    const { chart , _cachedMeta: meta  } = controller;
    const stacks = chart._stacks || (chart._stacks = {});
    const { iScale , vScale , index: datasetIndex  } = meta;
    const iAxis = iScale.axis;
    const vAxis = vScale.axis;
    const key = getStackKey(iScale, vScale, meta);
    const ilen = parsed.length;
    let stack;
    for(let i = 0; i < ilen; ++i){
        const item = parsed[i];
        const { [iAxis]: index , [vAxis]: value  } = item;
        const itemStacks = item._stacks || (item._stacks = {});
        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);
        stack[datasetIndex] = value;
        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);
        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);
        const visualValues = stack._visualValues || (stack._visualValues = {});
        visualValues[datasetIndex] = value;
    }
}
function getFirstScaleId(chart, axis) {
    const scales = chart.scales;
    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();
}
function createDatasetContext(parent, index) {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {
        active: false,
        dataset: undefined,
        datasetIndex: index,
        index,
        mode: 'default',
        type: 'dataset'
    });
}
function createDataContext(parent, index, element) {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {
        active: false,
        dataIndex: index,
        parsed: undefined,
        raw: undefined,
        element,
        index,
        mode: 'default',
        type: 'data'
    });
}
function clearStacks(meta, items) {
    const datasetIndex = meta.controller.index;
    const axis = meta.vScale && meta.vScale.axis;
    if (!axis) {
        return;
    }
    items = items || meta._parsed;
    for (const parsed of items){
        const stacks = parsed._stacks;
        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {
            return;
        }
        delete stacks[axis][datasetIndex];
        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {
            delete stacks[axis]._visualValues[datasetIndex];
        }
    }
}
const isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';
const cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);
const createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {
        keys: getSortedDatasetIndices(chart, true),
        values: null
    };
class DatasetController {
 static defaults = {};
 static datasetElementType = null;
 static dataElementType = null;
 constructor(chart, datasetIndex){
        this.chart = chart;
        this._ctx = chart.ctx;
        this.index = datasetIndex;
        this._cachedDataOpts = {};
        this._cachedMeta = this.getMeta();
        this._type = this._cachedMeta.type;
        this.options = undefined;
         this._parsing = false;
        this._data = undefined;
        this._objectData = undefined;
        this._sharedOptions = undefined;
        this._drawStart = undefined;
        this._drawCount = undefined;
        this.enableOptionSharing = false;
        this.supportsDecimation = false;
        this.$context = undefined;
        this._syncList = [];
        this.datasetElementType = new.target.datasetElementType;
        this.dataElementType = new.target.dataElementType;
        this.initialize();
    }
    initialize() {
        const meta = this._cachedMeta;
        this.configure();
        this.linkScales();
        meta._stacked = isStacked(meta.vScale, meta);
        this.addElements();
        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {
            console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options");
        }
    }
    updateIndex(datasetIndex) {
        if (this.index !== datasetIndex) {
            clearStacks(this._cachedMeta);
        }
        this.index = datasetIndex;
    }
    linkScales() {
        const chart = this.chart;
        const meta = this._cachedMeta;
        const dataset = this.getDataset();
        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;
        const xid = meta.xAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.xAxisID, getFirstScaleId(chart, 'x'));
        const yid = meta.yAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.yAxisID, getFirstScaleId(chart, 'y'));
        const rid = meta.rAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.rAxisID, getFirstScaleId(chart, 'r'));
        const indexAxis = meta.indexAxis;
        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);
        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);
        meta.xScale = this.getScaleForId(xid);
        meta.yScale = this.getScaleForId(yid);
        meta.rScale = this.getScaleForId(rid);
        meta.iScale = this.getScaleForId(iid);
        meta.vScale = this.getScaleForId(vid);
    }
    getDataset() {
        return this.chart.data.datasets[this.index];
    }
    getMeta() {
        return this.chart.getDatasetMeta(this.index);
    }
 getScaleForId(scaleID) {
        return this.chart.scales[scaleID];
    }
 _getOtherScale(scale) {
        const meta = this._cachedMeta;
        return scale === meta.iScale ? meta.vScale : meta.iScale;
    }
    reset() {
        this._update('reset');
    }
 _destroy() {
        const meta = this._cachedMeta;
        if (this._data) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.u)(this._data, this);
        }
        if (meta._stacked) {
            clearStacks(meta);
        }
    }
 _dataCheck() {
        const dataset = this.getDataset();
        const data = dataset.data || (dataset.data = []);
        const _data = this._data;
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data)) {
            this._data = convertObjectDataToArray(data);
        } else if (_data !== data) {
            if (_data) {
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.u)(_data, this);
                const meta = this._cachedMeta;
                clearStacks(meta);
                meta._parsed = [];
            }
            if (data && Object.isExtensible(data)) {
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.l)(data, this);
            }
            this._syncList = [];
            this._data = data;
        }
    }
    addElements() {
        const meta = this._cachedMeta;
        this._dataCheck();
        if (this.datasetElementType) {
            meta.dataset = new this.datasetElementType();
        }
    }
    buildOrUpdateElements(resetNewElements) {
        const meta = this._cachedMeta;
        const dataset = this.getDataset();
        let stackChanged = false;
        this._dataCheck();
        const oldStacked = meta._stacked;
        meta._stacked = isStacked(meta.vScale, meta);
        if (meta.stack !== dataset.stack) {
            stackChanged = true;
            clearStacks(meta);
            meta.stack = dataset.stack;
        }
        this._resyncElements(resetNewElements);
        if (stackChanged || oldStacked !== meta._stacked) {
            updateStacks(this, meta._parsed);
        }
    }
 configure() {
        const config = this.chart.config;
        const scopeKeys = config.datasetScopeKeys(this._type);
        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);
        this.options = config.createResolver(scopes, this.getContext());
        this._parsing = this.options.parsing;
        this._cachedDataOpts = {};
    }
 parse(start, count) {
        const { _cachedMeta: meta , _data: data  } = this;
        const { iScale , _stacked  } = meta;
        const iAxis = iScale.axis;
        let sorted = start === 0 && count === data.length ? true : meta._sorted;
        let prev = start > 0 && meta._parsed[start - 1];
        let i, cur, parsed;
        if (this._parsing === false) {
            meta._parsed = data;
            meta._sorted = true;
            parsed = data;
        } else {
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(data[start])) {
                parsed = this.parseArrayData(meta, data, start, count);
            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data[start])) {
                parsed = this.parseObjectData(meta, data, start, count);
            } else {
                parsed = this.parsePrimitiveData(meta, data, start, count);
            }
            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];
            for(i = 0; i < count; ++i){
                meta._parsed[i + start] = cur = parsed[i];
                if (sorted) {
                    if (isNotInOrderComparedToPrev()) {
                        sorted = false;
                    }
                    prev = cur;
                }
            }
            meta._sorted = sorted;
        }
        if (_stacked) {
            updateStacks(this, parsed);
        }
    }
 parsePrimitiveData(meta, data, start, count) {
        const { iScale , vScale  } = meta;
        const iAxis = iScale.axis;
        const vAxis = vScale.axis;
        const labels = iScale.getLabels();
        const singleScale = iScale === vScale;
        const parsed = new Array(count);
        let i, ilen, index;
        for(i = 0, ilen = count; i < ilen; ++i){
            index = i + start;
            parsed[i] = {
                [iAxis]: singleScale || iScale.parse(labels[index], index),
                [vAxis]: vScale.parse(data[index], index)
            };
        }
        return parsed;
    }
 parseArrayData(meta, data, start, count) {
        const { xScale , yScale  } = meta;
        const parsed = new Array(count);
        let i, ilen, index, item;
        for(i = 0, ilen = count; i < ilen; ++i){
            index = i + start;
            item = data[index];
            parsed[i] = {
                x: xScale.parse(item[0], index),
                y: yScale.parse(item[1], index)
            };
        }
        return parsed;
    }
 parseObjectData(meta, data, start, count) {
        const { xScale , yScale  } = meta;
        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;
        const parsed = new Array(count);
        let i, ilen, index, item;
        for(i = 0, ilen = count; i < ilen; ++i){
            index = i + start;
            item = data[index];
            parsed[i] = {
                x: xScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(item, xAxisKey), index),
                y: yScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(item, yAxisKey), index)
            };
        }
        return parsed;
    }
 getParsed(index) {
        return this._cachedMeta._parsed[index];
    }
 getDataElement(index) {
        return this._cachedMeta.data[index];
    }
 applyStack(scale, parsed, mode) {
        const chart = this.chart;
        const meta = this._cachedMeta;
        const value = parsed[scale.axis];
        const stack = {
            keys: getSortedDatasetIndices(chart, true),
            values: parsed._stacks[scale.axis]._visualValues
        };
        return applyStack(stack, value, meta.index, {
            mode
        });
    }
 updateRangeFromParsed(range, scale, parsed, stack) {
        const parsedValue = parsed[scale.axis];
        let value = parsedValue === null ? NaN : parsedValue;
        const values = stack && parsed._stacks[scale.axis];
        if (stack && values) {
            stack.values = values;
            value = applyStack(stack, parsedValue, this._cachedMeta.index);
        }
        range.min = Math.min(range.min, value);
        range.max = Math.max(range.max, value);
    }
 getMinMax(scale, canStack) {
        const meta = this._cachedMeta;
        const _parsed = meta._parsed;
        const sorted = meta._sorted && scale === meta.iScale;
        const ilen = _parsed.length;
        const otherScale = this._getOtherScale(scale);
        const stack = createStack(canStack, meta, this.chart);
        const range = {
            min: Number.POSITIVE_INFINITY,
            max: Number.NEGATIVE_INFINITY
        };
        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);
        let i, parsed;
        function _skip() {
            parsed = _parsed[i];
            const otherValue = parsed[otherScale.axis];
            return !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;
        }
        for(i = 0; i < ilen; ++i){
            if (_skip()) {
                continue;
            }
            this.updateRangeFromParsed(range, scale, parsed, stack);
            if (sorted) {
                break;
            }
        }
        if (sorted) {
            for(i = ilen - 1; i >= 0; --i){
                if (_skip()) {
                    continue;
                }
                this.updateRangeFromParsed(range, scale, parsed, stack);
                break;
            }
        }
        return range;
    }
    getAllParsedValues(scale) {
        const parsed = this._cachedMeta._parsed;
        const values = [];
        let i, ilen, value;
        for(i = 0, ilen = parsed.length; i < ilen; ++i){
            value = parsed[i][scale.axis];
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value)) {
                values.push(value);
            }
        }
        return values;
    }
 getMaxOverflow() {
        return false;
    }
 getLabelAndValue(index) {
        const meta = this._cachedMeta;
        const iScale = meta.iScale;
        const vScale = meta.vScale;
        const parsed = this.getParsed(index);
        return {
            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',
            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''
        };
    }
 _update(mode) {
        const meta = this._cachedMeta;
        this.update(mode || 'default');
        meta._clip = toClip((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));
    }
 update(mode) {}
    draw() {
        const ctx = this._ctx;
        const chart = this.chart;
        const meta = this._cachedMeta;
        const elements = meta.data || [];
        const area = chart.chartArea;
        const active = [];
        const start = this._drawStart || 0;
        const count = this._drawCount || elements.length - start;
        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;
        let i;
        if (meta.dataset) {
            meta.dataset.draw(ctx, area, start, count);
        }
        for(i = start; i < start + count; ++i){
            const element = elements[i];
            if (element.hidden) {
                continue;
            }
            if (element.active && drawActiveElementsOnTop) {
                active.push(element);
            } else {
                element.draw(ctx, area);
            }
        }
        for(i = 0; i < active.length; ++i){
            active[i].draw(ctx, area);
        }
    }
 getStyle(index, active) {
        const mode = active ? 'active' : 'default';
        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);
    }
 getContext(index, active, mode) {
        const dataset = this.getDataset();
        let context;
        if (index >= 0 && index < this._cachedMeta.data.length) {
            const element = this._cachedMeta.data[index];
            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));
            context.parsed = this.getParsed(index);
            context.raw = dataset.data[index];
            context.index = context.dataIndex = index;
        } else {
            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));
            context.dataset = dataset;
            context.index = context.datasetIndex = this.index;
        }
        context.active = !!active;
        context.mode = mode;
        return context;
    }
 resolveDatasetElementOptions(mode) {
        return this._resolveElementOptions(this.datasetElementType.id, mode);
    }
 resolveDataElementOptions(index, mode) {
        return this._resolveElementOptions(this.dataElementType.id, mode, index);
    }
 _resolveElementOptions(elementType, mode = 'default', index) {
        const active = mode === 'active';
        const cache = this._cachedDataOpts;
        const cacheKey = elementType + '-' + mode;
        const cached = cache[cacheKey];
        const sharing = this.enableOptionSharing && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(index);
        if (cached) {
            return cloneIfNotShared(cached, sharing);
        }
        const config = this.chart.config;
        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);
        const prefixes = active ? [
            `${elementType}Hover`,
            'hover',
            elementType,
            ''
        ] : [
            elementType,
            ''
        ];
        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);
        const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.elements[elementType]);
        const context = ()=>this.getContext(index, active, mode);
        const values = config.resolveNamedOptions(scopes, names, context, prefixes);
        if (values.$shared) {
            values.$shared = sharing;
            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));
        }
        return values;
    }
 _resolveAnimations(index, transition, active) {
        const chart = this.chart;
        const cache = this._cachedDataOpts;
        const cacheKey = `animation-${transition}`;
        const cached = cache[cacheKey];
        if (cached) {
            return cached;
        }
        let options;
        if (chart.options.animation !== false) {
            const config = this.chart.config;
            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);
            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);
            options = config.createResolver(scopes, this.getContext(index, active, transition));
        }
        const animations = new Animations(chart, options && options.animations);
        if (options && options._cacheable) {
            cache[cacheKey] = Object.freeze(animations);
        }
        return animations;
    }
 getSharedOptions(options) {
        if (!options.$shared) {
            return;
        }
        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));
    }
 includeOptions(mode, sharedOptions) {
        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;
    }
 _getSharedOptions(start, mode) {
        const firstOpts = this.resolveDataElementOptions(start, mode);
        const previouslySharedOptions = this._sharedOptions;
        const sharedOptions = this.getSharedOptions(firstOpts);
        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;
        this.updateSharedOptions(sharedOptions, mode, firstOpts);
        return {
            sharedOptions,
            includeOptions
        };
    }
 updateElement(element, index, properties, mode) {
        if (isDirectUpdateMode(mode)) {
            Object.assign(element, properties);
        } else {
            this._resolveAnimations(index, mode).update(element, properties);
        }
    }
 updateSharedOptions(sharedOptions, mode, newOptions) {
        if (sharedOptions && !isDirectUpdateMode(mode)) {
            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);
        }
    }
 _setStyle(element, index, mode, active) {
        element.active = active;
        const options = this.getStyle(index, active);
        this._resolveAnimations(index, mode, active).update(element, {
            options: !active && this.getSharedOptions(options) || options
        });
    }
    removeHoverStyle(element, datasetIndex, index) {
        this._setStyle(element, index, 'active', false);
    }
    setHoverStyle(element, datasetIndex, index) {
        this._setStyle(element, index, 'active', true);
    }
 _removeDatasetHoverStyle() {
        const element = this._cachedMeta.dataset;
        if (element) {
            this._setStyle(element, undefined, 'active', false);
        }
    }
 _setDatasetHoverStyle() {
        const element = this._cachedMeta.dataset;
        if (element) {
            this._setStyle(element, undefined, 'active', true);
        }
    }
 _resyncElements(resetNewElements) {
        const data = this._data;
        const elements = this._cachedMeta.data;
        for (const [method, arg1, arg2] of this._syncList){
            this[method](arg1, arg2);
        }
        this._syncList = [];
        const numMeta = elements.length;
        const numData = data.length;
        const count = Math.min(numData, numMeta);
        if (count) {
            this.parse(0, count);
        }
        if (numData > numMeta) {
            this._insertElements(numMeta, numData - numMeta, resetNewElements);
        } else if (numData < numMeta) {
            this._removeElements(numData, numMeta - numData);
        }
    }
 _insertElements(start, count, resetNewElements = true) {
        const meta = this._cachedMeta;
        const data = meta.data;
        const end = start + count;
        let i;
        const move = (arr)=>{
            arr.length += count;
            for(i = arr.length - 1; i >= end; i--){
                arr[i] = arr[i - count];
            }
        };
        move(data);
        for(i = start; i < end; ++i){
            data[i] = new this.dataElementType();
        }
        if (this._parsing) {
            move(meta._parsed);
        }
        this.parse(start, count);
        if (resetNewElements) {
            this.updateElements(data, start, count, 'reset');
        }
    }
    updateElements(element, start, count, mode) {}
 _removeElements(start, count) {
        const meta = this._cachedMeta;
        if (this._parsing) {
            const removed = meta._parsed.splice(start, count);
            if (meta._stacked) {
                clearStacks(meta, removed);
            }
        }
        meta.data.splice(start, count);
    }
 _sync(args) {
        if (this._parsing) {
            this._syncList.push(args);
        } else {
            const [method, arg1, arg2] = args;
            this[method](arg1, arg2);
        }
        this.chart._dataChanges.push([
            this.index,
            ...args
        ]);
    }
    _onDataPush() {
        const count = arguments.length;
        this._sync([
            '_insertElements',
            this.getDataset().data.length - count,
            count
        ]);
    }
    _onDataPop() {
        this._sync([
            '_removeElements',
            this._cachedMeta.data.length - 1,
            1
        ]);
    }
    _onDataShift() {
        this._sync([
            '_removeElements',
            0,
            1
        ]);
    }
    _onDataSplice(start, count) {
        if (count) {
            this._sync([
                '_removeElements',
                start,
                count
            ]);
        }
        const newCount = arguments.length - 2;
        if (newCount) {
            this._sync([
                '_insertElements',
                start,
                newCount
            ]);
        }
    }
    _onDataUnshift() {
        this._sync([
            '_insertElements',
            0,
            arguments.length
        ]);
    }
}

function getAllScaleValues(scale, type) {
    if (!scale._cache.$bar) {
        const visibleMetas = scale.getMatchingVisibleMetas(type);
        let values = [];
        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){
            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));
        }
        scale._cache.$bar = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__._)(values.sort((a, b)=>a - b));
    }
    return scale._cache.$bar;
}
 function computeMinSampleSize(meta) {
    const scale = meta.iScale;
    const values = getAllScaleValues(scale, meta.type);
    let min = scale._length;
    let i, ilen, curr, prev;
    const updateMinAndPrev = ()=>{
        if (curr === 32767 || curr === -32768) {
            return;
        }
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(prev)) {
            min = Math.min(min, Math.abs(curr - prev) || min);
        }
        prev = curr;
    };
    for(i = 0, ilen = values.length; i < ilen; ++i){
        curr = scale.getPixelForValue(values[i]);
        updateMinAndPrev();
    }
    prev = undefined;
    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){
        curr = scale.getPixelForTick(i);
        updateMinAndPrev();
    }
    return min;
}
 function computeFitCategoryTraits(index, ruler, options, stackCount) {
    const thickness = options.barThickness;
    let size, ratio;
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(thickness)) {
        size = ruler.min * options.categoryPercentage;
        ratio = options.barPercentage;
    } else {
        size = thickness * stackCount;
        ratio = 1;
    }
    return {
        chunk: size / stackCount,
        ratio,
        start: ruler.pixels[index] - size / 2
    };
}
 function computeFlexCategoryTraits(index, ruler, options, stackCount) {
    const pixels = ruler.pixels;
    const curr = pixels[index];
    let prev = index > 0 ? pixels[index - 1] : null;
    let next = index < pixels.length - 1 ? pixels[index + 1] : null;
    const percent = options.categoryPercentage;
    if (prev === null) {
        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);
    }
    if (next === null) {
        next = curr + curr - prev;
    }
    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;
    const size = Math.abs(next - prev) / 2 * percent;
    return {
        chunk: size / stackCount,
        ratio: options.barPercentage,
        start
    };
}
function parseFloatBar(entry, item, vScale, i) {
    const startValue = vScale.parse(entry[0], i);
    const endValue = vScale.parse(entry[1], i);
    const min = Math.min(startValue, endValue);
    const max = Math.max(startValue, endValue);
    let barStart = min;
    let barEnd = max;
    if (Math.abs(min) > Math.abs(max)) {
        barStart = max;
        barEnd = min;
    }
    item[vScale.axis] = barEnd;
    item._custom = {
        barStart,
        barEnd,
        start: startValue,
        end: endValue,
        min,
        max
    };
}
function parseValue(entry, item, vScale, i) {
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(entry)) {
        parseFloatBar(entry, item, vScale, i);
    } else {
        item[vScale.axis] = vScale.parse(entry, i);
    }
    return item;
}
function parseArrayOrPrimitive(meta, data, start, count) {
    const iScale = meta.iScale;
    const vScale = meta.vScale;
    const labels = iScale.getLabels();
    const singleScale = iScale === vScale;
    const parsed = [];
    let i, ilen, item, entry;
    for(i = start, ilen = start + count; i < ilen; ++i){
        entry = data[i];
        item = {};
        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);
        parsed.push(parseValue(entry, item, vScale, i));
    }
    return parsed;
}
function isFloatBar(custom) {
    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;
}
function barSign(size, vScale, actualBase) {
    if (size !== 0) {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(size);
    }
    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);
}
function borderProps(properties) {
    let reverse, start, end, top, bottom;
    if (properties.horizontal) {
        reverse = properties.base > properties.x;
        start = 'left';
        end = 'right';
    } else {
        reverse = properties.base < properties.y;
        start = 'bottom';
        end = 'top';
    }
    if (reverse) {
        top = 'end';
        bottom = 'start';
    } else {
        top = 'start';
        bottom = 'end';
    }
    return {
        start,
        end,
        reverse,
        top,
        bottom
    };
}
function setBorderSkipped(properties, options, stack, index) {
    let edge = options.borderSkipped;
    const res = {};
    if (!edge) {
        properties.borderSkipped = res;
        return;
    }
    if (edge === true) {
        properties.borderSkipped = {
            top: true,
            right: true,
            bottom: true,
            left: true
        };
        return;
    }
    const { start , end , reverse , top , bottom  } = borderProps(properties);
    if (edge === 'middle' && stack) {
        properties.enableBorderRadius = true;
        if ((stack._top || 0) === index) {
            edge = top;
        } else if ((stack._bottom || 0) === index) {
            edge = bottom;
        } else {
            res[parseEdge(bottom, start, end, reverse)] = true;
            edge = top;
        }
    }
    res[parseEdge(edge, start, end, reverse)] = true;
    properties.borderSkipped = res;
}
function parseEdge(edge, a, b, reverse) {
    if (reverse) {
        edge = swap(edge, a, b);
        edge = startEnd(edge, b, a);
    } else {
        edge = startEnd(edge, a, b);
    }
    return edge;
}
function swap(orig, v1, v2) {
    return orig === v1 ? v2 : orig === v2 ? v1 : orig;
}
function startEnd(v, start, end) {
    return v === 'start' ? start : v === 'end' ? end : v;
}
function setInflateAmount(properties, { inflateAmount  }, ratio) {
    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;
}
class BarController extends DatasetController {
    static id = 'bar';
 static defaults = {
        datasetElementType: false,
        dataElementType: 'bar',
        categoryPercentage: 0.8,
        barPercentage: 0.9,
        grouped: true,
        animations: {
            numbers: {
                type: 'number',
                properties: [
                    'x',
                    'y',
                    'base',
                    'width',
                    'height'
                ]
            }
        }
    };
 static overrides = {
        scales: {
            _index_: {
                type: 'category',
                offset: true,
                grid: {
                    offset: true
                }
            },
            _value_: {
                type: 'linear',
                beginAtZero: true
            }
        }
    };
 parsePrimitiveData(meta, data, start, count) {
        return parseArrayOrPrimitive(meta, data, start, count);
    }
 parseArrayData(meta, data, start, count) {
        return parseArrayOrPrimitive(meta, data, start, count);
    }
 parseObjectData(meta, data, start, count) {
        const { iScale , vScale  } = meta;
        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;
        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;
        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;
        const parsed = [];
        let i, ilen, item, obj;
        for(i = start, ilen = start + count; i < ilen; ++i){
            obj = data[i];
            item = {};
            item[iScale.axis] = iScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, iAxisKey), i);
            parsed.push(parseValue((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, vAxisKey), item, vScale, i));
        }
        return parsed;
    }
 updateRangeFromParsed(range, scale, parsed, stack) {
        super.updateRangeFromParsed(range, scale, parsed, stack);
        const custom = parsed._custom;
        if (custom && scale === this._cachedMeta.vScale) {
            range.min = Math.min(range.min, custom.min);
            range.max = Math.max(range.max, custom.max);
        }
    }
 getMaxOverflow() {
        return 0;
    }
 getLabelAndValue(index) {
        const meta = this._cachedMeta;
        const { iScale , vScale  } = meta;
        const parsed = this.getParsed(index);
        const custom = parsed._custom;
        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);
        return {
            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),
            value
        };
    }
    initialize() {
        this.enableOptionSharing = true;
        super.initialize();
        const meta = this._cachedMeta;
        meta.stack = this.getDataset().stack;
    }
    update(mode) {
        const meta = this._cachedMeta;
        this.updateElements(meta.data, 0, meta.data.length, mode);
    }
    updateElements(bars, start, count, mode) {
        const reset = mode === 'reset';
        const { index , _cachedMeta: { vScale  }  } = this;
        const base = vScale.getBasePixel();
        const horizontal = vScale.isHorizontal();
        const ruler = this._getRuler();
        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);
        for(let i = start; i < start + count; i++){
            const parsed = this.getParsed(i);
            const vpixels = reset || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vScale.axis]) ? {
                base,
                head: base
            } : this._calculateBarValuePixels(i);
            const ipixels = this._calculateBarIndexPixels(i, ruler);
            const stack = (parsed._stacks || {})[vScale.axis];
            const properties = {
                horizontal,
                base: vpixels.base,
                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,
                x: horizontal ? vpixels.head : ipixels.center,
                y: horizontal ? ipixels.center : vpixels.head,
                height: horizontal ? ipixels.size : Math.abs(vpixels.size),
                width: horizontal ? Math.abs(vpixels.size) : ipixels.size
            };
            if (includeOptions) {
                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);
            }
            const options = properties.options || bars[i].options;
            setBorderSkipped(properties, options, stack, index);
            setInflateAmount(properties, options, ruler.ratio);
            this.updateElement(bars[i], i, properties, mode);
        }
    }
 _getStacks(last, dataIndex) {
        const { iScale  } = this._cachedMeta;
        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);
        const stacked = iScale.options.stacked;
        const stacks = [];
        const skipNull = (meta)=>{
            const parsed = meta.controller.getParsed(dataIndex);
            const val = parsed && parsed[meta.vScale.axis];
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(val) || isNaN(val)) {
                return true;
            }
        };
        for (const meta of metasets){
            if (dataIndex !== undefined && skipNull(meta)) {
                continue;
            }
            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {
                stacks.push(meta.stack);
            }
            if (meta.index === last) {
                break;
            }
        }
        if (!stacks.length) {
            stacks.push(undefined);
        }
        return stacks;
    }
 _getStackCount(index) {
        return this._getStacks(undefined, index).length;
    }
 _getStackIndex(datasetIndex, name, dataIndex) {
        const stacks = this._getStacks(datasetIndex, dataIndex);
        const index = name !== undefined ? stacks.indexOf(name) : -1;
        return index === -1 ? stacks.length - 1 : index;
    }
 _getRuler() {
        const opts = this.options;
        const meta = this._cachedMeta;
        const iScale = meta.iScale;
        const pixels = [];
        let i, ilen;
        for(i = 0, ilen = meta.data.length; i < ilen; ++i){
            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));
        }
        const barThickness = opts.barThickness;
        const min = barThickness || computeMinSampleSize(meta);
        return {
            min,
            pixels,
            start: iScale._startPixel,
            end: iScale._endPixel,
            stackCount: this._getStackCount(),
            scale: iScale,
            grouped: opts.grouped,
            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage
        };
    }
 _calculateBarValuePixels(index) {
        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;
        const actualBase = baseValue || 0;
        const parsed = this.getParsed(index);
        const custom = parsed._custom;
        const floating = isFloatBar(custom);
        let value = parsed[vScale.axis];
        let start = 0;
        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;
        let head, size;
        if (length !== value) {
            start = length - value;
            length = value;
        }
        if (floating) {
            value = custom.barStart;
            length = custom.barEnd - custom.barStart;
            if (value !== 0 && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(value) !== (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(custom.barEnd)) {
                start = 0;
            }
            start += value;
        }
        const startValue = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(baseValue) && !floating ? baseValue : start;
        let base = vScale.getPixelForValue(startValue);
        if (this.chart.getDataVisibility(index)) {
            head = vScale.getPixelForValue(start + length);
        } else {
            head = base;
        }
        size = head - base;
        if (Math.abs(size) < minBarLength) {
            size = barSign(size, vScale, actualBase) * minBarLength;
            if (value === actualBase) {
                base -= size / 2;
            }
            const startPixel = vScale.getPixelForDecimal(0);
            const endPixel = vScale.getPixelForDecimal(1);
            const min = Math.min(startPixel, endPixel);
            const max = Math.max(startPixel, endPixel);
            base = Math.max(Math.min(base, max), min);
            head = base + size;
            if (_stacked && !floating) {
                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);
            }
        }
        if (base === vScale.getPixelForValue(actualBase)) {
            const halfGrid = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(size) * vScale.getLineWidthForValue(actualBase) / 2;
            base += halfGrid;
            size -= halfGrid;
        }
        return {
            size,
            base,
            head,
            center: head + size / 2
        };
    }
 _calculateBarIndexPixels(index, ruler) {
        const scale = ruler.scale;
        const options = this.options;
        const skipNull = options.skipNull;
        const maxBarThickness = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.maxBarThickness, Infinity);
        let center, size;
        if (ruler.grouped) {
            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;
            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);
            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);
            center = range.start + range.chunk * stackIndex + range.chunk / 2;
            size = Math.min(maxBarThickness, range.chunk * range.ratio);
        } else {
            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);
            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);
        }
        return {
            base: center - size / 2,
            head: center + size / 2,
            center,
            size
        };
    }
    draw() {
        const meta = this._cachedMeta;
        const vScale = meta.vScale;
        const rects = meta.data;
        const ilen = rects.length;
        let i = 0;
        for(; i < ilen; ++i){
            if (this.getParsed(i)[vScale.axis] !== null) {
                rects[i].draw(this._ctx);
            }
        }
    }
}

class BubbleController extends DatasetController {
    static id = 'bubble';
 static defaults = {
        datasetElementType: false,
        dataElementType: 'point',
        animations: {
            numbers: {
                type: 'number',
                properties: [
                    'x',
                    'y',
                    'borderWidth',
                    'radius'
                ]
            }
        }
    };
 static overrides = {
        scales: {
            x: {
                type: 'linear'
            },
            y: {
                type: 'linear'
            }
        }
    };
    initialize() {
        this.enableOptionSharing = true;
        super.initialize();
    }
 parsePrimitiveData(meta, data, start, count) {
        const parsed = super.parsePrimitiveData(meta, data, start, count);
        for(let i = 0; i < parsed.length; i++){
            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;
        }
        return parsed;
    }
 parseArrayData(meta, data, start, count) {
        const parsed = super.parseArrayData(meta, data, start, count);
        for(let i = 0; i < parsed.length; i++){
            const item = data[start + i];
            parsed[i]._custom = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(item[2], this.resolveDataElementOptions(i + start).radius);
        }
        return parsed;
    }
 parseObjectData(meta, data, start, count) {
        const parsed = super.parseObjectData(meta, data, start, count);
        for(let i = 0; i < parsed.length; i++){
            const item = data[start + i];
            parsed[i]._custom = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);
        }
        return parsed;
    }
 getMaxOverflow() {
        const data = this._cachedMeta.data;
        let max = 0;
        for(let i = data.length - 1; i >= 0; --i){
            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);
        }
        return max > 0 && max;
    }
 getLabelAndValue(index) {
        const meta = this._cachedMeta;
        const labels = this.chart.data.labels || [];
        const { xScale , yScale  } = meta;
        const parsed = this.getParsed(index);
        const x = xScale.getLabelForValue(parsed.x);
        const y = yScale.getLabelForValue(parsed.y);
        const r = parsed._custom;
        return {
            label: labels[index] || '',
            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'
        };
    }
    update(mode) {
        const points = this._cachedMeta.data;
        this.updateElements(points, 0, points.length, mode);
    }
    updateElements(points, start, count, mode) {
        const reset = mode === 'reset';
        const { iScale , vScale  } = this._cachedMeta;
        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);
        const iAxis = iScale.axis;
        const vAxis = vScale.axis;
        for(let i = start; i < start + count; i++){
            const point = points[i];
            const parsed = !reset && this.getParsed(i);
            const properties = {};
            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);
            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);
            properties.skip = isNaN(iPixel) || isNaN(vPixel);
            if (includeOptions) {
                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);
                if (reset) {
                    properties.options.radius = 0;
                }
            }
            this.updateElement(point, i, properties, mode);
        }
    }
 resolveDataElementOptions(index, mode) {
        const parsed = this.getParsed(index);
        let values = super.resolveDataElementOptions(index, mode);
        if (values.$shared) {
            values = Object.assign({}, values, {
                $shared: false
            });
        }
        const radius = values.radius;
        if (mode !== 'active') {
            values.radius = 0;
        }
        values.radius += (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(parsed && parsed._custom, radius);
        return values;
    }
}

function getRatioAndOffset(rotation, circumference, cutout) {
    let ratioX = 1;
    let ratioY = 1;
    let offsetX = 0;
    let offsetY = 0;
    if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T) {
        const startAngle = rotation;
        const endAngle = startAngle + circumference;
        const startX = Math.cos(startAngle);
        const startY = Math.sin(startAngle);
        const endX = Math.cos(endAngle);
        const endY = Math.sin(endAngle);
        const calcMax = (angle, a, b)=>(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);
        const calcMin = (angle, a, b)=>(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);
        const maxX = calcMax(0, startX, endX);
        const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startY, endY);
        const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P, startX, endX);
        const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startY, endY);
        ratioX = (maxX - minX) / 2;
        ratioY = (maxY - minY) / 2;
        offsetX = -(maxX + minX) / 2;
        offsetY = -(maxY + minY) / 2;
    }
    return {
        ratioX,
        ratioY,
        offsetX,
        offsetY
    };
}
class DoughnutController extends DatasetController {
    static id = 'doughnut';
 static defaults = {
        datasetElementType: false,
        dataElementType: 'arc',
        animation: {
            animateRotate: true,
            animateScale: false
        },
        animations: {
            numbers: {
                type: 'number',
                properties: [
                    'circumference',
                    'endAngle',
                    'innerRadius',
                    'outerRadius',
                    'startAngle',
                    'x',
                    'y',
                    'offset',
                    'borderWidth',
                    'spacing'
                ]
            }
        },
        cutout: '50%',
        rotation: 0,
        circumference: 360,
        radius: '100%',
        spacing: 0,
        indexAxis: 'r'
    };
    static descriptors = {
        _scriptable: (name)=>name !== 'spacing',
        _indexable: (name)=>name !== 'spacing'
    };
 static overrides = {
        aspectRatio: 1,
        plugins: {
            legend: {
                labels: {
                    generateLabels (chart) {
                        const data = chart.data;
                        if (data.labels.length && data.datasets.length) {
                            const { labels: { pointStyle , color  }  } = chart.legend.options;
                            return data.labels.map((label, i)=>{
                                const meta = chart.getDatasetMeta(0);
                                const style = meta.controller.getStyle(i);
                                return {
                                    text: label,
                                    fillStyle: style.backgroundColor,
                                    strokeStyle: style.borderColor,
                                    fontColor: color,
                                    lineWidth: style.borderWidth,
                                    pointStyle: pointStyle,
                                    hidden: !chart.getDataVisibility(i),
                                    index: i
                                };
                            });
                        }
                        return [];
                    }
                },
                onClick (e, legendItem, legend) {
                    legend.chart.toggleDataVisibility(legendItem.index);
                    legend.chart.update();
                }
            }
        }
    };
    constructor(chart, datasetIndex){
        super(chart, datasetIndex);
        this.enableOptionSharing = true;
        this.innerRadius = undefined;
        this.outerRadius = undefined;
        this.offsetX = undefined;
        this.offsetY = undefined;
    }
    linkScales() {}
 parse(start, count) {
        const data = this.getDataset().data;
        const meta = this._cachedMeta;
        if (this._parsing === false) {
            meta._parsed = data;
        } else {
            let getter = (i)=>+data[i];
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data[start])) {
                const { key ='value'  } = this._parsing;
                getter = (i)=>+(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(data[i], key);
            }
            let i, ilen;
            for(i = start, ilen = start + count; i < ilen; ++i){
                meta._parsed[i] = getter(i);
            }
        }
    }
 _getRotation() {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.rotation - 90);
    }
 _getCircumference() {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.circumference);
    }
 _getRotationExtents() {
        let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;
        let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;
        for(let i = 0; i < this.chart.data.datasets.length; ++i){
            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {
                const controller = this.chart.getDatasetMeta(i).controller;
                const rotation = controller._getRotation();
                const circumference = controller._getCircumference();
                min = Math.min(min, rotation);
                max = Math.max(max, rotation + circumference);
            }
        }
        return {
            rotation: min,
            circumference: max - min
        };
    }
 update(mode) {
        const chart = this.chart;
        const { chartArea  } = chart;
        const meta = this._cachedMeta;
        const arcs = meta.data;
        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;
        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);
        const cutout = Math.min((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.m)(this.options.cutout, maxSize), 1);
        const chartWeight = this._getRingWeight(this.index);
        const { circumference , rotation  } = this._getRotationExtents();
        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);
        const maxWidth = (chartArea.width - spacing) / ratioX;
        const maxHeight = (chartArea.height - spacing) / ratioY;
        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);
        const outerRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.n)(this.options.radius, maxRadius);
        const innerRadius = Math.max(outerRadius * cutout, 0);
        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();
        this.offsetX = offsetX * outerRadius;
        this.offsetY = offsetY * outerRadius;
        meta.total = this.calculateTotal();
        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);
        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);
        this.updateElements(arcs, 0, arcs.length, mode);
    }
 _circumference(i, reset) {
        const opts = this.options;
        const meta = this._cachedMeta;
        const circumference = this._getCircumference();
        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {
            return 0;
        }
        return this.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);
    }
    updateElements(arcs, start, count, mode) {
        const reset = mode === 'reset';
        const chart = this.chart;
        const chartArea = chart.chartArea;
        const opts = chart.options;
        const animationOpts = opts.animation;
        const centerX = (chartArea.left + chartArea.right) / 2;
        const centerY = (chartArea.top + chartArea.bottom) / 2;
        const animateScale = reset && animationOpts.animateScale;
        const innerRadius = animateScale ? 0 : this.innerRadius;
        const outerRadius = animateScale ? 0 : this.outerRadius;
        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);
        let startAngle = this._getRotation();
        let i;
        for(i = 0; i < start; ++i){
            startAngle += this._circumference(i, reset);
        }
        for(i = start; i < start + count; ++i){
            const circumference = this._circumference(i, reset);
            const arc = arcs[i];
            const properties = {
                x: centerX + this.offsetX,
                y: centerY + this.offsetY,
                startAngle,
                endAngle: startAngle + circumference,
                circumference,
                outerRadius,
                innerRadius
            };
            if (includeOptions) {
                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);
            }
            startAngle += circumference;
            this.updateElement(arc, i, properties, mode);
        }
    }
    calculateTotal() {
        const meta = this._cachedMeta;
        const metaData = meta.data;
        let total = 0;
        let i;
        for(i = 0; i < metaData.length; i++){
            const value = meta._parsed[i];
            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {
                total += Math.abs(value);
            }
        }
        return total;
    }
    calculateCircumference(value) {
        const total = this._cachedMeta.total;
        if (total > 0 && !isNaN(value)) {
            return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T * (Math.abs(value) / total);
        }
        return 0;
    }
    getLabelAndValue(index) {
        const meta = this._cachedMeta;
        const chart = this.chart;
        const labels = chart.data.labels || [];
        const value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(meta._parsed[index], chart.options.locale);
        return {
            label: labels[index] || '',
            value
        };
    }
    getMaxBorderWidth(arcs) {
        let max = 0;
        const chart = this.chart;
        let i, ilen, meta, controller, options;
        if (!arcs) {
            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){
                if (chart.isDatasetVisible(i)) {
                    meta = chart.getDatasetMeta(i);
                    arcs = meta.data;
                    controller = meta.controller;
                    break;
                }
            }
        }
        if (!arcs) {
            return 0;
        }
        for(i = 0, ilen = arcs.length; i < ilen; ++i){
            options = controller.resolveDataElementOptions(i);
            if (options.borderAlign !== 'inner') {
                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);
            }
        }
        return max;
    }
    getMaxOffset(arcs) {
        let max = 0;
        for(let i = 0, ilen = arcs.length; i < ilen; ++i){
            const options = this.resolveDataElementOptions(i);
            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);
        }
        return max;
    }
 _getRingWeightOffset(datasetIndex) {
        let ringWeightOffset = 0;
        for(let i = 0; i < datasetIndex; ++i){
            if (this.chart.isDatasetVisible(i)) {
                ringWeightOffset += this._getRingWeight(i);
            }
        }
        return ringWeightOffset;
    }
 _getRingWeight(datasetIndex) {
        return Math.max((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(this.chart.data.datasets[datasetIndex].weight, 1), 0);
    }
 _getVisibleDatasetWeightTotal() {
        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;
    }
}

class LineController extends DatasetController {
    static id = 'line';
 static defaults = {
        datasetElementType: 'line',
        dataElementType: 'point',
        showLine: true,
        spanGaps: false
    };
 static overrides = {
        scales: {
            _index_: {
                type: 'category'
            },
            _value_: {
                type: 'linear'
            }
        }
    };
    initialize() {
        this.enableOptionSharing = true;
        this.supportsDecimation = true;
        super.initialize();
    }
    update(mode) {
        const meta = this._cachedMeta;
        const { dataset: line , data: points = [] , _dataset  } = meta;
        const animationsDisabled = this.chart._animationsDisabled;
        let { start , count  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(meta, points, animationsDisabled);
        this._drawStart = start;
        this._drawCount = count;
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(meta)) {
            start = 0;
            count = points.length;
        }
        line._chart = this.chart;
        line._datasetIndex = this.index;
        line._decimated = !!_dataset._decimated;
        line.points = points;
        const options = this.resolveDatasetElementOptions(mode);
        if (!this.options.showLine) {
            options.borderWidth = 0;
        }
        options.segment = this.options.segment;
        this.updateElement(line, undefined, {
            animated: !animationsDisabled,
            options
        }, mode);
        this.updateElements(points, start, count, mode);
    }
    updateElements(points, start, count, mode) {
        const reset = mode === 'reset';
        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;
        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);
        const iAxis = iScale.axis;
        const vAxis = vScale.axis;
        const { spanGaps , segment  } = this.options;
        const maxGapLength = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;
        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';
        const end = start + count;
        const pointsCount = points.length;
        let prevParsed = start > 0 && this.getParsed(start - 1);
        for(let i = 0; i < pointsCount; ++i){
            const point = points[i];
            const properties = directUpdate ? point : {};
            if (i < start || i >= end) {
                properties.skip = true;
                continue;
            }
            const parsed = this.getParsed(i);
            const nullData = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vAxis]);
            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);
            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);
            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;
            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;
            if (segment) {
                properties.parsed = parsed;
                properties.raw = _dataset.data[i];
            }
            if (includeOptions) {
                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);
            }
            if (!directUpdate) {
                this.updateElement(point, i, properties, mode);
            }
            prevParsed = parsed;
        }
    }
 getMaxOverflow() {
        const meta = this._cachedMeta;
        const dataset = meta.dataset;
        const border = dataset.options && dataset.options.borderWidth || 0;
        const data = meta.data || [];
        if (!data.length) {
            return border;
        }
        const firstPoint = data[0].size(this.resolveDataElementOptions(0));
        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));
        return Math.max(border, firstPoint, lastPoint) / 2;
    }
    draw() {
        const meta = this._cachedMeta;
        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);
        super.draw();
    }
}

class PolarAreaController extends DatasetController {
    static id = 'polarArea';
 static defaults = {
        dataElementType: 'arc',
        animation: {
            animateRotate: true,
            animateScale: true
        },
        animations: {
            numbers: {
                type: 'number',
                properties: [
                    'x',
                    'y',
                    'startAngle',
                    'endAngle',
                    'innerRadius',
                    'outerRadius'
                ]
            }
        },
        indexAxis: 'r',
        startAngle: 0
    };
 static overrides = {
        aspectRatio: 1,
        plugins: {
            legend: {
                labels: {
                    generateLabels (chart) {
                        const data = chart.data;
                        if (data.labels.length && data.datasets.length) {
                            const { labels: { pointStyle , color  }  } = chart.legend.options;
                            return data.labels.map((label, i)=>{
                                const meta = chart.getDatasetMeta(0);
                                const style = meta.controller.getStyle(i);
                                return {
                                    text: label,
                                    fillStyle: style.backgroundColor,
                                    strokeStyle: style.borderColor,
                                    fontColor: color,
                                    lineWidth: style.borderWidth,
                                    pointStyle: pointStyle,
                                    hidden: !chart.getDataVisibility(i),
                                    index: i
                                };
                            });
                        }
                        return [];
                    }
                },
                onClick (e, legendItem, legend) {
                    legend.chart.toggleDataVisibility(legendItem.index);
                    legend.chart.update();
                }
            }
        },
        scales: {
            r: {
                type: 'radialLinear',
                angleLines: {
                    display: false
                },
                beginAtZero: true,
                grid: {
                    circular: true
                },
                pointLabels: {
                    display: false
                },
                startAngle: 0
            }
        }
    };
    constructor(chart, datasetIndex){
        super(chart, datasetIndex);
        this.innerRadius = undefined;
        this.outerRadius = undefined;
    }
    getLabelAndValue(index) {
        const meta = this._cachedMeta;
        const chart = this.chart;
        const labels = chart.data.labels || [];
        const value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(meta._parsed[index].r, chart.options.locale);
        return {
            label: labels[index] || '',
            value
        };
    }
    parseObjectData(meta, data, start, count) {
        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.y.bind(this)(meta, data, start, count);
    }
    update(mode) {
        const arcs = this._cachedMeta.data;
        this._updateRadius();
        this.updateElements(arcs, 0, arcs.length, mode);
    }
 getMinMax() {
        const meta = this._cachedMeta;
        const range = {
            min: Number.POSITIVE_INFINITY,
            max: Number.NEGATIVE_INFINITY
        };
        meta.data.forEach((element, index)=>{
            const parsed = this.getParsed(index).r;
            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {
                if (parsed < range.min) {
                    range.min = parsed;
                }
                if (parsed > range.max) {
                    range.max = parsed;
                }
            }
        });
        return range;
    }
 _updateRadius() {
        const chart = this.chart;
        const chartArea = chart.chartArea;
        const opts = chart.options;
        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
        const outerRadius = Math.max(minSize / 2, 0);
        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);
        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();
        this.outerRadius = outerRadius - radiusLength * this.index;
        this.innerRadius = this.outerRadius - radiusLength;
    }
    updateElements(arcs, start, count, mode) {
        const reset = mode === 'reset';
        const chart = this.chart;
        const opts = chart.options;
        const animationOpts = opts.animation;
        const scale = this._cachedMeta.rScale;
        const centerX = scale.xCenter;
        const centerY = scale.yCenter;
        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P;
        let angle = datasetStartAngle;
        let i;
        const defaultAngle = 360 / this.countVisibleElements();
        for(i = 0; i < start; ++i){
            angle += this._computeAngle(i, mode, defaultAngle);
        }
        for(i = start; i < start + count; i++){
            const arc = arcs[i];
            let startAngle = angle;
            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);
            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;
            angle = endAngle;
            if (reset) {
                if (animationOpts.animateScale) {
                    outerRadius = 0;
                }
                if (animationOpts.animateRotate) {
                    startAngle = endAngle = datasetStartAngle;
                }
            }
            const properties = {
                x: centerX,
                y: centerY,
                innerRadius: 0,
                outerRadius,
                startAngle,
                endAngle,
                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)
            };
            this.updateElement(arc, i, properties, mode);
        }
    }
    countVisibleElements() {
        const meta = this._cachedMeta;
        let count = 0;
        meta.data.forEach((element, index)=>{
            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {
                count++;
            }
        });
        return count;
    }
 _computeAngle(index, mode, defaultAngle) {
        return this.chart.getDataVisibility(index) ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;
    }
}

class PieController extends DoughnutController {
    static id = 'pie';
 static defaults = {
        cutout: 0,
        rotation: 0,
        circumference: 360,
        radius: '100%'
    };
}

class RadarController extends DatasetController {
    static id = 'radar';
 static defaults = {
        datasetElementType: 'line',
        dataElementType: 'point',
        indexAxis: 'r',
        showLine: true,
        elements: {
            line: {
                fill: 'start'
            }
        }
    };
 static overrides = {
        aspectRatio: 1,
        scales: {
            r: {
                type: 'radialLinear'
            }
        }
    };
 getLabelAndValue(index) {
        const vScale = this._cachedMeta.vScale;
        const parsed = this.getParsed(index);
        return {
            label: vScale.getLabels()[index],
            value: '' + vScale.getLabelForValue(parsed[vScale.axis])
        };
    }
    parseObjectData(meta, data, start, count) {
        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.y.bind(this)(meta, data, start, count);
    }
    update(mode) {
        const meta = this._cachedMeta;
        const line = meta.dataset;
        const points = meta.data || [];
        const labels = meta.iScale.getLabels();
        line.points = points;
        if (mode !== 'resize') {
            const options = this.resolveDatasetElementOptions(mode);
            if (!this.options.showLine) {
                options.borderWidth = 0;
            }
            const properties = {
                _loop: true,
                _fullLoop: labels.length === points.length,
                options
            };
            this.updateElement(line, undefined, properties, mode);
        }
        this.updateElements(points, 0, points.length, mode);
    }
    updateElements(points, start, count, mode) {
        const scale = this._cachedMeta.rScale;
        const reset = mode === 'reset';
        for(let i = start; i < start + count; i++){
            const point = points[i];
            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);
            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);
            const x = reset ? scale.xCenter : pointPosition.x;
            const y = reset ? scale.yCenter : pointPosition.y;
            const properties = {
                x,
                y,
                angle: pointPosition.angle,
                skip: isNaN(x) || isNaN(y),
                options
            };
            this.updateElement(point, i, properties, mode);
        }
    }
}

class ScatterController extends DatasetController {
    static id = 'scatter';
 static defaults = {
        datasetElementType: false,
        dataElementType: 'point',
        showLine: false,
        fill: false
    };
 static overrides = {
        interaction: {
            mode: 'point'
        },
        scales: {
            x: {
                type: 'linear'
            },
            y: {
                type: 'linear'
            }
        }
    };
 getLabelAndValue(index) {
        const meta = this._cachedMeta;
        const labels = this.chart.data.labels || [];
        const { xScale , yScale  } = meta;
        const parsed = this.getParsed(index);
        const x = xScale.getLabelForValue(parsed.x);
        const y = yScale.getLabelForValue(parsed.y);
        return {
            label: labels[index] || '',
            value: '(' + x + ', ' + y + ')'
        };
    }
    update(mode) {
        const meta = this._cachedMeta;
        const { data: points = []  } = meta;
        const animationsDisabled = this.chart._animationsDisabled;
        let { start , count  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(meta, points, animationsDisabled);
        this._drawStart = start;
        this._drawCount = count;
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(meta)) {
            start = 0;
            count = points.length;
        }
        if (this.options.showLine) {
            const { dataset: line , _dataset  } = meta;
            line._chart = this.chart;
            line._datasetIndex = this.index;
            line._decimated = !!_dataset._decimated;
            line.points = points;
            const options = this.resolveDatasetElementOptions(mode);
            options.segment = this.options.segment;
            this.updateElement(line, undefined, {
                animated: !animationsDisabled,
                options
            }, mode);
        }
        this.updateElements(points, start, count, mode);
    }
    addElements() {
        const { showLine  } = this.options;
        if (!this.datasetElementType && showLine) {
            this.datasetElementType = this.chart.registry.getElement('line');
        }
        super.addElements();
    }
    updateElements(points, start, count, mode) {
        const reset = mode === 'reset';
        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;
        const firstOpts = this.resolveDataElementOptions(start, mode);
        const sharedOptions = this.getSharedOptions(firstOpts);
        const includeOptions = this.includeOptions(mode, sharedOptions);
        const iAxis = iScale.axis;
        const vAxis = vScale.axis;
        const { spanGaps , segment  } = this.options;
        const maxGapLength = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;
        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';
        let prevParsed = start > 0 && this.getParsed(start - 1);
        for(let i = start; i < start + count; ++i){
            const point = points[i];
            const parsed = this.getParsed(i);
            const properties = directUpdate ? point : {};
            const nullData = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vAxis]);
            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);
            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);
            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;
            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;
            if (segment) {
                properties.parsed = parsed;
                properties.raw = _dataset.data[i];
            }
            if (includeOptions) {
                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);
            }
            if (!directUpdate) {
                this.updateElement(point, i, properties, mode);
            }
            prevParsed = parsed;
        }
        this.updateSharedOptions(sharedOptions, mode, firstOpts);
    }
 getMaxOverflow() {
        const meta = this._cachedMeta;
        const data = meta.data || [];
        if (!this.options.showLine) {
            let max = 0;
            for(let i = data.length - 1; i >= 0; --i){
                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);
            }
            return max > 0 && max;
        }
        const dataset = meta.dataset;
        const border = dataset.options && dataset.options.borderWidth || 0;
        if (!data.length) {
            return border;
        }
        const firstPoint = data[0].size(this.resolveDataElementOptions(0));
        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));
        return Math.max(border, firstPoint, lastPoint) / 2;
    }
}

var controllers = /*#__PURE__*/Object.freeze({
__proto__: null,
BarController: BarController,
BubbleController: BubbleController,
DoughnutController: DoughnutController,
LineController: LineController,
PolarAreaController: PolarAreaController,
PieController: PieController,
RadarController: RadarController,
ScatterController: ScatterController
});

/**
 * @namespace Chart._adapters
 * @since 2.8.0
 * @private
 */ function abstract() {
    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');
}
/**
 * Date adapter (current used by the time scale)
 * @namespace Chart._adapters._date
 * @memberof Chart._adapters
 * @private
 */ class DateAdapterBase {
    /**
   * Override default date adapter methods.
   * Accepts type parameter to define options type.
   * @example
   * Chart._adapters._date.override<{myAdapterOption: string}>({
   *   init() {
   *     console.log(this.options.myAdapterOption);
   *   }
   * })
   */ static override(members) {
        Object.assign(DateAdapterBase.prototype, members);
    }
    constructor(options){
        this.options = options || {};
    }
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    init() {}
    formats() {
        return abstract();
    }
    parse() {
        return abstract();
    }
    format() {
        return abstract();
    }
    add() {
        return abstract();
    }
    diff() {
        return abstract();
    }
    startOf() {
        return abstract();
    }
    endOf() {
        return abstract();
    }
}
var adapters = {
    _date: DateAdapterBase
};

function binarySearch(metaset, axis, value, intersect) {
    const { controller , data , _sorted  } = metaset;
    const iScale = controller._cachedMeta.iScale;
    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {
        const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.A : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B;
        if (!intersect) {
            return lookupMethod(data, axis, value);
        } else if (controller._sharedOptions) {
            const el = data[0];
            const range = typeof el.getRange === 'function' && el.getRange(axis);
            if (range) {
                const start = lookupMethod(data, axis, value - range);
                const end = lookupMethod(data, axis, value + range);
                return {
                    lo: start.lo,
                    hi: end.hi
                };
            }
        }
    }
    return {
        lo: 0,
        hi: data.length - 1
    };
}
 function evaluateInteractionItems(chart, axis, position, handler, intersect) {
    const metasets = chart.getSortedVisibleDatasetMetas();
    const value = position[axis];
    for(let i = 0, ilen = metasets.length; i < ilen; ++i){
        const { index , data  } = metasets[i];
        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);
        for(let j = lo; j <= hi; ++j){
            const element = data[j];
            if (!element.skip) {
                handler(element, index, j);
            }
        }
    }
}
 function getDistanceMetricForAxis(axis) {
    const useX = axis.indexOf('x') !== -1;
    const useY = axis.indexOf('y') !== -1;
    return function(pt1, pt2) {
        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
    };
}
 function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {
    const items = [];
    if (!includeInvisible && !chart.isPointInArea(position)) {
        return items;
    }
    const evaluationFunc = function(element, datasetIndex, index) {
        if (!includeInvisible && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(element, chart.chartArea, 0)) {
            return;
        }
        if (element.inRange(position.x, position.y, useFinalPosition)) {
            items.push({
                element,
                datasetIndex,
                index
            });
        }
    };
    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);
    return items;
}
 function getNearestRadialItems(chart, position, axis, useFinalPosition) {
    let items = [];
    function evaluationFunc(element, datasetIndex, index) {
        const { startAngle , endAngle  } = element.getProps([
            'startAngle',
            'endAngle'
        ], useFinalPosition);
        const { angle  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(element, {
            x: position.x,
            y: position.y
        });
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle)) {
            items.push({
                element,
                datasetIndex,
                index
            });
        }
    }
    evaluateInteractionItems(chart, axis, position, evaluationFunc);
    return items;
}
 function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {
    let items = [];
    const distanceMetric = getDistanceMetricForAxis(axis);
    let minDistance = Number.POSITIVE_INFINITY;
    function evaluationFunc(element, datasetIndex, index) {
        const inRange = element.inRange(position.x, position.y, useFinalPosition);
        if (intersect && !inRange) {
            return;
        }
        const center = element.getCenterPoint(useFinalPosition);
        const pointInArea = !!includeInvisible || chart.isPointInArea(center);
        if (!pointInArea && !inRange) {
            return;
        }
        const distance = distanceMetric(position, center);
        if (distance < minDistance) {
            items = [
                {
                    element,
                    datasetIndex,
                    index
                }
            ];
            minDistance = distance;
        } else if (distance === minDistance) {
            items.push({
                element,
                datasetIndex,
                index
            });
        }
    }
    evaluateInteractionItems(chart, axis, position, evaluationFunc);
    return items;
}
 function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {
    if (!includeInvisible && !chart.isPointInArea(position)) {
        return [];
    }
    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);
}
 function getAxisItems(chart, position, axis, intersect, useFinalPosition) {
    const items = [];
    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';
    let intersectsItem = false;
    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{
        if (element[rangeMethod](position[axis], useFinalPosition)) {
            items.push({
                element,
                datasetIndex,
                index
            });
            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);
        }
    });
    if (intersect && !intersectsItem) {
        return [];
    }
    return items;
}
 var Interaction = {
    evaluateInteractionItems,
    modes: {
 index (chart, e, options, useFinalPosition) {
            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);
            const axis = options.axis || 'x';
            const includeInvisible = options.includeInvisible || false;
            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);
            const elements = [];
            if (!items.length) {
                return [];
            }
            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{
                const index = items[0].index;
                const element = meta.data[index];
                if (element && !element.skip) {
                    elements.push({
                        element,
                        datasetIndex: meta.index,
                        index
                    });
                }
            });
            return elements;
        },
 dataset (chart, e, options, useFinalPosition) {
            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);
            const axis = options.axis || 'xy';
            const includeInvisible = options.includeInvisible || false;
            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);
            if (items.length > 0) {
                const datasetIndex = items[0].datasetIndex;
                const data = chart.getDatasetMeta(datasetIndex).data;
                items = [];
                for(let i = 0; i < data.length; ++i){
                    items.push({
                        element: data[i],
                        datasetIndex,
                        index: i
                    });
                }
            }
            return items;
        },
 point (chart, e, options, useFinalPosition) {
            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);
            const axis = options.axis || 'xy';
            const includeInvisible = options.includeInvisible || false;
            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);
        },
 nearest (chart, e, options, useFinalPosition) {
            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);
            const axis = options.axis || 'xy';
            const includeInvisible = options.includeInvisible || false;
            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);
        },
 x (chart, e, options, useFinalPosition) {
            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);
            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);
        },
 y (chart, e, options, useFinalPosition) {
            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);
            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);
        }
    }
};

const STATIC_POSITIONS = [
    'left',
    'top',
    'right',
    'bottom'
];
function filterByPosition(array, position) {
    return array.filter((v)=>v.pos === position);
}
function filterDynamicPositionByAxis(array, axis) {
    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);
}
function sortByWeight(array, reverse) {
    return array.sort((a, b)=>{
        const v0 = reverse ? b : a;
        const v1 = reverse ? a : b;
        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;
    });
}
function wrapBoxes(boxes) {
    const layoutBoxes = [];
    let i, ilen, box, pos, stack, stackWeight;
    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){
        box = boxes[i];
        ({ position: pos , options: { stack , stackWeight =1  }  } = box);
        layoutBoxes.push({
            index: i,
            box,
            pos,
            horizontal: box.isHorizontal(),
            weight: box.weight,
            stack: stack && pos + stack,
            stackWeight
        });
    }
    return layoutBoxes;
}
function buildStacks(layouts) {
    const stacks = {};
    for (const wrap of layouts){
        const { stack , pos , stackWeight  } = wrap;
        if (!stack || !STATIC_POSITIONS.includes(pos)) {
            continue;
        }
        const _stack = stacks[stack] || (stacks[stack] = {
            count: 0,
            placed: 0,
            weight: 0,
            size: 0
        });
        _stack.count++;
        _stack.weight += stackWeight;
    }
    return stacks;
}
 function setLayoutDims(layouts, params) {
    const stacks = buildStacks(layouts);
    const { vBoxMaxWidth , hBoxMaxHeight  } = params;
    let i, ilen, layout;
    for(i = 0, ilen = layouts.length; i < ilen; ++i){
        layout = layouts[i];
        const { fullSize  } = layout.box;
        const stack = stacks[layout.stack];
        const factor = stack && layout.stackWeight / stack.weight;
        if (layout.horizontal) {
            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;
            layout.height = hBoxMaxHeight;
        } else {
            layout.width = vBoxMaxWidth;
            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;
        }
    }
    return stacks;
}
function buildLayoutBoxes(boxes) {
    const layoutBoxes = wrapBoxes(boxes);
    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);
    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);
    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));
    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);
    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));
    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');
    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');
    return {
        fullSize,
        leftAndTop: left.concat(top),
        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),
        chartArea: filterByPosition(layoutBoxes, 'chartArea'),
        vertical: left.concat(right).concat(centerVertical),
        horizontal: top.concat(bottom).concat(centerHorizontal)
    };
}
function getCombinedMax(maxPadding, chartArea, a, b) {
    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);
}
function updateMaxPadding(maxPadding, boxPadding) {
    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);
    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);
    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);
    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);
}
function updateDims(chartArea, params, layout, stacks) {
    const { pos , box  } = layout;
    const maxPadding = chartArea.maxPadding;
    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(pos)) {
        if (layout.size) {
            chartArea[pos] -= layout.size;
        }
        const stack = stacks[layout.stack] || {
            size: 0,
            count: 1
        };
        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);
        layout.size = stack.size / stack.count;
        chartArea[pos] += layout.size;
    }
    if (box.getPadding) {
        updateMaxPadding(maxPadding, box.getPadding());
    }
    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));
    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));
    const widthChanged = newWidth !== chartArea.w;
    const heightChanged = newHeight !== chartArea.h;
    chartArea.w = newWidth;
    chartArea.h = newHeight;
    return layout.horizontal ? {
        same: widthChanged,
        other: heightChanged
    } : {
        same: heightChanged,
        other: widthChanged
    };
}
function handleMaxPadding(chartArea) {
    const maxPadding = chartArea.maxPadding;
    function updatePos(pos) {
        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);
        chartArea[pos] += change;
        return change;
    }
    chartArea.y += updatePos('top');
    chartArea.x += updatePos('left');
    updatePos('right');
    updatePos('bottom');
}
function getMargins(horizontal, chartArea) {
    const maxPadding = chartArea.maxPadding;
    function marginForPositions(positions) {
        const margin = {
            left: 0,
            top: 0,
            right: 0,
            bottom: 0
        };
        positions.forEach((pos)=>{
            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);
        });
        return margin;
    }
    return horizontal ? marginForPositions([
        'left',
        'right'
    ]) : marginForPositions([
        'top',
        'bottom'
    ]);
}
function fitBoxes(boxes, chartArea, params, stacks) {
    const refitBoxes = [];
    let i, ilen, layout, box, refit, changed;
    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){
        layout = boxes[i];
        box = layout.box;
        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));
        const { same , other  } = updateDims(chartArea, params, layout, stacks);
        refit |= same && refitBoxes.length;
        changed = changed || other;
        if (!box.fullSize) {
            refitBoxes.push(layout);
        }
    }
    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;
}
function setBoxDims(box, left, top, width, height) {
    box.top = top;
    box.left = left;
    box.right = left + width;
    box.bottom = top + height;
    box.width = width;
    box.height = height;
}
function placeBoxes(boxes, chartArea, params, stacks) {
    const userPadding = params.padding;
    let { x , y  } = chartArea;
    for (const layout of boxes){
        const box = layout.box;
        const stack = stacks[layout.stack] || {
            count: 1,
            placed: 0,
            weight: 1
        };
        const weight = layout.stackWeight / stack.weight || 1;
        if (layout.horizontal) {
            const width = chartArea.w * weight;
            const height = stack.size || box.height;
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(stack.start)) {
                y = stack.start;
            }
            if (box.fullSize) {
                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);
            } else {
                setBoxDims(box, chartArea.left + stack.placed, y, width, height);
            }
            stack.start = y;
            stack.placed += width;
            y = box.bottom;
        } else {
            const height1 = chartArea.h * weight;
            const width1 = stack.size || box.width;
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(stack.start)) {
                x = stack.start;
            }
            if (box.fullSize) {
                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);
            } else {
                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);
            }
            stack.start = x;
            stack.placed += height1;
            x = box.right;
        }
    }
    chartArea.x = x;
    chartArea.y = y;
}
var layouts = {
 addBox (chart, item) {
        if (!chart.boxes) {
            chart.boxes = [];
        }
        item.fullSize = item.fullSize || false;
        item.position = item.position || 'top';
        item.weight = item.weight || 0;
        item._layers = item._layers || function() {
            return [
                {
                    z: 0,
                    draw (chartArea) {
                        item.draw(chartArea);
                    }
                }
            ];
        };
        chart.boxes.push(item);
    },
 removeBox (chart, layoutItem) {
        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
        if (index !== -1) {
            chart.boxes.splice(index, 1);
        }
    },
 configure (chart, item, options) {
        item.fullSize = options.fullSize;
        item.position = options.position;
        item.weight = options.weight;
    },
 update (chart, width, height, minPadding) {
        if (!chart) {
            return;
        }
        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(chart.options.layout.padding);
        const availableWidth = Math.max(width - padding.width, 0);
        const availableHeight = Math.max(height - padding.height, 0);
        const boxes = buildLayoutBoxes(chart.boxes);
        const verticalBoxes = boxes.vertical;
        const horizontalBoxes = boxes.horizontal;
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(chart.boxes, (box)=>{
            if (typeof box.beforeLayout === 'function') {
                box.beforeLayout();
            }
        });
        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;
        const params = Object.freeze({
            outerWidth: width,
            outerHeight: height,
            padding,
            availableWidth,
            availableHeight,
            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,
            hBoxMaxHeight: availableHeight / 2
        });
        const maxPadding = Object.assign({}, padding);
        updateMaxPadding(maxPadding, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(minPadding));
        const chartArea = Object.assign({
            maxPadding,
            w: availableWidth,
            h: availableHeight,
            x: padding.left,
            y: padding.top
        }, padding);
        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);
        fitBoxes(boxes.fullSize, chartArea, params, stacks);
        fitBoxes(verticalBoxes, chartArea, params, stacks);
        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {
            fitBoxes(verticalBoxes, chartArea, params, stacks);
        }
        handleMaxPadding(chartArea);
        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);
        chartArea.x += chartArea.w;
        chartArea.y += chartArea.h;
        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);
        chart.chartArea = {
            left: chartArea.left,
            top: chartArea.top,
            right: chartArea.left + chartArea.w,
            bottom: chartArea.top + chartArea.h,
            height: chartArea.h,
            width: chartArea.w
        };
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(boxes.chartArea, (layout)=>{
            const box = layout.box;
            Object.assign(box, chart.chartArea);
            box.update(chartArea.w, chartArea.h, {
                left: 0,
                top: 0,
                right: 0,
                bottom: 0
            });
        });
    }
};

class BasePlatform {
 acquireContext(canvas, aspectRatio) {}
 releaseContext(context) {
        return false;
    }
 addEventListener(chart, type, listener) {}
 removeEventListener(chart, type, listener) {}
 getDevicePixelRatio() {
        return 1;
    }
 getMaximumSize(element, width, height, aspectRatio) {
        width = Math.max(0, width || element.width);
        height = height || element.height;
        return {
            width,
            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)
        };
    }
 isAttached(canvas) {
        return true;
    }
 updateConfig(config) {
    }
}

class BasicPlatform extends BasePlatform {
    acquireContext(item) {
        return item && item.getContext && item.getContext('2d') || null;
    }
    updateConfig(config) {
        config.options.animation = false;
    }
}

const EXPANDO_KEY = '$chartjs';
 const EVENT_TYPES = {
    touchstart: 'mousedown',
    touchmove: 'mousemove',
    touchend: 'mouseup',
    pointerenter: 'mouseenter',
    pointerdown: 'mousedown',
    pointermove: 'mousemove',
    pointerup: 'mouseup',
    pointerleave: 'mouseout',
    pointerout: 'mouseout'
};
const isNullOrEmpty = (value)=>value === null || value === '';
 function initCanvas(canvas, aspectRatio) {
    const style = canvas.style;
    const renderHeight = canvas.getAttribute('height');
    const renderWidth = canvas.getAttribute('width');
    canvas[EXPANDO_KEY] = {
        initial: {
            height: renderHeight,
            width: renderWidth,
            style: {
                display: style.display,
                height: style.height,
                width: style.width
            }
        }
    };
    style.display = style.display || 'block';
    style.boxSizing = style.boxSizing || 'border-box';
    if (isNullOrEmpty(renderWidth)) {
        const displayWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.J)(canvas, 'width');
        if (displayWidth !== undefined) {
            canvas.width = displayWidth;
        }
    }
    if (isNullOrEmpty(renderHeight)) {
        if (canvas.style.height === '') {
            canvas.height = canvas.width / (aspectRatio || 2);
        } else {
            const displayHeight = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.J)(canvas, 'height');
            if (displayHeight !== undefined) {
                canvas.height = displayHeight;
            }
        }
    }
    return canvas;
}
const eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.K ? {
    passive: true
} : false;
function addListener(node, type, listener) {
    node.addEventListener(type, listener, eventListenerOptions);
}
function removeListener(chart, type, listener) {
    chart.canvas.removeEventListener(type, listener, eventListenerOptions);
}
function fromNativeEvent(event, chart) {
    const type = EVENT_TYPES[event.type] || event.type;
    const { x , y  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(event, chart);
    return {
        type,
        chart,
        native: event,
        x: x !== undefined ? x : null,
        y: y !== undefined ? y : null
    };
}
function nodeListContains(nodeList, canvas) {
    for (const node of nodeList){
        if (node === canvas || node.contains(canvas)) {
            return true;
        }
    }
}
function createAttachObserver(chart, type, listener) {
    const canvas = chart.canvas;
    const observer = new MutationObserver((entries)=>{
        let trigger = false;
        for (const entry of entries){
            trigger = trigger || nodeListContains(entry.addedNodes, canvas);
            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);
        }
        if (trigger) {
            listener();
        }
    });
    observer.observe(document, {
        childList: true,
        subtree: true
    });
    return observer;
}
function createDetachObserver(chart, type, listener) {
    const canvas = chart.canvas;
    const observer = new MutationObserver((entries)=>{
        let trigger = false;
        for (const entry of entries){
            trigger = trigger || nodeListContains(entry.removedNodes, canvas);
            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);
        }
        if (trigger) {
            listener();
        }
    });
    observer.observe(document, {
        childList: true,
        subtree: true
    });
    return observer;
}
const drpListeningCharts = new Map();
let oldDevicePixelRatio = 0;
function onWindowResize() {
    const dpr = window.devicePixelRatio;
    if (dpr === oldDevicePixelRatio) {
        return;
    }
    oldDevicePixelRatio = dpr;
    drpListeningCharts.forEach((resize, chart)=>{
        if (chart.currentDevicePixelRatio !== dpr) {
            resize();
        }
    });
}
function listenDevicePixelRatioChanges(chart, resize) {
    if (!drpListeningCharts.size) {
        window.addEventListener('resize', onWindowResize);
    }
    drpListeningCharts.set(chart, resize);
}
function unlistenDevicePixelRatioChanges(chart) {
    drpListeningCharts.delete(chart);
    if (!drpListeningCharts.size) {
        window.removeEventListener('resize', onWindowResize);
    }
}
function createResizeObserver(chart, type, listener) {
    const canvas = chart.canvas;
    const container = canvas && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.I)(canvas);
    if (!container) {
        return;
    }
    const resize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)((width, height)=>{
        const w = container.clientWidth;
        listener(width, height);
        if (w < container.clientWidth) {
            listener();
        }
    }, window);
    const observer = new ResizeObserver((entries)=>{
        const entry = entries[0];
        const width = entry.contentRect.width;
        const height = entry.contentRect.height;
        if (width === 0 && height === 0) {
            return;
        }
        resize(width, height);
    });
    observer.observe(container);
    listenDevicePixelRatioChanges(chart, resize);
    return observer;
}
function releaseObserver(chart, type, observer) {
    if (observer) {
        observer.disconnect();
    }
    if (type === 'resize') {
        unlistenDevicePixelRatioChanges(chart);
    }
}
function createProxyAndListen(chart, type, listener) {
    const canvas = chart.canvas;
    const proxy = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)((event)=>{
        if (chart.ctx !== null) {
            listener(fromNativeEvent(event, chart));
        }
    }, chart);
    addListener(canvas, type, proxy);
    return proxy;
}
 class DomPlatform extends BasePlatform {
 acquireContext(canvas, aspectRatio) {
        const context = canvas && canvas.getContext && canvas.getContext('2d');
        if (context && context.canvas === canvas) {
            initCanvas(canvas, aspectRatio);
            return context;
        }
        return null;
    }
 releaseContext(context) {
        const canvas = context.canvas;
        if (!canvas[EXPANDO_KEY]) {
            return false;
        }
        const initial = canvas[EXPANDO_KEY].initial;
        [
            'height',
            'width'
        ].forEach((prop)=>{
            const value = initial[prop];
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {
                canvas.removeAttribute(prop);
            } else {
                canvas.setAttribute(prop, value);
            }
        });
        const style = initial.style || {};
        Object.keys(style).forEach((key)=>{
            canvas.style[key] = style[key];
        });
        canvas.width = canvas.width;
        delete canvas[EXPANDO_KEY];
        return true;
    }
 addEventListener(chart, type, listener) {
        this.removeEventListener(chart, type);
        const proxies = chart.$proxies || (chart.$proxies = {});
        const handlers = {
            attach: createAttachObserver,
            detach: createDetachObserver,
            resize: createResizeObserver
        };
        const handler = handlers[type] || createProxyAndListen;
        proxies[type] = handler(chart, type, listener);
    }
 removeEventListener(chart, type) {
        const proxies = chart.$proxies || (chart.$proxies = {});
        const proxy = proxies[type];
        if (!proxy) {
            return;
        }
        const handlers = {
            attach: releaseObserver,
            detach: releaseObserver,
            resize: releaseObserver
        };
        const handler = handlers[type] || removeListener;
        handler(chart, type, proxy);
        proxies[type] = undefined;
    }
    getDevicePixelRatio() {
        return window.devicePixelRatio;
    }
 getMaximumSize(canvas, width, height, aspectRatio) {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.G)(canvas, width, height, aspectRatio);
    }
 isAttached(canvas) {
        const container = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.I)(canvas);
        return !!(container && container.isConnected);
    }
}

function _detectPlatform(canvas) {
    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.M)() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {
        return BasicPlatform;
    }
    return DomPlatform;
}

class Element {
    static defaults = {};
    static defaultRoutes = undefined;
    active = false;
    tooltipPosition(useFinalPosition) {
        const { x , y  } = this.getProps([
            'x',
            'y'
        ], useFinalPosition);
        return {
            x,
            y
        };
    }
    hasValue() {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(this.x) && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(this.y);
    }
    getProps(props, final) {
        const anims = this.$animations;
        if (!final || !anims) {
            // let's not create an object, if not needed
            return this;
        }
        const ret = {};
        props.forEach((prop)=>{
            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];
        });
        return ret;
    }
}

function autoSkip(scale, ticks) {
    const tickOpts = scale.options.ticks;
    const determinedMaxTicks = determineMaxTicks(scale);
    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);
    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];
    const numMajorIndices = majorIndices.length;
    const first = majorIndices[0];
    const last = majorIndices[numMajorIndices - 1];
    const newTicks = [];
    if (numMajorIndices > ticksLimit) {
        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);
        return newTicks;
    }
    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);
    if (numMajorIndices > 0) {
        let i, ilen;
        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;
        skip(ticks, newTicks, spacing, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);
        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){
            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);
        }
        skip(ticks, newTicks, spacing, last, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);
        return newTicks;
    }
    skip(ticks, newTicks, spacing);
    return newTicks;
}
function determineMaxTicks(scale) {
    const offset = scale.options.offset;
    const tickLength = scale._tickSize();
    const maxScale = scale._length / tickLength + (offset ? 0 : 1);
    const maxChart = scale._maxLength / tickLength;
    return Math.floor(Math.min(maxScale, maxChart));
}
 function calculateSpacing(majorIndices, ticks, ticksLimit) {
    const evenMajorSpacing = getEvenSpacing(majorIndices);
    const spacing = ticks.length / ticksLimit;
    if (!evenMajorSpacing) {
        return Math.max(spacing, 1);
    }
    const factors = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(evenMajorSpacing);
    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){
        const factor = factors[i];
        if (factor > spacing) {
            return factor;
        }
    }
    return Math.max(spacing, 1);
}
 function getMajorIndices(ticks) {
    const result = [];
    let i, ilen;
    for(i = 0, ilen = ticks.length; i < ilen; i++){
        if (ticks[i].major) {
            result.push(i);
        }
    }
    return result;
}
 function skipMajors(ticks, newTicks, majorIndices, spacing) {
    let count = 0;
    let next = majorIndices[0];
    let i;
    spacing = Math.ceil(spacing);
    for(i = 0; i < ticks.length; i++){
        if (i === next) {
            newTicks.push(ticks[i]);
            count++;
            next = majorIndices[count * spacing];
        }
    }
}
 function skip(ticks, newTicks, spacing, majorStart, majorEnd) {
    const start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(majorStart, 0);
    const end = Math.min((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(majorEnd, ticks.length), ticks.length);
    let count = 0;
    let length, i, next;
    spacing = Math.ceil(spacing);
    if (majorEnd) {
        length = majorEnd - majorStart;
        spacing = length / Math.floor(length / spacing);
    }
    next = start;
    while(next < 0){
        count++;
        next = Math.round(start + count * spacing);
    }
    for(i = Math.max(start, 0); i < end; i++){
        if (i === next) {
            newTicks.push(ticks[i]);
            count++;
            next = Math.round(start + count * spacing);
        }
    }
}
 function getEvenSpacing(arr) {
    const len = arr.length;
    let i, diff;
    if (len < 2) {
        return false;
    }
    for(diff = arr[0], i = 1; i < len; ++i){
        if (arr[i] - arr[i - 1] !== diff) {
            return false;
        }
    }
    return diff;
}

const reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;
const offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;
const getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);
 function sample(arr, numItems) {
    const result = [];
    const increment = arr.length / numItems;
    const len = arr.length;
    let i = 0;
    for(; i < len; i += increment){
        result.push(arr[Math.floor(i)]);
    }
    return result;
}
 function getPixelForGridLine(scale, index, offsetGridLines) {
    const length = scale.ticks.length;
    const validIndex = Math.min(index, length - 1);
    const start = scale._startPixel;
    const end = scale._endPixel;
    const epsilon = 1e-6;
    let lineValue = scale.getPixelForTick(validIndex);
    let offset;
    if (offsetGridLines) {
        if (length === 1) {
            offset = Math.max(lineValue - start, end - lineValue);
        } else if (index === 0) {
            offset = (scale.getPixelForTick(1) - lineValue) / 2;
        } else {
            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;
        }
        lineValue += validIndex < index ? offset : -offset;
        if (lineValue < start - epsilon || lineValue > end + epsilon) {
            return;
        }
    }
    return lineValue;
}
 function garbageCollect(caches, length) {
    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(caches, (cache)=>{
        const gc = cache.gc;
        const gcLen = gc.length / 2;
        let i;
        if (gcLen > length) {
            for(i = 0; i < gcLen; ++i){
                delete cache.data[gc[i]];
            }
            gc.splice(0, gcLen);
        }
    });
}
 function getTickMarkLength(options) {
    return options.drawTicks ? options.tickLength : 0;
}
 function getTitleHeight(options, fallback) {
    if (!options.display) {
        return 0;
    }
    const font = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.font, fallback);
    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);
    const lines = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(options.text) ? options.text.length : 1;
    return lines * font.lineHeight + padding.height;
}
function createScaleContext(parent, scale) {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {
        scale,
        type: 'scale'
    });
}
function createTickContext(parent, index, tick) {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {
        tick,
        index,
        type: 'tick'
    });
}
function titleAlign(align, position, reverse) {
    let ret = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1)(align);
    if (reverse && position !== 'right' || !reverse && position === 'right') {
        ret = reverseAlign(ret);
    }
    return ret;
}
function titleArgs(scale, offset, position, align) {
    const { top , left , bottom , right , chart  } = scale;
    const { chartArea , scales  } = chart;
    let rotation = 0;
    let maxWidth, titleX, titleY;
    const height = bottom - top;
    const width = right - left;
    if (scale.isHorizontal()) {
        titleX = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, left, right);
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {
            const positionAxisID = Object.keys(position)[0];
            const value = position[positionAxisID];
            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;
        } else if (position === 'center') {
            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;
        } else {
            titleY = offsetFromEdge(scale, position, offset);
        }
        maxWidth = right - left;
    } else {
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {
            const positionAxisID1 = Object.keys(position)[0];
            const value1 = position[positionAxisID1];
            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;
        } else if (position === 'center') {
            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;
        } else {
            titleX = offsetFromEdge(scale, position, offset);
        }
        titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, bottom, top);
        rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H;
    }
    return {
        titleX,
        titleY,
        maxWidth,
        rotation
    };
}
class Scale extends Element {
    constructor(cfg){
        super();
         this.id = cfg.id;
         this.type = cfg.type;
         this.options = undefined;
         this.ctx = cfg.ctx;
         this.chart = cfg.chart;
         this.top = undefined;
         this.bottom = undefined;
         this.left = undefined;
         this.right = undefined;
         this.width = undefined;
         this.height = undefined;
        this._margins = {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        };
         this.maxWidth = undefined;
         this.maxHeight = undefined;
         this.paddingTop = undefined;
         this.paddingBottom = undefined;
         this.paddingLeft = undefined;
         this.paddingRight = undefined;
         this.axis = undefined;
         this.labelRotation = undefined;
        this.min = undefined;
        this.max = undefined;
        this._range = undefined;
         this.ticks = [];
         this._gridLineItems = null;
         this._labelItems = null;
         this._labelSizes = null;
        this._length = 0;
        this._maxLength = 0;
        this._longestTextCache = {};
         this._startPixel = undefined;
         this._endPixel = undefined;
        this._reversePixels = false;
        this._userMax = undefined;
        this._userMin = undefined;
        this._suggestedMax = undefined;
        this._suggestedMin = undefined;
        this._ticksLength = 0;
        this._borderValue = 0;
        this._cache = {};
        this._dataLimitsCached = false;
        this.$context = undefined;
    }
 init(options) {
        this.options = options.setContext(this.getContext());
        this.axis = options.axis;
        this._userMin = this.parse(options.min);
        this._userMax = this.parse(options.max);
        this._suggestedMin = this.parse(options.suggestedMin);
        this._suggestedMax = this.parse(options.suggestedMax);
    }
 parse(raw, index) {
        return raw;
    }
 getUserBounds() {
        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;
        _userMin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMin, Number.POSITIVE_INFINITY);
        _userMax = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMax, Number.NEGATIVE_INFINITY);
        _suggestedMin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_suggestedMin, Number.POSITIVE_INFINITY);
        _suggestedMax = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_suggestedMax, Number.NEGATIVE_INFINITY);
        return {
            min: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMin, _suggestedMin),
            max: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMax, _suggestedMax),
            minDefined: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(_userMin),
            maxDefined: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(_userMax)
        };
    }
 getMinMax(canStack) {
        let { min , max , minDefined , maxDefined  } = this.getUserBounds();
        let range;
        if (minDefined && maxDefined) {
            return {
                min,
                max
            };
        }
        const metas = this.getMatchingVisibleMetas();
        for(let i = 0, ilen = metas.length; i < ilen; ++i){
            range = metas[i].controller.getMinMax(this, canStack);
            if (!minDefined) {
                min = Math.min(min, range.min);
            }
            if (!maxDefined) {
                max = Math.max(max, range.max);
            }
        }
        min = maxDefined && min > max ? max : min;
        max = minDefined && min > max ? min : max;
        return {
            min: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(min, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(max, min)),
            max: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(max, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(min, max))
        };
    }
 getPadding() {
        return {
            left: this.paddingLeft || 0,
            top: this.paddingTop || 0,
            right: this.paddingRight || 0,
            bottom: this.paddingBottom || 0
        };
    }
 getTicks() {
        return this.ticks;
    }
 getLabels() {
        const data = this.chart.data;
        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];
    }
 getLabelItems(chartArea = this.chart.chartArea) {
        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));
        return items;
    }
    beforeLayout() {
        this._cache = {};
        this._dataLimitsCached = false;
    }
    beforeUpdate() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeUpdate, [
            this
        ]);
    }
 update(maxWidth, maxHeight, margins) {
        const { beginAtZero , grace , ticks: tickOpts  } = this.options;
        const sampleSize = tickOpts.sampleSize;
        this.beforeUpdate();
        this.maxWidth = maxWidth;
        this.maxHeight = maxHeight;
        this._margins = margins = Object.assign({
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        }, margins);
        this.ticks = null;
        this._labelSizes = null;
        this._gridLineItems = null;
        this._labelItems = null;
        this.beforeSetDimensions();
        this.setDimensions();
        this.afterSetDimensions();
        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;
        if (!this._dataLimitsCached) {
            this.beforeDataLimits();
            this.determineDataLimits();
            this.afterDataLimits();
            this._range = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.R)(this, grace, beginAtZero);
            this._dataLimitsCached = true;
        }
        this.beforeBuildTicks();
        this.ticks = this.buildTicks() || [];
        this.afterBuildTicks();
        const samplingEnabled = sampleSize < this.ticks.length;
        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);
        this.configure();
        this.beforeCalculateLabelRotation();
        this.calculateLabelRotation();
        this.afterCalculateLabelRotation();
        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {
            this.ticks = autoSkip(this, this.ticks);
            this._labelSizes = null;
            this.afterAutoSkip();
        }
        if (samplingEnabled) {
            this._convertTicksToLabels(this.ticks);
        }
        this.beforeFit();
        this.fit();
        this.afterFit();
        this.afterUpdate();
    }
 configure() {
        let reversePixels = this.options.reverse;
        let startPixel, endPixel;
        if (this.isHorizontal()) {
            startPixel = this.left;
            endPixel = this.right;
        } else {
            startPixel = this.top;
            endPixel = this.bottom;
            reversePixels = !reversePixels;
        }
        this._startPixel = startPixel;
        this._endPixel = endPixel;
        this._reversePixels = reversePixels;
        this._length = endPixel - startPixel;
        this._alignToPixels = this.options.alignToPixels;
    }
    afterUpdate() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterUpdate, [
            this
        ]);
    }
    beforeSetDimensions() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeSetDimensions, [
            this
        ]);
    }
    setDimensions() {
        if (this.isHorizontal()) {
            this.width = this.maxWidth;
            this.left = 0;
            this.right = this.width;
        } else {
            this.height = this.maxHeight;
            this.top = 0;
            this.bottom = this.height;
        }
        this.paddingLeft = 0;
        this.paddingTop = 0;
        this.paddingRight = 0;
        this.paddingBottom = 0;
    }
    afterSetDimensions() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterSetDimensions, [
            this
        ]);
    }
    _callHooks(name) {
        this.chart.notifyPlugins(name, this.getContext());
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options[name], [
            this
        ]);
    }
    beforeDataLimits() {
        this._callHooks('beforeDataLimits');
    }
    determineDataLimits() {}
    afterDataLimits() {
        this._callHooks('afterDataLimits');
    }
    beforeBuildTicks() {
        this._callHooks('beforeBuildTicks');
    }
 buildTicks() {
        return [];
    }
    afterBuildTicks() {
        this._callHooks('afterBuildTicks');
    }
    beforeTickToLabelConversion() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeTickToLabelConversion, [
            this
        ]);
    }
 generateTickLabels(ticks) {
        const tickOpts = this.options.ticks;
        let i, ilen, tick;
        for(i = 0, ilen = ticks.length; i < ilen; i++){
            tick = ticks[i];
            tick.label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(tickOpts.callback, [
                tick.value,
                i,
                ticks
            ], this);
        }
    }
    afterTickToLabelConversion() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterTickToLabelConversion, [
            this
        ]);
    }
    beforeCalculateLabelRotation() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeCalculateLabelRotation, [
            this
        ]);
    }
    calculateLabelRotation() {
        const options = this.options;
        const tickOpts = options.ticks;
        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);
        const minRotation = tickOpts.minRotation || 0;
        const maxRotation = tickOpts.maxRotation;
        let labelRotation = minRotation;
        let tickWidth, maxHeight, maxLabelDiagonal;
        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {
            this.labelRotation = minRotation;
            return;
        }
        const labelSizes = this._getLabelSizes();
        const maxLabelWidth = labelSizes.widest.width;
        const maxLabelHeight = labelSizes.highest.height;
        const maxWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(this.chart.width - maxLabelWidth, 0, this.maxWidth);
        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);
        if (maxLabelWidth + 6 > tickWidth) {
            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));
            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);
            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);
            labelRotation = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.U)(Math.min(Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(maxLabelHeight / maxLabelDiagonal, -1, 1))));
            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));
        }
        this.labelRotation = labelRotation;
    }
    afterCalculateLabelRotation() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterCalculateLabelRotation, [
            this
        ]);
    }
    afterAutoSkip() {}
    beforeFit() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeFit, [
            this
        ]);
    }
    fit() {
        const minSize = {
            width: 0,
            height: 0
        };
        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;
        const display = this._isVisible();
        const isHorizontal = this.isHorizontal();
        if (display) {
            const titleHeight = getTitleHeight(titleOpts, chart.options.font);
            if (isHorizontal) {
                minSize.width = this.maxWidth;
                minSize.height = getTickMarkLength(gridOpts) + titleHeight;
            } else {
                minSize.height = this.maxHeight;
                minSize.width = getTickMarkLength(gridOpts) + titleHeight;
            }
            if (tickOpts.display && this.ticks.length) {
                const { first , last , widest , highest  } = this._getLabelSizes();
                const tickPadding = tickOpts.padding * 2;
                const angleRadians = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);
                const cos = Math.cos(angleRadians);
                const sin = Math.sin(angleRadians);
                if (isHorizontal) {
                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;
                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);
                } else {
                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;
                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);
                }
                this._calculatePadding(first, last, sin, cos);
            }
        }
        this._handleMargins();
        if (isHorizontal) {
            this.width = this._length = chart.width - this._margins.left - this._margins.right;
            this.height = minSize.height;
        } else {
            this.width = minSize.width;
            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;
        }
    }
    _calculatePadding(first, last, sin, cos) {
        const { ticks: { align , padding  } , position  } = this.options;
        const isRotated = this.labelRotation !== 0;
        const labelsBelowTicks = position !== 'top' && this.axis === 'x';
        if (this.isHorizontal()) {
            const offsetLeft = this.getPixelForTick(0) - this.left;
            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);
            let paddingLeft = 0;
            let paddingRight = 0;
            if (isRotated) {
                if (labelsBelowTicks) {
                    paddingLeft = cos * first.width;
                    paddingRight = sin * last.height;
                } else {
                    paddingLeft = sin * first.height;
                    paddingRight = cos * last.width;
                }
            } else if (align === 'start') {
                paddingRight = last.width;
            } else if (align === 'end') {
                paddingLeft = first.width;
            } else if (align !== 'inner') {
                paddingLeft = first.width / 2;
                paddingRight = last.width / 2;
            }
            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);
            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);
        } else {
            let paddingTop = last.height / 2;
            let paddingBottom = first.height / 2;
            if (align === 'start') {
                paddingTop = 0;
                paddingBottom = first.height;
            } else if (align === 'end') {
                paddingTop = last.height;
                paddingBottom = 0;
            }
            this.paddingTop = paddingTop + padding;
            this.paddingBottom = paddingBottom + padding;
        }
    }
 _handleMargins() {
        if (this._margins) {
            this._margins.left = Math.max(this.paddingLeft, this._margins.left);
            this._margins.top = Math.max(this.paddingTop, this._margins.top);
            this._margins.right = Math.max(this.paddingRight, this._margins.right);
            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);
        }
    }
    afterFit() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterFit, [
            this
        ]);
    }
 isHorizontal() {
        const { axis , position  } = this.options;
        return position === 'top' || position === 'bottom' || axis === 'x';
    }
 isFullSize() {
        return this.options.fullSize;
    }
 _convertTicksToLabels(ticks) {
        this.beforeTickToLabelConversion();
        this.generateTickLabels(ticks);
        let i, ilen;
        for(i = 0, ilen = ticks.length; i < ilen; i++){
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(ticks[i].label)) {
                ticks.splice(i, 1);
                ilen--;
                i--;
            }
        }
        this.afterTickToLabelConversion();
    }
 _getLabelSizes() {
        let labelSizes = this._labelSizes;
        if (!labelSizes) {
            const sampleSize = this.options.ticks.sampleSize;
            let ticks = this.ticks;
            if (sampleSize < ticks.length) {
                ticks = sample(ticks, sampleSize);
            }
            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);
        }
        return labelSizes;
    }
 _computeLabelSizes(ticks, length, maxTicksLimit) {
        const { ctx , _longestTextCache: caches  } = this;
        const widths = [];
        const heights = [];
        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));
        let widestLabelSize = 0;
        let highestLabelSize = 0;
        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;
        for(i = 0; i < length; i += increment){
            label = ticks[i].label;
            tickFont = this._resolveTickFontOptions(i);
            ctx.font = fontString = tickFont.string;
            cache = caches[fontString] = caches[fontString] || {
                data: {},
                gc: []
            };
            lineHeight = tickFont.lineHeight;
            width = height = 0;
            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(label) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label)) {
                width = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(ctx, cache.data, cache.gc, width, label);
                height = lineHeight;
            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label)) {
                for(j = 0, jlen = label.length; j < jlen; ++j){
                    nestedLabel = label[j];
                    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(nestedLabel) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(nestedLabel)) {
                        width = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(ctx, cache.data, cache.gc, width, nestedLabel);
                        height += lineHeight;
                    }
                }
            }
            widths.push(width);
            heights.push(height);
            widestLabelSize = Math.max(width, widestLabelSize);
            highestLabelSize = Math.max(height, highestLabelSize);
        }
        garbageCollect(caches, length);
        const widest = widths.indexOf(widestLabelSize);
        const highest = heights.indexOf(highestLabelSize);
        const valueAt = (idx)=>({
                width: widths[idx] || 0,
                height: heights[idx] || 0
            });
        return {
            first: valueAt(0),
            last: valueAt(length - 1),
            widest: valueAt(widest),
            highest: valueAt(highest),
            widths,
            heights
        };
    }
 getLabelForValue(value) {
        return value;
    }
 getPixelForValue(value, index) {
        return NaN;
    }
 getValueForPixel(pixel) {}
 getPixelForTick(index) {
        const ticks = this.ticks;
        if (index < 0 || index > ticks.length - 1) {
            return null;
        }
        return this.getPixelForValue(ticks[index].value);
    }
 getPixelForDecimal(decimal) {
        if (this._reversePixels) {
            decimal = 1 - decimal;
        }
        const pixel = this._startPixel + decimal * this._length;
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.W)(this._alignToPixels ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(this.chart, pixel, 0) : pixel);
    }
 getDecimalForPixel(pixel) {
        const decimal = (pixel - this._startPixel) / this._length;
        return this._reversePixels ? 1 - decimal : decimal;
    }
 getBasePixel() {
        return this.getPixelForValue(this.getBaseValue());
    }
 getBaseValue() {
        const { min , max  } = this;
        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;
    }
 getContext(index) {
        const ticks = this.ticks || [];
        if (index >= 0 && index < ticks.length) {
            const tick = ticks[index];
            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));
        }
        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));
    }
 _tickSize() {
        const optionTicks = this.options.ticks;
        const rot = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);
        const cos = Math.abs(Math.cos(rot));
        const sin = Math.abs(Math.sin(rot));
        const labelSizes = this._getLabelSizes();
        const padding = optionTicks.autoSkipPadding || 0;
        const w = labelSizes ? labelSizes.widest.width + padding : 0;
        const h = labelSizes ? labelSizes.highest.height + padding : 0;
        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;
    }
 _isVisible() {
        const display = this.options.display;
        if (display !== 'auto') {
            return !!display;
        }
        return this.getMatchingVisibleMetas().length > 0;
    }
 _computeGridLineItems(chartArea) {
        const axis = this.axis;
        const chart = this.chart;
        const options = this.options;
        const { grid , position , border  } = options;
        const offset = grid.offset;
        const isHorizontal = this.isHorizontal();
        const ticks = this.ticks;
        const ticksLength = ticks.length + (offset ? 1 : 0);
        const tl = getTickMarkLength(grid);
        const items = [];
        const borderOpts = border.setContext(this.getContext());
        const axisWidth = borderOpts.display ? borderOpts.width : 0;
        const axisHalfWidth = axisWidth / 2;
        const alignBorderValue = function(pixel) {
            return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, pixel, axisWidth);
        };
        let borderValue, i, lineValue, alignedLineValue;
        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;
        if (position === 'top') {
            borderValue = alignBorderValue(this.bottom);
            ty1 = this.bottom - tl;
            ty2 = borderValue - axisHalfWidth;
            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;
            y2 = chartArea.bottom;
        } else if (position === 'bottom') {
            borderValue = alignBorderValue(this.top);
            y1 = chartArea.top;
            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;
            ty1 = borderValue + axisHalfWidth;
            ty2 = this.top + tl;
        } else if (position === 'left') {
            borderValue = alignBorderValue(this.right);
            tx1 = this.right - tl;
            tx2 = borderValue - axisHalfWidth;
            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;
            x2 = chartArea.right;
        } else if (position === 'right') {
            borderValue = alignBorderValue(this.left);
            x1 = chartArea.left;
            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;
            tx1 = borderValue + axisHalfWidth;
            tx2 = this.left + tl;
        } else if (axis === 'x') {
            if (position === 'center') {
                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);
            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {
                const positionAxisID = Object.keys(position)[0];
                const value = position[positionAxisID];
                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));
            }
            y1 = chartArea.top;
            y2 = chartArea.bottom;
            ty1 = borderValue + axisHalfWidth;
            ty2 = ty1 + tl;
        } else if (axis === 'y') {
            if (position === 'center') {
                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);
            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {
                const positionAxisID1 = Object.keys(position)[0];
                const value1 = position[positionAxisID1];
                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));
            }
            tx1 = borderValue - axisHalfWidth;
            tx2 = tx1 - tl;
            x1 = chartArea.left;
            x2 = chartArea.right;
        }
        const limit = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.ticks.maxTicksLimit, ticksLength);
        const step = Math.max(1, Math.ceil(ticksLength / limit));
        for(i = 0; i < ticksLength; i += step){
            const context = this.getContext(i);
            const optsAtIndex = grid.setContext(context);
            const optsAtIndexBorder = border.setContext(context);
            const lineWidth = optsAtIndex.lineWidth;
            const lineColor = optsAtIndex.color;
            const borderDash = optsAtIndexBorder.dash || [];
            const borderDashOffset = optsAtIndexBorder.dashOffset;
            const tickWidth = optsAtIndex.tickWidth;
            const tickColor = optsAtIndex.tickColor;
            const tickBorderDash = optsAtIndex.tickBorderDash || [];
            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;
            lineValue = getPixelForGridLine(this, i, offset);
            if (lineValue === undefined) {
                continue;
            }
            alignedLineValue = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, lineValue, lineWidth);
            if (isHorizontal) {
                tx1 = tx2 = x1 = x2 = alignedLineValue;
            } else {
                ty1 = ty2 = y1 = y2 = alignedLineValue;
            }
            items.push({
                tx1,
                ty1,
                tx2,
                ty2,
                x1,
                y1,
                x2,
                y2,
                width: lineWidth,
                color: lineColor,
                borderDash,
                borderDashOffset,
                tickWidth,
                tickColor,
                tickBorderDash,
                tickBorderDashOffset
            });
        }
        this._ticksLength = ticksLength;
        this._borderValue = borderValue;
        return items;
    }
 _computeLabelItems(chartArea) {
        const axis = this.axis;
        const options = this.options;
        const { position , ticks: optionTicks  } = options;
        const isHorizontal = this.isHorizontal();
        const ticks = this.ticks;
        const { align , crossAlign , padding , mirror  } = optionTicks;
        const tl = getTickMarkLength(options.grid);
        const tickAndPadding = tl + padding;
        const hTickAndPadding = mirror ? -padding : tickAndPadding;
        const rotation = -(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);
        const items = [];
        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;
        let textBaseline = 'middle';
        if (position === 'top') {
            y = this.bottom - hTickAndPadding;
            textAlign = this._getXAxisLabelAlignment();
        } else if (position === 'bottom') {
            y = this.top + hTickAndPadding;
            textAlign = this._getXAxisLabelAlignment();
        } else if (position === 'left') {
            const ret = this._getYAxisLabelAlignment(tl);
            textAlign = ret.textAlign;
            x = ret.x;
        } else if (position === 'right') {
            const ret1 = this._getYAxisLabelAlignment(tl);
            textAlign = ret1.textAlign;
            x = ret1.x;
        } else if (axis === 'x') {
            if (position === 'center') {
                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;
            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {
                const positionAxisID = Object.keys(position)[0];
                const value = position[positionAxisID];
                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;
            }
            textAlign = this._getXAxisLabelAlignment();
        } else if (axis === 'y') {
            if (position === 'center') {
                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;
            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {
                const positionAxisID1 = Object.keys(position)[0];
                const value1 = position[positionAxisID1];
                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);
            }
            textAlign = this._getYAxisLabelAlignment(tl).textAlign;
        }
        if (axis === 'y') {
            if (align === 'start') {
                textBaseline = 'top';
            } else if (align === 'end') {
                textBaseline = 'bottom';
            }
        }
        const labelSizes = this._getLabelSizes();
        for(i = 0, ilen = ticks.length; i < ilen; ++i){
            tick = ticks[i];
            label = tick.label;
            const optsAtIndex = optionTicks.setContext(this.getContext(i));
            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;
            font = this._resolveTickFontOptions(i);
            lineHeight = font.lineHeight;
            lineCount = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label) ? label.length : 1;
            const halfCount = lineCount / 2;
            const color = optsAtIndex.color;
            const strokeColor = optsAtIndex.textStrokeColor;
            const strokeWidth = optsAtIndex.textStrokeWidth;
            let tickTextAlign = textAlign;
            if (isHorizontal) {
                x = pixel;
                if (textAlign === 'inner') {
                    if (i === ilen - 1) {
                        tickTextAlign = !this.options.reverse ? 'right' : 'left';
                    } else if (i === 0) {
                        tickTextAlign = !this.options.reverse ? 'left' : 'right';
                    } else {
                        tickTextAlign = 'center';
                    }
                }
                if (position === 'top') {
                    if (crossAlign === 'near' || rotation !== 0) {
                        textOffset = -lineCount * lineHeight + lineHeight / 2;
                    } else if (crossAlign === 'center') {
                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;
                    } else {
                        textOffset = -labelSizes.highest.height + lineHeight / 2;
                    }
                } else {
                    if (crossAlign === 'near' || rotation !== 0) {
                        textOffset = lineHeight / 2;
                    } else if (crossAlign === 'center') {
                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;
                    } else {
                        textOffset = labelSizes.highest.height - lineCount * lineHeight;
                    }
                }
                if (mirror) {
                    textOffset *= -1;
                }
                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {
                    x += lineHeight / 2 * Math.sin(rotation);
                }
            } else {
                y = pixel;
                textOffset = (1 - lineCount) * lineHeight / 2;
            }
            let backdrop;
            if (optsAtIndex.showLabelBackdrop) {
                const labelPadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(optsAtIndex.backdropPadding);
                const height = labelSizes.heights[i];
                const width = labelSizes.widths[i];
                let top = textOffset - labelPadding.top;
                let left = 0 - labelPadding.left;
                switch(textBaseline){
                    case 'middle':
                        top -= height / 2;
                        break;
                    case 'bottom':
                        top -= height;
                        break;
                }
                switch(textAlign){
                    case 'center':
                        left -= width / 2;
                        break;
                    case 'right':
                        left -= width;
                        break;
                }
                backdrop = {
                    left,
                    top,
                    width: width + labelPadding.width,
                    height: height + labelPadding.height,
                    color: optsAtIndex.backdropColor
                };
            }
            items.push({
                label,
                font,
                textOffset,
                options: {
                    rotation,
                    color,
                    strokeColor,
                    strokeWidth,
                    textAlign: tickTextAlign,
                    textBaseline,
                    translation: [
                        x,
                        y
                    ],
                    backdrop
                }
            });
        }
        return items;
    }
    _getXAxisLabelAlignment() {
        const { position , ticks  } = this.options;
        const rotation = -(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);
        if (rotation) {
            return position === 'top' ? 'left' : 'right';
        }
        let align = 'center';
        if (ticks.align === 'start') {
            align = 'left';
        } else if (ticks.align === 'end') {
            align = 'right';
        } else if (ticks.align === 'inner') {
            align = 'inner';
        }
        return align;
    }
    _getYAxisLabelAlignment(tl) {
        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;
        const labelSizes = this._getLabelSizes();
        const tickAndPadding = tl + padding;
        const widest = labelSizes.widest.width;
        let textAlign;
        let x;
        if (position === 'left') {
            if (mirror) {
                x = this.right + padding;
                if (crossAlign === 'near') {
                    textAlign = 'left';
                } else if (crossAlign === 'center') {
                    textAlign = 'center';
                    x += widest / 2;
                } else {
                    textAlign = 'right';
                    x += widest;
                }
            } else {
                x = this.right - tickAndPadding;
                if (crossAlign === 'near') {
                    textAlign = 'right';
                } else if (crossAlign === 'center') {
                    textAlign = 'center';
                    x -= widest / 2;
                } else {
                    textAlign = 'left';
                    x = this.left;
                }
            }
        } else if (position === 'right') {
            if (mirror) {
                x = this.left + padding;
                if (crossAlign === 'near') {
                    textAlign = 'right';
                } else if (crossAlign === 'center') {
                    textAlign = 'center';
                    x -= widest / 2;
                } else {
                    textAlign = 'left';
                    x -= widest;
                }
            } else {
                x = this.left + tickAndPadding;
                if (crossAlign === 'near') {
                    textAlign = 'left';
                } else if (crossAlign === 'center') {
                    textAlign = 'center';
                    x += widest / 2;
                } else {
                    textAlign = 'right';
                    x = this.right;
                }
            }
        } else {
            textAlign = 'right';
        }
        return {
            textAlign,
            x
        };
    }
 _computeLabelArea() {
        if (this.options.ticks.mirror) {
            return;
        }
        const chart = this.chart;
        const position = this.options.position;
        if (position === 'left' || position === 'right') {
            return {
                top: 0,
                left: this.left,
                bottom: chart.height,
                right: this.right
            };
        }
        if (position === 'top' || position === 'bottom') {
            return {
                top: this.top,
                left: 0,
                bottom: this.bottom,
                right: chart.width
            };
        }
    }
 drawBackground() {
        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;
        if (backgroundColor) {
            ctx.save();
            ctx.fillStyle = backgroundColor;
            ctx.fillRect(left, top, width, height);
            ctx.restore();
        }
    }
    getLineWidthForValue(value) {
        const grid = this.options.grid;
        if (!this._isVisible() || !grid.display) {
            return 0;
        }
        const ticks = this.ticks;
        const index = ticks.findIndex((t)=>t.value === value);
        if (index >= 0) {
            const opts = grid.setContext(this.getContext(index));
            return opts.lineWidth;
        }
        return 0;
    }
 drawGrid(chartArea) {
        const grid = this.options.grid;
        const ctx = this.ctx;
        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));
        let i, ilen;
        const drawLine = (p1, p2, style)=>{
            if (!style.width || !style.color) {
                return;
            }
            ctx.save();
            ctx.lineWidth = style.width;
            ctx.strokeStyle = style.color;
            ctx.setLineDash(style.borderDash || []);
            ctx.lineDashOffset = style.borderDashOffset;
            ctx.beginPath();
            ctx.moveTo(p1.x, p1.y);
            ctx.lineTo(p2.x, p2.y);
            ctx.stroke();
            ctx.restore();
        };
        if (grid.display) {
            for(i = 0, ilen = items.length; i < ilen; ++i){
                const item = items[i];
                if (grid.drawOnChartArea) {
                    drawLine({
                        x: item.x1,
                        y: item.y1
                    }, {
                        x: item.x2,
                        y: item.y2
                    }, item);
                }
                if (grid.drawTicks) {
                    drawLine({
                        x: item.tx1,
                        y: item.ty1
                    }, {
                        x: item.tx2,
                        y: item.ty2
                    }, {
                        color: item.tickColor,
                        width: item.tickWidth,
                        borderDash: item.tickBorderDash,
                        borderDashOffset: item.tickBorderDashOffset
                    });
                }
            }
        }
    }
 drawBorder() {
        const { chart , ctx , options: { border , grid  }  } = this;
        const borderOpts = border.setContext(this.getContext());
        const axisWidth = border.display ? borderOpts.width : 0;
        if (!axisWidth) {
            return;
        }
        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;
        const borderValue = this._borderValue;
        let x1, x2, y1, y2;
        if (this.isHorizontal()) {
            x1 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.left, axisWidth) - axisWidth / 2;
            x2 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.right, lastLineWidth) + lastLineWidth / 2;
            y1 = y2 = borderValue;
        } else {
            y1 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.top, axisWidth) - axisWidth / 2;
            y2 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;
            x1 = x2 = borderValue;
        }
        ctx.save();
        ctx.lineWidth = borderOpts.width;
        ctx.strokeStyle = borderOpts.color;
        ctx.beginPath();
        ctx.moveTo(x1, y1);
        ctx.lineTo(x2, y2);
        ctx.stroke();
        ctx.restore();
    }
 drawLabels(chartArea) {
        const optionTicks = this.options.ticks;
        if (!optionTicks.display) {
            return;
        }
        const ctx = this.ctx;
        const area = this._computeLabelArea();
        if (area) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, area);
        }
        const items = this.getLabelItems(chartArea);
        for (const item of items){
            const renderTextOptions = item.options;
            const tickFont = item.font;
            const label = item.label;
            const y = item.textOffset;
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, label, 0, y, tickFont, renderTextOptions);
        }
        if (area) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);
        }
    }
 drawTitle() {
        const { ctx , options: { position , title , reverse  }  } = this;
        if (!title.display) {
            return;
        }
        const font = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(title.font);
        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(title.padding);
        const align = title.align;
        let offset = font.lineHeight / 2;
        if (position === 'bottom' || position === 'center' || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {
            offset += padding.bottom;
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(title.text)) {
                offset += font.lineHeight * (title.text.length - 1);
            }
        } else {
            offset += padding.top;
        }
        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, title.text, 0, 0, font, {
            color: title.color,
            maxWidth,
            rotation,
            textAlign: titleAlign(align, position, reverse),
            textBaseline: 'middle',
            translation: [
                titleX,
                titleY
            ]
        });
    }
    draw(chartArea) {
        if (!this._isVisible()) {
            return;
        }
        this.drawBackground();
        this.drawGrid(chartArea);
        this.drawBorder();
        this.drawTitle();
        this.drawLabels(chartArea);
    }
 _layers() {
        const opts = this.options;
        const tz = opts.ticks && opts.ticks.z || 0;
        const gz = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(opts.grid && opts.grid.z, -1);
        const bz = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(opts.border && opts.border.z, 0);
        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {
            return [
                {
                    z: tz,
                    draw: (chartArea)=>{
                        this.draw(chartArea);
                    }
                }
            ];
        }
        return [
            {
                z: gz,
                draw: (chartArea)=>{
                    this.drawBackground();
                    this.drawGrid(chartArea);
                    this.drawTitle();
                }
            },
            {
                z: bz,
                draw: ()=>{
                    this.drawBorder();
                }
            },
            {
                z: tz,
                draw: (chartArea)=>{
                    this.drawLabels(chartArea);
                }
            }
        ];
    }
 getMatchingVisibleMetas(type) {
        const metas = this.chart.getSortedVisibleDatasetMetas();
        const axisID = this.axis + 'AxisID';
        const result = [];
        let i, ilen;
        for(i = 0, ilen = metas.length; i < ilen; ++i){
            const meta = metas[i];
            if (meta[axisID] === this.id && (!type || meta.type === type)) {
                result.push(meta);
            }
        }
        return result;
    }
 _resolveTickFontOptions(index) {
        const opts = this.options.ticks.setContext(this.getContext(index));
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font);
    }
 _maxDigits() {
        const fontSize = this._resolveTickFontOptions(0).lineHeight;
        return (this.isHorizontal() ? this.width : this.height) / fontSize;
    }
}

class TypedRegistry {
    constructor(type, scope, override){
        this.type = type;
        this.scope = scope;
        this.override = override;
        this.items = Object.create(null);
    }
    isForType(type) {
        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);
    }
 register(item) {
        const proto = Object.getPrototypeOf(item);
        let parentScope;
        if (isIChartComponent(proto)) {
            parentScope = this.register(proto);
        }
        const items = this.items;
        const id = item.id;
        const scope = this.scope + '.' + id;
        if (!id) {
            throw new Error('class does not have id: ' + item);
        }
        if (id in items) {
            return scope;
        }
        items[id] = item;
        registerDefaults(item, scope, parentScope);
        if (this.override) {
            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.override(item.id, item.overrides);
        }
        return scope;
    }
 get(id) {
        return this.items[id];
    }
 unregister(item) {
        const items = this.items;
        const id = item.id;
        const scope = this.scope;
        if (id in items) {
            delete items[id];
        }
        if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d[scope]) {
            delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d[scope][id];
            if (this.override) {
                delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[id];
            }
        }
    }
}
function registerDefaults(item, scope, parentScope) {
    const itemDefaults = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a4)(Object.create(null), [
        parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.get(parentScope) : {},
        _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.get(scope),
        item.defaults
    ]);
    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set(scope, itemDefaults);
    if (item.defaultRoutes) {
        routeDefaults(scope, item.defaultRoutes);
    }
    if (item.descriptors) {
        _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe(scope, item.descriptors);
    }
}
function routeDefaults(scope, routes) {
    Object.keys(routes).forEach((property)=>{
        const propertyParts = property.split('.');
        const sourceName = propertyParts.pop();
        const sourceScope = [
            scope
        ].concat(propertyParts).join('.');
        const parts = routes[property].split('.');
        const targetName = parts.pop();
        const targetScope = parts.join('.');
        _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.route(sourceScope, sourceName, targetScope, targetName);
    });
}
function isIChartComponent(proto) {
    return 'id' in proto && 'defaults' in proto;
}

class Registry {
    constructor(){
        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);
        this.elements = new TypedRegistry(Element, 'elements');
        this.plugins = new TypedRegistry(Object, 'plugins');
        this.scales = new TypedRegistry(Scale, 'scales');
        this._typedRegistries = [
            this.controllers,
            this.scales,
            this.elements
        ];
    }
 add(...args) {
        this._each('register', args);
    }
    remove(...args) {
        this._each('unregister', args);
    }
 addControllers(...args) {
        this._each('register', args, this.controllers);
    }
 addElements(...args) {
        this._each('register', args, this.elements);
    }
 addPlugins(...args) {
        this._each('register', args, this.plugins);
    }
 addScales(...args) {
        this._each('register', args, this.scales);
    }
 getController(id) {
        return this._get(id, this.controllers, 'controller');
    }
 getElement(id) {
        return this._get(id, this.elements, 'element');
    }
 getPlugin(id) {
        return this._get(id, this.plugins, 'plugin');
    }
 getScale(id) {
        return this._get(id, this.scales, 'scale');
    }
 removeControllers(...args) {
        this._each('unregister', args, this.controllers);
    }
 removeElements(...args) {
        this._each('unregister', args, this.elements);
    }
 removePlugins(...args) {
        this._each('unregister', args, this.plugins);
    }
 removeScales(...args) {
        this._each('unregister', args, this.scales);
    }
 _each(method, args, typedRegistry) {
        [
            ...args
        ].forEach((arg)=>{
            const reg = typedRegistry || this._getRegistryForType(arg);
            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {
                this._exec(method, reg, arg);
            } else {
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(arg, (item)=>{
                    const itemReg = typedRegistry || this._getRegistryForType(item);
                    this._exec(method, itemReg, item);
                });
            }
        });
    }
 _exec(method, registry, component) {
        const camelMethod = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a5)(method);
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(component['before' + camelMethod], [], component);
        registry[method](component);
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(component['after' + camelMethod], [], component);
    }
 _getRegistryForType(type) {
        for(let i = 0; i < this._typedRegistries.length; i++){
            const reg = this._typedRegistries[i];
            if (reg.isForType(type)) {
                return reg;
            }
        }
        return this.plugins;
    }
 _get(id, typedRegistry, type) {
        const item = typedRegistry.get(id);
        if (item === undefined) {
            throw new Error('"' + id + '" is not a registered ' + type + '.');
        }
        return item;
    }
}
var registry = /* #__PURE__ */ new Registry();

class PluginService {
    constructor(){
        this._init = [];
    }
 notify(chart, hook, args, filter) {
        if (hook === 'beforeInit') {
            this._init = this._createDescriptors(chart, true);
            this._notify(this._init, chart, 'install');
        }
        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);
        const result = this._notify(descriptors, chart, hook, args);
        if (hook === 'afterDestroy') {
            this._notify(descriptors, chart, 'stop');
            this._notify(this._init, chart, 'uninstall');
        }
        return result;
    }
 _notify(descriptors, chart, hook, args) {
        args = args || {};
        for (const descriptor of descriptors){
            const plugin = descriptor.plugin;
            const method = plugin[hook];
            const params = [
                chart,
                args,
                descriptor.options
            ];
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(method, params, plugin) === false && args.cancelable) {
                return false;
            }
        }
        return true;
    }
    invalidate() {
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(this._cache)) {
            this._oldCache = this._cache;
            this._cache = undefined;
        }
    }
 _descriptors(chart) {
        if (this._cache) {
            return this._cache;
        }
        const descriptors = this._cache = this._createDescriptors(chart);
        this._notifyStateChanges(chart);
        return descriptors;
    }
    _createDescriptors(chart, all) {
        const config = chart && chart.config;
        const options = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(config.options && config.options.plugins, {});
        const plugins = allPlugins(config);
        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);
    }
 _notifyStateChanges(chart) {
        const previousDescriptors = this._oldCache || [];
        const descriptors = this._cache;
        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));
        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');
        this._notify(diff(descriptors, previousDescriptors), chart, 'start');
    }
}
 function allPlugins(config) {
    const localIds = {};
    const plugins = [];
    const keys = Object.keys(registry.plugins.items);
    for(let i = 0; i < keys.length; i++){
        plugins.push(registry.getPlugin(keys[i]));
    }
    const local = config.plugins || [];
    for(let i1 = 0; i1 < local.length; i1++){
        const plugin = local[i1];
        if (plugins.indexOf(plugin) === -1) {
            plugins.push(plugin);
            localIds[plugin.id] = true;
        }
    }
    return {
        plugins,
        localIds
    };
}
function getOpts(options, all) {
    if (!all && options === false) {
        return null;
    }
    if (options === true) {
        return {};
    }
    return options;
}
function createDescriptors(chart, { plugins , localIds  }, options, all) {
    const result = [];
    const context = chart.getContext();
    for (const plugin of plugins){
        const id = plugin.id;
        const opts = getOpts(options[id], all);
        if (opts === null) {
            continue;
        }
        result.push({
            plugin,
            options: pluginOpts(chart.config, {
                plugin,
                local: localIds[id]
            }, opts, context)
        });
    }
    return result;
}
function pluginOpts(config, { plugin , local  }, opts, context) {
    const keys = config.pluginScopeKeys(plugin);
    const scopes = config.getOptionScopes(opts, keys);
    if (local && plugin.defaults) {
        scopes.push(plugin.defaults);
    }
    return config.createResolver(scopes, context, [
        ''
    ], {
        scriptable: false,
        indexable: false,
        allKeys: true
    });
}

function getIndexAxis(type, options) {
    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type] || {};
    const datasetOptions = (options.datasets || {})[type] || {};
    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';
}
function getAxisFromDefaultScaleID(id, indexAxis) {
    let axis = id;
    if (id === '_index_') {
        axis = indexAxis;
    } else if (id === '_value_') {
        axis = indexAxis === 'x' ? 'y' : 'x';
    }
    return axis;
}
function getDefaultScaleIDFromAxis(axis, indexAxis) {
    return axis === indexAxis ? '_index_' : '_value_';
}
function axisFromPosition(position) {
    if (position === 'top' || position === 'bottom') {
        return 'x';
    }
    if (position === 'left' || position === 'right') {
        return 'y';
    }
}
function determineAxis(id, scaleOptions) {
    if (id === 'x' || id === 'y' || id === 'r') {
        return id;
    }
    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);
    if (id) {
        return id;
    }
    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);
}
function mergeScaleConfig(config, options) {
    const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[config.type] || {
        scales: {}
    };
    const configScales = options.scales || {};
    const chartIndexAxis = getIndexAxis(config.type, options);
    const scales = Object.create(null);
    Object.keys(configScales).forEach((id)=>{
        const scaleConf = configScales[id];
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(scaleConf)) {
            return console.error(`Invalid scale configuration for scale: ${id}`);
        }
        if (scaleConf._proxy) {
            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);
        }
        const axis = determineAxis(id, scaleConf);
        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);
        const defaultScaleOptions = chartDefaults.scales || {};
        scales[id] = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(Object.create(null), [
            {
                axis
            },
            scaleConf,
            defaultScaleOptions[axis],
            defaultScaleOptions[defaultId]
        ]);
    });
    config.data.datasets.forEach((dataset)=>{
        const type = dataset.type || config.type;
        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);
        const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[type] || {};
        const defaultScaleOptions = datasetDefaults.scales || {};
        Object.keys(defaultScaleOptions).forEach((defaultID)=>{
            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);
            const id = dataset[axis + 'AxisID'] || axis;
            scales[id] = scales[id] || Object.create(null);
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(scales[id], [
                {
                    axis
                },
                configScales[id],
                defaultScaleOptions[defaultID]
            ]);
        });
    });
    Object.keys(scales).forEach((key)=>{
        const scale = scales[key];
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(scale, [
            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.scales[scale.type],
            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.scale
        ]);
    });
    return scales;
}
function initOptions(config) {
    const options = config.options || (config.options = {});
    options.plugins = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.plugins, {});
    options.scales = mergeScaleConfig(config, options);
}
function initData(data) {
    data = data || {};
    data.datasets = data.datasets || [];
    data.labels = data.labels || [];
    return data;
}
function initConfig(config) {
    config = config || {};
    config.data = initData(config.data);
    initOptions(config);
    return config;
}
const keyCache = new Map();
const keysCached = new Set();
function cachedKeys(cacheKey, generate) {
    let keys = keyCache.get(cacheKey);
    if (!keys) {
        keys = generate();
        keyCache.set(cacheKey, keys);
        keysCached.add(keys);
    }
    return keys;
}
const addIfFound = (set, obj, key)=>{
    const opts = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, key);
    if (opts !== undefined) {
        set.add(opts);
    }
};
class Config {
    constructor(config){
        this._config = initConfig(config);
        this._scopeCache = new Map();
        this._resolverCache = new Map();
    }
    get platform() {
        return this._config.platform;
    }
    get type() {
        return this._config.type;
    }
    set type(type) {
        this._config.type = type;
    }
    get data() {
        return this._config.data;
    }
    set data(data) {
        this._config.data = initData(data);
    }
    get options() {
        return this._config.options;
    }
    set options(options) {
        this._config.options = options;
    }
    get plugins() {
        return this._config.plugins;
    }
    update() {
        const config = this._config;
        this.clearCache();
        initOptions(config);
    }
    clearCache() {
        this._scopeCache.clear();
        this._resolverCache.clear();
    }
 datasetScopeKeys(datasetType) {
        return cachedKeys(datasetType, ()=>[
                [
                    `datasets.${datasetType}`,
                    ''
                ]
            ]);
    }
 datasetAnimationScopeKeys(datasetType, transition) {
        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[
                [
                    `datasets.${datasetType}.transitions.${transition}`,
                    `transitions.${transition}`
                ],
                [
                    `datasets.${datasetType}`,
                    ''
                ]
            ]);
    }
 datasetElementScopeKeys(datasetType, elementType) {
        return cachedKeys(`${datasetType}-${elementType}`, ()=>[
                [
                    `datasets.${datasetType}.elements.${elementType}`,
                    `datasets.${datasetType}`,
                    `elements.${elementType}`,
                    ''
                ]
            ]);
    }
 pluginScopeKeys(plugin) {
        const id = plugin.id;
        const type = this.type;
        return cachedKeys(`${type}-plugin-${id}`, ()=>[
                [
                    `plugins.${id}`,
                    ...plugin.additionalOptionScopes || []
                ]
            ]);
    }
 _cachedScopes(mainScope, resetCache) {
        const _scopeCache = this._scopeCache;
        let cache = _scopeCache.get(mainScope);
        if (!cache || resetCache) {
            cache = new Map();
            _scopeCache.set(mainScope, cache);
        }
        return cache;
    }
 getOptionScopes(mainScope, keyLists, resetCache) {
        const { options , type  } = this;
        const cache = this._cachedScopes(mainScope, resetCache);
        const cached = cache.get(keyLists);
        if (cached) {
            return cached;
        }
        const scopes = new Set();
        keyLists.forEach((keys)=>{
            if (mainScope) {
                scopes.add(mainScope);
                keys.forEach((key)=>addIfFound(scopes, mainScope, key));
            }
            keys.forEach((key)=>addIfFound(scopes, options, key));
            keys.forEach((key)=>addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[type] || {}, key));
            keys.forEach((key)=>addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d, key));
            keys.forEach((key)=>addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a6, key));
        });
        const array = Array.from(scopes);
        if (array.length === 0) {
            array.push(Object.create(null));
        }
        if (keysCached.has(keyLists)) {
            cache.set(keyLists, array);
        }
        return array;
    }
 chartOptionScopes() {
        const { options , type  } = this;
        return [
            options,
            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[type] || {},
            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type] || {},
            {
                type
            },
            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d,
            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a6
        ];
    }
 resolveNamedOptions(scopes, names, context, prefixes = [
        ''
    ]) {
        const result = {
            $shared: true
        };
        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);
        let options = resolver;
        if (needContext(resolver, names)) {
            result.$shared = false;
            context = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(context) ? context() : context;
            const subResolver = this.createResolver(scopes, context, subPrefixes);
            options = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a8)(resolver, context, subResolver);
        }
        for (const prop of names){
            result[prop] = options[prop];
        }
        return result;
    }
 createResolver(scopes, context, prefixes = [
        ''
    ], descriptorDefaults) {
        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(context) ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a8)(resolver, context, undefined, descriptorDefaults) : resolver;
    }
}
function getResolver(resolverCache, scopes, prefixes) {
    let cache = resolverCache.get(scopes);
    if (!cache) {
        cache = new Map();
        resolverCache.set(scopes, cache);
    }
    const cacheKey = prefixes.join();
    let cached = cache.get(cacheKey);
    if (!cached) {
        const resolver = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a9)(scopes, prefixes);
        cached = {
            resolver,
            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))
        };
        cache.set(cacheKey, cached);
    }
    return cached;
}
const hasFunction = (value)=>(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(value[key]), false);
function needContext(proxy, names) {
    const { isScriptable , isIndexable  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aa)(proxy);
    for (const prop of names){
        const scriptable = isScriptable(prop);
        const indexable = isIndexable(prop);
        const value = (indexable || scriptable) && proxy[prop];
        if (scriptable && ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(value) || hasFunction(value)) || indexable && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(value)) {
            return true;
        }
    }
    return false;
}

var version = "4.2.1";

const KNOWN_POSITIONS = [
    'top',
    'bottom',
    'left',
    'right',
    'chartArea'
];
function positionIsHorizontal(position, axis) {
    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';
}
function compare2Level(l1, l2) {
    return function(a, b) {
        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];
    };
}
function onAnimationsComplete(context) {
    const chart = context.chart;
    const animationOptions = chart.options.animation;
    chart.notifyPlugins('afterRender');
    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(animationOptions && animationOptions.onComplete, [
        context
    ], chart);
}
function onAnimationProgress(context) {
    const chart = context.chart;
    const animationOptions = chart.options.animation;
    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(animationOptions && animationOptions.onProgress, [
        context
    ], chart);
}
 function getCanvas(item) {
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.M)() && typeof item === 'string') {
        item = document.getElementById(item);
    } else if (item && item.length) {
        item = item[0];
    }
    if (item && item.canvas) {
        item = item.canvas;
    }
    return item;
}
const instances = {};
const getChart = (key)=>{
    const canvas = getCanvas(key);
    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();
};
function moveNumericKeys(obj, start, move) {
    const keys = Object.keys(obj);
    for (const key of keys){
        const intKey = +key;
        if (intKey >= start) {
            const value = obj[key];
            delete obj[key];
            if (move > 0 || intKey > start) {
                obj[intKey + move] = value;
            }
        }
    }
}
 function determineLastEvent(e, lastEvent, inChartArea, isClick) {
    if (!inChartArea || e.type === 'mouseout') {
        return null;
    }
    if (isClick) {
        return lastEvent;
    }
    return e;
}
function getDatasetArea(meta) {
    const { xScale , yScale  } = meta;
    if (xScale && yScale) {
        return {
            left: xScale.left,
            right: xScale.right,
            top: yScale.top,
            bottom: yScale.bottom
        };
    }
}
class Chart {
    static defaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d;
    static instances = instances;
    static overrides = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3;
    static registry = registry;
    static version = version;
    static getChart = getChart;
    static register(...items) {
        registry.add(...items);
        invalidatePlugins();
    }
    static unregister(...items) {
        registry.remove(...items);
        invalidatePlugins();
    }
    constructor(item, userConfig){
        const config = this.config = new Config(userConfig);
        const initialCanvas = getCanvas(item);
        const existingChart = getChart(initialCanvas);
        if (existingChart) {
            throw new Error('Canvas is already in use. Chart with ID \'' + existingChart.id + '\'' + ' must be destroyed before the canvas with ID \'' + existingChart.canvas.id + '\' can be reused.');
        }
        const options = config.createResolver(config.chartOptionScopes(), this.getContext());
        this.platform = new (config.platform || _detectPlatform(initialCanvas))();
        this.platform.updateConfig(config);
        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);
        const canvas = context && context.canvas;
        const height = canvas && canvas.height;
        const width = canvas && canvas.width;
        this.id = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ac)();
        this.ctx = context;
        this.canvas = canvas;
        this.width = width;
        this.height = height;
        this._options = options;
        this._aspectRatio = this.aspectRatio;
        this._layers = [];
        this._metasets = [];
        this._stacks = undefined;
        this.boxes = [];
        this.currentDevicePixelRatio = undefined;
        this.chartArea = undefined;
        this._active = [];
        this._lastEvent = undefined;
        this._listeners = {};
         this._responsiveListeners = undefined;
        this._sortedMetasets = [];
        this.scales = {};
        this._plugins = new PluginService();
        this.$proxies = {};
        this._hiddenIndices = {};
        this.attached = false;
        this._animationsDisabled = undefined;
        this.$context = undefined;
        this._doResize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ad)((mode)=>this.update(mode), options.resizeDelay || 0);
        this._dataChanges = [];
        instances[this.id] = this;
        if (!context || !canvas) {
            console.error("Failed to create chart: can't acquire context from the given item");
            return;
        }
        animator.listen(this, 'complete', onAnimationsComplete);
        animator.listen(this, 'progress', onAnimationProgress);
        this._initialize();
        if (this.attached) {
            this.update();
        }
    }
    get aspectRatio() {
        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(aspectRatio)) {
            return aspectRatio;
        }
        if (maintainAspectRatio && _aspectRatio) {
            return _aspectRatio;
        }
        return height ? width / height : null;
    }
    get data() {
        return this.config.data;
    }
    set data(data) {
        this.config.data = data;
    }
    get options() {
        return this._options;
    }
    set options(options) {
        this.config.options = options;
    }
    get registry() {
        return registry;
    }
 _initialize() {
        this.notifyPlugins('beforeInit');
        if (this.options.responsive) {
            this.resize();
        } else {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ae)(this, this.options.devicePixelRatio);
        }
        this.bindEvents();
        this.notifyPlugins('afterInit');
        return this;
    }
    clear() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(this.canvas, this.ctx);
        return this;
    }
    stop() {
        animator.stop(this);
        return this;
    }
 resize(width, height) {
        if (!animator.running(this)) {
            this._resize(width, height);
        } else {
            this._resizeBeforeDraw = {
                width,
                height
            };
        }
    }
    _resize(width, height) {
        const options = this.options;
        const canvas = this.canvas;
        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;
        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);
        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();
        const mode = this.width ? 'resize' : 'attach';
        this.width = newSize.width;
        this.height = newSize.height;
        this._aspectRatio = this.aspectRatio;
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ae)(this, newRatio, true)) {
            return;
        }
        this.notifyPlugins('resize', {
            size: newSize
        });
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(options.onResize, [
            this,
            newSize
        ], this);
        if (this.attached) {
            if (this._doResize(mode)) {
                this.render();
            }
        }
    }
    ensureScalesHaveIDs() {
        const options = this.options;
        const scalesOptions = options.scales || {};
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(scalesOptions, (axisOptions, axisID)=>{
            axisOptions.id = axisID;
        });
    }
 buildOrUpdateScales() {
        const options = this.options;
        const scaleOpts = options.scales;
        const scales = this.scales;
        const updated = Object.keys(scales).reduce((obj, id)=>{
            obj[id] = false;
            return obj;
        }, {});
        let items = [];
        if (scaleOpts) {
            items = items.concat(Object.keys(scaleOpts).map((id)=>{
                const scaleOptions = scaleOpts[id];
                const axis = determineAxis(id, scaleOptions);
                const isRadial = axis === 'r';
                const isHorizontal = axis === 'x';
                return {
                    options: scaleOptions,
                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',
                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'
                };
            }));
        }
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(items, (item)=>{
            const scaleOptions = item.options;
            const id = scaleOptions.id;
            const axis = determineAxis(id, scaleOptions);
            const scaleType = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(scaleOptions.type, item.dtype);
            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {
                scaleOptions.position = item.dposition;
            }
            updated[id] = true;
            let scale = null;
            if (id in scales && scales[id].type === scaleType) {
                scale = scales[id];
            } else {
                const scaleClass = registry.getScale(scaleType);
                scale = new scaleClass({
                    id,
                    type: scaleType,
                    ctx: this.ctx,
                    chart: this
                });
                scales[scale.id] = scale;
            }
            scale.init(scaleOptions, options);
        });
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(updated, (hasUpdated, id)=>{
            if (!hasUpdated) {
                delete scales[id];
            }
        });
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(scales, (scale)=>{
            layouts.configure(this, scale, scale.options);
            layouts.addBox(this, scale);
        });
    }
 _updateMetasets() {
        const metasets = this._metasets;
        const numData = this.data.datasets.length;
        const numMeta = metasets.length;
        metasets.sort((a, b)=>a.index - b.index);
        if (numMeta > numData) {
            for(let i = numData; i < numMeta; ++i){
                this._destroyDatasetMeta(i);
            }
            metasets.splice(numData, numMeta - numData);
        }
        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));
    }
 _removeUnreferencedMetasets() {
        const { _metasets: metasets , data: { datasets  }  } = this;
        if (metasets.length > datasets.length) {
            delete this._stacks;
        }
        metasets.forEach((meta, index)=>{
            if (datasets.filter((x)=>x === meta._dataset).length === 0) {
                this._destroyDatasetMeta(index);
            }
        });
    }
    buildOrUpdateControllers() {
        const newControllers = [];
        const datasets = this.data.datasets;
        let i, ilen;
        this._removeUnreferencedMetasets();
        for(i = 0, ilen = datasets.length; i < ilen; i++){
            const dataset = datasets[i];
            let meta = this.getDatasetMeta(i);
            const type = dataset.type || this.config.type;
            if (meta.type && meta.type !== type) {
                this._destroyDatasetMeta(i);
                meta = this.getDatasetMeta(i);
            }
            meta.type = type;
            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);
            meta.order = dataset.order || 0;
            meta.index = i;
            meta.label = '' + dataset.label;
            meta.visible = this.isDatasetVisible(i);
            if (meta.controller) {
                meta.controller.updateIndex(i);
                meta.controller.linkScales();
            } else {
                const ControllerClass = registry.getController(type);
                const { datasetElementType , dataElementType  } = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type];
                Object.assign(ControllerClass, {
                    dataElementType: registry.getElement(dataElementType),
                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)
                });
                meta.controller = new ControllerClass(this, i);
                newControllers.push(meta.controller);
            }
        }
        this._updateMetasets();
        return newControllers;
    }
 _resetElements() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.data.datasets, (dataset, datasetIndex)=>{
            this.getDatasetMeta(datasetIndex).controller.reset();
        }, this);
    }
 reset() {
        this._resetElements();
        this.notifyPlugins('reset');
    }
    update(mode) {
        const config = this.config;
        config.update();
        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());
        const animsDisabled = this._animationsDisabled = !options.animation;
        this._updateScales();
        this._checkEventBindings();
        this._updateHiddenIndices();
        this._plugins.invalidate();
        if (this.notifyPlugins('beforeUpdate', {
            mode,
            cancelable: true
        }) === false) {
            return;
        }
        const newControllers = this.buildOrUpdateControllers();
        this.notifyPlugins('beforeElementsUpdate');
        let minPadding = 0;
        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){
            const { controller  } = this.getDatasetMeta(i);
            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;
            controller.buildOrUpdateElements(reset);
            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);
        }
        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;
        this._updateLayout(minPadding);
        if (!animsDisabled) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(newControllers, (controller)=>{
                controller.reset();
            });
        }
        this._updateDatasets(mode);
        this.notifyPlugins('afterUpdate', {
            mode
        });
        this._layers.sort(compare2Level('z', '_idx'));
        const { _active , _lastEvent  } = this;
        if (_lastEvent) {
            this._eventHandler(_lastEvent, true);
        } else if (_active.length) {
            this._updateHoverStyles(_active, _active, true);
        }
        this.render();
    }
 _updateScales() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.scales, (scale)=>{
            layouts.removeBox(this, scale);
        });
        this.ensureScalesHaveIDs();
        this.buildOrUpdateScales();
    }
 _checkEventBindings() {
        const options = this.options;
        const existingEvents = new Set(Object.keys(this._listeners));
        const newEvents = new Set(options.events);
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ag)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {
            this.unbindEvents();
            this.bindEvents();
        }
    }
 _updateHiddenIndices() {
        const { _hiddenIndices  } = this;
        const changes = this._getUniformDataChanges() || [];
        for (const { method , start , count  } of changes){
            const move = method === '_removeElements' ? -count : count;
            moveNumericKeys(_hiddenIndices, start, move);
        }
    }
 _getUniformDataChanges() {
        const _dataChanges = this._dataChanges;
        if (!_dataChanges || !_dataChanges.length) {
            return;
        }
        this._dataChanges = [];
        const datasetCount = this.data.datasets.length;
        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));
        const changeSet = makeSet(0);
        for(let i = 1; i < datasetCount; i++){
            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ag)(changeSet, makeSet(i))) {
                return;
            }
        }
        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({
                method: a[1],
                start: +a[2],
                count: +a[3]
            }));
    }
 _updateLayout(minPadding) {
        if (this.notifyPlugins('beforeLayout', {
            cancelable: true
        }) === false) {
            return;
        }
        layouts.update(this, this.width, this.height, minPadding);
        const area = this.chartArea;
        const noArea = area.width <= 0 || area.height <= 0;
        this._layers = [];
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.boxes, (box)=>{
            if (noArea && box.position === 'chartArea') {
                return;
            }
            if (box.configure) {
                box.configure();
            }
            this._layers.push(...box._layers());
        }, this);
        this._layers.forEach((item, index)=>{
            item._idx = index;
        });
        this.notifyPlugins('afterLayout');
    }
 _updateDatasets(mode) {
        if (this.notifyPlugins('beforeDatasetsUpdate', {
            mode,
            cancelable: true
        }) === false) {
            return;
        }
        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){
            this.getDatasetMeta(i).controller.configure();
        }
        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){
            this._updateDataset(i1, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(mode) ? mode({
                datasetIndex: i1
            }) : mode);
        }
        this.notifyPlugins('afterDatasetsUpdate', {
            mode
        });
    }
 _updateDataset(index, mode) {
        const meta = this.getDatasetMeta(index);
        const args = {
            meta,
            index,
            mode,
            cancelable: true
        };
        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {
            return;
        }
        meta.controller._update(mode);
        args.cancelable = false;
        this.notifyPlugins('afterDatasetUpdate', args);
    }
    render() {
        if (this.notifyPlugins('beforeRender', {
            cancelable: true
        }) === false) {
            return;
        }
        if (animator.has(this)) {
            if (this.attached && !animator.running(this)) {
                animator.start(this);
            }
        } else {
            this.draw();
            onAnimationsComplete({
                chart: this
            });
        }
    }
    draw() {
        let i;
        if (this._resizeBeforeDraw) {
            const { width , height  } = this._resizeBeforeDraw;
            this._resize(width, height);
            this._resizeBeforeDraw = null;
        }
        this.clear();
        if (this.width <= 0 || this.height <= 0) {
            return;
        }
        if (this.notifyPlugins('beforeDraw', {
            cancelable: true
        }) === false) {
            return;
        }
        const layers = this._layers;
        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){
            layers[i].draw(this.chartArea);
        }
        this._drawDatasets();
        for(; i < layers.length; ++i){
            layers[i].draw(this.chartArea);
        }
        this.notifyPlugins('afterDraw');
    }
 _getSortedDatasetMetas(filterVisible) {
        const metasets = this._sortedMetasets;
        const result = [];
        let i, ilen;
        for(i = 0, ilen = metasets.length; i < ilen; ++i){
            const meta = metasets[i];
            if (!filterVisible || meta.visible) {
                result.push(meta);
            }
        }
        return result;
    }
 getSortedVisibleDatasetMetas() {
        return this._getSortedDatasetMetas(true);
    }
 _drawDatasets() {
        if (this.notifyPlugins('beforeDatasetsDraw', {
            cancelable: true
        }) === false) {
            return;
        }
        const metasets = this.getSortedVisibleDatasetMetas();
        for(let i = metasets.length - 1; i >= 0; --i){
            this._drawDataset(metasets[i]);
        }
        this.notifyPlugins('afterDatasetsDraw');
    }
 _drawDataset(meta) {
        const ctx = this.ctx;
        const clip = meta._clip;
        const useClip = !clip.disabled;
        const area = getDatasetArea(meta) || this.chartArea;
        const args = {
            meta,
            index: meta.index,
            cancelable: true
        };
        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {
            return;
        }
        if (useClip) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, {
                left: clip.left === false ? 0 : area.left - clip.left,
                right: clip.right === false ? this.width : area.right + clip.right,
                top: clip.top === false ? 0 : area.top - clip.top,
                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom
            });
        }
        meta.controller.draw();
        if (useClip) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);
        }
        args.cancelable = false;
        this.notifyPlugins('afterDatasetDraw', args);
    }
 isPointInArea(point) {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(point, this.chartArea, this._minPadding);
    }
    getElementsAtEventForMode(e, mode, options, useFinalPosition) {
        const method = Interaction.modes[mode];
        if (typeof method === 'function') {
            return method(this, e, options, useFinalPosition);
        }
        return [];
    }
    getDatasetMeta(datasetIndex) {
        const dataset = this.data.datasets[datasetIndex];
        const metasets = this._metasets;
        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();
        if (!meta) {
            meta = {
                type: null,
                data: [],
                dataset: null,
                controller: null,
                hidden: null,
                xAxisID: null,
                yAxisID: null,
                order: dataset && dataset.order || 0,
                index: datasetIndex,
                _dataset: dataset,
                _parsed: [],
                _sorted: false
            };
            metasets.push(meta);
        }
        return meta;
    }
    getContext() {
        return this.$context || (this.$context = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(null, {
            chart: this,
            type: 'chart'
        }));
    }
    getVisibleDatasetCount() {
        return this.getSortedVisibleDatasetMetas().length;
    }
    isDatasetVisible(datasetIndex) {
        const dataset = this.data.datasets[datasetIndex];
        if (!dataset) {
            return false;
        }
        const meta = this.getDatasetMeta(datasetIndex);
        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;
    }
    setDatasetVisibility(datasetIndex, visible) {
        const meta = this.getDatasetMeta(datasetIndex);
        meta.hidden = !visible;
    }
    toggleDataVisibility(index) {
        this._hiddenIndices[index] = !this._hiddenIndices[index];
    }
    getDataVisibility(index) {
        return !this._hiddenIndices[index];
    }
 _updateVisibility(datasetIndex, dataIndex, visible) {
        const mode = visible ? 'show' : 'hide';
        const meta = this.getDatasetMeta(datasetIndex);
        const anims = meta.controller._resolveAnimations(undefined, mode);
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(dataIndex)) {
            meta.data[dataIndex].hidden = !visible;
            this.update();
        } else {
            this.setDatasetVisibility(datasetIndex, visible);
            anims.update(meta, {
                visible
            });
            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);
        }
    }
    hide(datasetIndex, dataIndex) {
        this._updateVisibility(datasetIndex, dataIndex, false);
    }
    show(datasetIndex, dataIndex) {
        this._updateVisibility(datasetIndex, dataIndex, true);
    }
 _destroyDatasetMeta(datasetIndex) {
        const meta = this._metasets[datasetIndex];
        if (meta && meta.controller) {
            meta.controller._destroy();
        }
        delete this._metasets[datasetIndex];
    }
    _stop() {
        let i, ilen;
        this.stop();
        animator.remove(this);
        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){
            this._destroyDatasetMeta(i);
        }
    }
    destroy() {
        this.notifyPlugins('beforeDestroy');
        const { canvas , ctx  } = this;
        this._stop();
        this.config.clearCache();
        if (canvas) {
            this.unbindEvents();
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(canvas, ctx);
            this.platform.releaseContext(ctx);
            this.canvas = null;
            this.ctx = null;
        }
        delete instances[this.id];
        this.notifyPlugins('afterDestroy');
    }
    toBase64Image(...args) {
        return this.canvas.toDataURL(...args);
    }
 bindEvents() {
        this.bindUserEvents();
        if (this.options.responsive) {
            this.bindResponsiveEvents();
        } else {
            this.attached = true;
        }
    }
 bindUserEvents() {
        const listeners = this._listeners;
        const platform = this.platform;
        const _add = (type, listener)=>{
            platform.addEventListener(this, type, listener);
            listeners[type] = listener;
        };
        const listener = (e, x, y)=>{
            e.offsetX = x;
            e.offsetY = y;
            this._eventHandler(e);
        };
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.options.events, (type)=>_add(type, listener));
    }
 bindResponsiveEvents() {
        if (!this._responsiveListeners) {
            this._responsiveListeners = {};
        }
        const listeners = this._responsiveListeners;
        const platform = this.platform;
        const _add = (type, listener)=>{
            platform.addEventListener(this, type, listener);
            listeners[type] = listener;
        };
        const _remove = (type, listener)=>{
            if (listeners[type]) {
                platform.removeEventListener(this, type, listener);
                delete listeners[type];
            }
        };
        const listener = (width, height)=>{
            if (this.canvas) {
                this.resize(width, height);
            }
        };
        let detached;
        const attached = ()=>{
            _remove('attach', attached);
            this.attached = true;
            this.resize();
            _add('resize', listener);
            _add('detach', detached);
        };
        detached = ()=>{
            this.attached = false;
            _remove('resize', listener);
            this._stop();
            this._resize(0, 0);
            _add('attach', attached);
        };
        if (platform.isAttached(this.canvas)) {
            attached();
        } else {
            detached();
        }
    }
 unbindEvents() {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this._listeners, (listener, type)=>{
            this.platform.removeEventListener(this, type, listener);
        });
        this._listeners = {};
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this._responsiveListeners, (listener, type)=>{
            this.platform.removeEventListener(this, type, listener);
        });
        this._responsiveListeners = undefined;
    }
    updateHoverStyle(items, mode, enabled) {
        const prefix = enabled ? 'set' : 'remove';
        let meta, item, i, ilen;
        if (mode === 'dataset') {
            meta = this.getDatasetMeta(items[0].datasetIndex);
            meta.controller['_' + prefix + 'DatasetHoverStyle']();
        }
        for(i = 0, ilen = items.length; i < ilen; ++i){
            item = items[i];
            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;
            if (controller) {
                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);
            }
        }
    }
 getActiveElements() {
        return this._active || [];
    }
 setActiveElements(activeElements) {
        const lastActive = this._active || [];
        const active = activeElements.map(({ datasetIndex , index  })=>{
            const meta = this.getDatasetMeta(datasetIndex);
            if (!meta) {
                throw new Error('No dataset found at index ' + datasetIndex);
            }
            return {
                datasetIndex,
                element: meta.data[index],
                index
            };
        });
        const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(active, lastActive);
        if (changed) {
            this._active = active;
            this._lastEvent = null;
            this._updateHoverStyles(active, lastActive);
        }
    }
 notifyPlugins(hook, args, filter) {
        return this._plugins.notify(this, hook, args, filter);
    }
 isPluginEnabled(pluginId) {
        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;
    }
 _updateHoverStyles(active, lastActive, replay) {
        const hoverOptions = this.options.hover;
        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));
        const deactivated = diff(lastActive, active);
        const activated = replay ? active : diff(active, lastActive);
        if (deactivated.length) {
            this.updateHoverStyle(deactivated, hoverOptions.mode, false);
        }
        if (activated.length && hoverOptions.mode) {
            this.updateHoverStyle(activated, hoverOptions.mode, true);
        }
    }
 _eventHandler(e, replay) {
        const args = {
            event: e,
            replay,
            cancelable: true,
            inChartArea: this.isPointInArea(e)
        };
        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);
        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {
            return;
        }
        const changed = this._handleEvent(e, replay, args.inChartArea);
        args.cancelable = false;
        this.notifyPlugins('afterEvent', args, eventFilter);
        if (changed || args.changed) {
            this.render();
        }
        return this;
    }
 _handleEvent(e, replay, inChartArea) {
        const { _active: lastActive = [] , options  } = this;
        const useFinalPosition = replay;
        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);
        const isClick = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ai)(e);
        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);
        if (inChartArea) {
            this._lastEvent = null;
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(options.onHover, [
                e,
                active,
                this
            ], this);
            if (isClick) {
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(options.onClick, [
                    e,
                    active,
                    this
                ], this);
            }
        }
        const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(active, lastActive);
        if (changed || replay) {
            this._active = active;
            this._updateHoverStyles(active, lastActive, replay);
        }
        this._lastEvent = lastEvent;
        return changed;
    }
 _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {
        if (e.type === 'mouseout') {
            return [];
        }
        if (!inChartArea) {
            return lastActive;
        }
        const hoverOptions = this.options.hover;
        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);
    }
}
function invalidatePlugins() {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(Chart.instances, (chart)=>chart._plugins.invalidate());
}

function clipArc(ctx, element, endAngle) {
    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;
    let angleMargin = pixelMargin / outerRadius;
    // Draw an inner border by clipping the arc and drawing a double-width border
    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders
    ctx.beginPath();
    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);
    if (innerRadius > pixelMargin) {
        angleMargin = pixelMargin / innerRadius;
        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);
    } else {
        ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);
    }
    ctx.closePath();
    ctx.clip();
}
function toRadiusCorners(value) {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ak)(value, [
        'outerStart',
        'outerEnd',
        'innerStart',
        'innerEnd'
    ]);
}
/**
 * Parse border radius from the provided options
 */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {
    const o = toRadiusCorners(arc.options.borderRadius);
    const halfThickness = (outerRadius - innerRadius) / 2;
    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);
    // Outer limits are complicated. We want to compute the available angular distance at
    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.
    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.
    //
    // If the borderRadius is large, that value can become negative.
    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius
    // we know that the thickness term will dominate and compute the limits at that point
    const computeOuterLimit = (val)=>{
        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(val, 0, Math.min(halfThickness, outerArcLimit));
    };
    return {
        outerStart: computeOuterLimit(o.outerStart),
        outerEnd: computeOuterLimit(o.outerEnd),
        innerStart: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(o.innerStart, 0, innerLimit),
        innerEnd: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(o.innerEnd, 0, innerLimit)
    };
}
/**
 * Convert (r, 𝜃) to (x, y)
 */ function rThetaToXY(r, theta, x, y) {
    return {
        x: x + r * Math.cos(theta),
        y: y + r * Math.sin(theta)
    };
}
/**
 * Path the arc, respecting border radius by separating into left and right halves.
 *
 *   Start      End
 *
 *    1--->a--->2    Outer
 *   /           \
 *   8           3
 *   |           |
 *   |           |
 *   7           4
 *   \           /
 *    6<---b<---5    Inner
 */ function pathArc(ctx, element, offset, spacing, end, circular) {
    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;
    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);
    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;
    let spacingOffset = 0;
    const alpha = end - start;
    if (spacing) {
        // When spacing is present, it is the same for all items
        // So we adjust the start and end angle of the arc such that
        // the distance is the same as it would be without the spacing
        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;
        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;
        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;
        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;
        spacingOffset = (alpha - adjustedAngle) / 2;
    }
    const beta = Math.max(0.001, alpha * outerRadius - offset / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P) / outerRadius;
    const angleOffset = (alpha - beta) / 2;
    const startAngle = start + angleOffset + spacingOffset;
    const endAngle = end - angleOffset - spacingOffset;
    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);
    const outerStartAdjustedRadius = outerRadius - outerStart;
    const outerEndAdjustedRadius = outerRadius - outerEnd;
    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;
    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;
    const innerStartAdjustedRadius = innerRadius + innerStart;
    const innerEndAdjustedRadius = innerRadius + innerEnd;
    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;
    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;
    ctx.beginPath();
    if (circular) {
        // The first arc segments from point 1 to point a to point 2
        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;
        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);
        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);
        // The corner segment from point 2 to point 3
        if (outerEnd > 0) {
            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);
            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);
        }
        // The line from point 3 to point 4
        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);
        ctx.lineTo(p4.x, p4.y);
        // The corner segment from point 4 to point 5
        if (innerEnd > 0) {
            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);
            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, innerEndAdjustedAngle + Math.PI);
        }
        // The inner arc from point 5 to point b to point 6
        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;
        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);
        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);
        // The corner segment from point 6 to point 7
        if (innerStart > 0) {
            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);
            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);
        }
        // The line from point 7 to point 8
        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);
        ctx.lineTo(p8.x, p8.y);
        // The corner segment from point 8 to point 1
        if (outerStart > 0) {
            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);
            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, outerStartAdjustedAngle);
        }
    } else {
        ctx.moveTo(x, y);
        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;
        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;
        ctx.lineTo(outerStartX, outerStartY);
        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;
        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;
        ctx.lineTo(outerEndX, outerEndY);
    }
    ctx.closePath();
}
function drawArc(ctx, element, offset, spacing, circular) {
    const { fullCircles , startAngle , circumference  } = element;
    let endAngle = element.endAngle;
    if (fullCircles) {
        pathArc(ctx, element, offset, spacing, endAngle, circular);
        for(let i = 0; i < fullCircles; ++i){
            ctx.fill();
        }
        if (!isNaN(circumference)) {
            endAngle = startAngle + (circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);
        }
    }
    pathArc(ctx, element, offset, spacing, endAngle, circular);
    ctx.fill();
    return endAngle;
}
function drawBorder(ctx, element, offset, spacing, circular) {
    const { fullCircles , startAngle , circumference , options  } = element;
    const { borderWidth , borderJoinStyle  } = options;
    const inner = options.borderAlign === 'inner';
    if (!borderWidth) {
        return;
    }
    if (inner) {
        ctx.lineWidth = borderWidth * 2;
        ctx.lineJoin = borderJoinStyle || 'round';
    } else {
        ctx.lineWidth = borderWidth;
        ctx.lineJoin = borderJoinStyle || 'bevel';
    }
    let endAngle = element.endAngle;
    if (fullCircles) {
        pathArc(ctx, element, offset, spacing, endAngle, circular);
        for(let i = 0; i < fullCircles; ++i){
            ctx.stroke();
        }
        if (!isNaN(circumference)) {
            endAngle = startAngle + (circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);
        }
    }
    if (inner) {
        clipArc(ctx, element, endAngle);
    }
    if (!fullCircles) {
        pathArc(ctx, element, offset, spacing, endAngle, circular);
        ctx.stroke();
    }
}
class ArcElement extends Element {
    static id = 'arc';
    static defaults = {
        borderAlign: 'center',
        borderColor: '#fff',
        borderJoinStyle: undefined,
        borderRadius: 0,
        borderWidth: 2,
        offset: 0,
        spacing: 0,
        angle: undefined,
        circular: true
    };
    static defaultRoutes = {
        backgroundColor: 'backgroundColor'
    };
    constructor(cfg){
        super();
        this.options = undefined;
        this.circumference = undefined;
        this.startAngle = undefined;
        this.endAngle = undefined;
        this.innerRadius = undefined;
        this.outerRadius = undefined;
        this.pixelMargin = 0;
        this.fullCircles = 0;
        if (cfg) {
            Object.assign(this, cfg);
        }
    }
    inRange(chartX, chartY, useFinalPosition) {
        const point = this.getProps([
            'x',
            'y'
        ], useFinalPosition);
        const { angle , distance  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(point, {
            x: chartX,
            y: chartY
        });
        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([
            'startAngle',
            'endAngle',
            'innerRadius',
            'outerRadius',
            'circumference'
        ], useFinalPosition);
        const rAdjust = this.options.spacing / 2;
        const _circumference = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(circumference, endAngle - startAngle);
        const betweenAngles = _circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle);
        const withinRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(distance, innerRadius + rAdjust, outerRadius + rAdjust);
        return betweenAngles && withinRadius;
    }
    getCenterPoint(useFinalPosition) {
        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([
            'x',
            'y',
            'startAngle',
            'endAngle',
            'innerRadius',
            'outerRadius'
        ], useFinalPosition);
        const { offset , spacing  } = this.options;
        const halfAngle = (startAngle + endAngle) / 2;
        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;
        return {
            x: x + Math.cos(halfAngle) * halfRadius,
            y: y + Math.sin(halfAngle) * halfRadius
        };
    }
    tooltipPosition(useFinalPosition) {
        return this.getCenterPoint(useFinalPosition);
    }
    draw(ctx) {
        const { options , circumference  } = this;
        const offset = (options.offset || 0) / 4;
        const spacing = (options.spacing || 0) / 2;
        const circular = options.circular;
        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;
        this.fullCircles = circumference > _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T ? Math.floor(circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T) : 0;
        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {
            return;
        }
        ctx.save();
        const halfAngle = (this.startAngle + this.endAngle) / 2;
        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);
        const fix = 1 - Math.sin(Math.min(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P, circumference || 0));
        const radiusOffset = offset * fix;
        ctx.fillStyle = options.backgroundColor;
        ctx.strokeStyle = options.borderColor;
        drawArc(ctx, this, radiusOffset, spacing, circular);
        drawBorder(ctx, this, radiusOffset, spacing, circular);
        ctx.restore();
    }
}

function setStyle(ctx, options, style = options) {
    ctx.lineCap = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderCapStyle, options.borderCapStyle);
    ctx.setLineDash((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderDash, options.borderDash));
    ctx.lineDashOffset = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderDashOffset, options.borderDashOffset);
    ctx.lineJoin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderJoinStyle, options.borderJoinStyle);
    ctx.lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderWidth, options.borderWidth);
    ctx.strokeStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderColor, options.borderColor);
}
function lineTo(ctx, previous, target) {
    ctx.lineTo(target.x, target.y);
}
function getLineMethod(options) {
    if (options.stepped) {
        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ar;
    }
    if (options.tension || options.cubicInterpolationMode === 'monotone') {
        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.as;
    }
    return lineTo;
}
function pathVars(points, segment, params = {}) {
    const count = points.length;
    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;
    const { start: segmentStart , end: segmentEnd  } = segment;
    const start = Math.max(paramsStart, segmentStart);
    const end = Math.min(paramsEnd, segmentEnd);
    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;
    return {
        count,
        start,
        loop: segment.loop,
        ilen: end < start && !outside ? count + end - start : end - start
    };
}
 function pathSegment(ctx, line, segment, params) {
    const { points , options  } = line;
    const { count , start , loop , ilen  } = pathVars(points, segment, params);
    const lineMethod = getLineMethod(options);
    let { move =true , reverse  } = params || {};
    let i, point, prev;
    for(i = 0; i <= ilen; ++i){
        point = points[(start + (reverse ? ilen - i : i)) % count];
        if (point.skip) {
            continue;
        } else if (move) {
            ctx.moveTo(point.x, point.y);
            move = false;
        } else {
            lineMethod(ctx, prev, point, reverse, options.stepped);
        }
        prev = point;
    }
    if (loop) {
        point = points[(start + (reverse ? ilen : 0)) % count];
        lineMethod(ctx, prev, point, reverse, options.stepped);
    }
    return !!loop;
}
 function fastPathSegment(ctx, line, segment, params) {
    const points = line.points;
    const { count , start , ilen  } = pathVars(points, segment, params);
    const { move =true , reverse  } = params || {};
    let avgX = 0;
    let countX = 0;
    let i, point, prevX, minY, maxY, lastY;
    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;
    const drawX = ()=>{
        if (minY !== maxY) {
            ctx.lineTo(avgX, maxY);
            ctx.lineTo(avgX, minY);
            ctx.lineTo(avgX, lastY);
        }
    };
    if (move) {
        point = points[pointIndex(0)];
        ctx.moveTo(point.x, point.y);
    }
    for(i = 0; i <= ilen; ++i){
        point = points[pointIndex(i)];
        if (point.skip) {
            continue;
        }
        const x = point.x;
        const y = point.y;
        const truncX = x | 0;
        if (truncX === prevX) {
            if (y < minY) {
                minY = y;
            } else if (y > maxY) {
                maxY = y;
            }
            avgX = (countX * avgX + x) / ++countX;
        } else {
            drawX();
            ctx.lineTo(x, y);
            prevX = truncX;
            countX = 0;
            minY = maxY = y;
        }
        lastY = y;
    }
    drawX();
}
 function _getSegmentMethod(line) {
    const opts = line.options;
    const borderDash = opts.borderDash && opts.borderDash.length;
    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;
    return useFastPath ? fastPathSegment : pathSegment;
}
 function _getInterpolationMethod(options) {
    if (options.stepped) {
        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ao;
    }
    if (options.tension || options.cubicInterpolationMode === 'monotone') {
        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ap;
    }
    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aq;
}
function strokePathWithCache(ctx, line, start, count) {
    let path = line._path;
    if (!path) {
        path = line._path = new Path2D();
        if (line.path(path, start, count)) {
            path.closePath();
        }
    }
    setStyle(ctx, line.options);
    ctx.stroke(path);
}
function strokePathDirect(ctx, line, start, count) {
    const { segments , options  } = line;
    const segmentMethod = _getSegmentMethod(line);
    for (const segment of segments){
        setStyle(ctx, options, segment.style);
        ctx.beginPath();
        if (segmentMethod(ctx, line, segment, {
            start,
            end: start + count - 1
        })) {
            ctx.closePath();
        }
        ctx.stroke();
    }
}
const usePath2D = typeof Path2D === 'function';
function draw(ctx, line, start, count) {
    if (usePath2D && !line.options.segment) {
        strokePathWithCache(ctx, line, start, count);
    } else {
        strokePathDirect(ctx, line, start, count);
    }
}
class LineElement extends Element {
    static id = 'line';
 static defaults = {
        borderCapStyle: 'butt',
        borderDash: [],
        borderDashOffset: 0,
        borderJoinStyle: 'miter',
        borderWidth: 3,
        capBezierPoints: true,
        cubicInterpolationMode: 'default',
        fill: false,
        spanGaps: false,
        stepped: false,
        tension: 0
    };
 static defaultRoutes = {
        backgroundColor: 'backgroundColor',
        borderColor: 'borderColor'
    };
    static descriptors = {
        _scriptable: true,
        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'
    };
    constructor(cfg){
        super();
        this.animated = true;
        this.options = undefined;
        this._chart = undefined;
        this._loop = undefined;
        this._fullLoop = undefined;
        this._path = undefined;
        this._points = undefined;
        this._segments = undefined;
        this._decimated = false;
        this._pointsUpdated = false;
        this._datasetIndex = undefined;
        if (cfg) {
            Object.assign(this, cfg);
        }
    }
    updateControlPoints(chartArea, indexAxis) {
        const options = this.options;
        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {
            const loop = options.spanGaps ? this._loop : this._fullLoop;
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.al)(this._points, options, chartArea, loop, indexAxis);
            this._pointsUpdated = true;
        }
    }
    set points(points) {
        this._points = points;
        delete this._segments;
        delete this._path;
        this._pointsUpdated = false;
    }
    get points() {
        return this._points;
    }
    get segments() {
        return this._segments || (this._segments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.am)(this, this.options.segment));
    }
 first() {
        const segments = this.segments;
        const points = this.points;
        return segments.length && points[segments[0].start];
    }
 last() {
        const segments = this.segments;
        const points = this.points;
        const count = segments.length;
        return count && points[segments[count - 1].end];
    }
 interpolate(point, property) {
        const options = this.options;
        const value = point[property];
        const points = this.points;
        const segments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.an)(this, {
            property,
            start: value,
            end: value
        });
        if (!segments.length) {
            return;
        }
        const result = [];
        const _interpolate = _getInterpolationMethod(options);
        let i, ilen;
        for(i = 0, ilen = segments.length; i < ilen; ++i){
            const { start , end  } = segments[i];
            const p1 = points[start];
            const p2 = points[end];
            if (p1 === p2) {
                result.push(p1);
                continue;
            }
            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));
            const interpolated = _interpolate(p1, p2, t, options.stepped);
            interpolated[property] = point[property];
            result.push(interpolated);
        }
        return result.length === 1 ? result[0] : result;
    }
 pathSegment(ctx, segment, params) {
        const segmentMethod = _getSegmentMethod(this);
        return segmentMethod(ctx, this, segment, params);
    }
 path(ctx, start, count) {
        const segments = this.segments;
        const segmentMethod = _getSegmentMethod(this);
        let loop = this._loop;
        start = start || 0;
        count = count || this.points.length - start;
        for (const segment of segments){
            loop &= segmentMethod(ctx, this, segment, {
                start,
                end: start + count - 1
            });
        }
        return !!loop;
    }
 draw(ctx, chartArea, start, count) {
        const options = this.options || {};
        const points = this.points || [];
        if (points.length && options.borderWidth) {
            ctx.save();
            draw(ctx, this, start, count);
            ctx.restore();
        }
        if (this.animated) {
            this._pointsUpdated = false;
            this._path = undefined;
        }
    }
}

function inRange$1(el, pos, axis, useFinalPosition) {
    const options = el.options;
    const { [axis]: value  } = el.getProps([
        axis
    ], useFinalPosition);
    return Math.abs(pos - value) < options.radius + options.hitRadius;
}
class PointElement extends Element {
    static id = 'point';
    /**
   * @type {any}
   */ static defaults = {
        borderWidth: 1,
        hitRadius: 1,
        hoverBorderWidth: 1,
        hoverRadius: 4,
        pointStyle: 'circle',
        radius: 3,
        rotation: 0
    };
    /**
   * @type {any}
   */ static defaultRoutes = {
        backgroundColor: 'backgroundColor',
        borderColor: 'borderColor'
    };
    constructor(cfg){
        super();
        this.options = undefined;
        this.parsed = undefined;
        this.skip = undefined;
        this.stop = undefined;
        if (cfg) {
            Object.assign(this, cfg);
        }
    }
    inRange(mouseX, mouseY, useFinalPosition) {
        const options = this.options;
        const { x , y  } = this.getProps([
            'x',
            'y'
        ], useFinalPosition);
        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);
    }
    inXRange(mouseX, useFinalPosition) {
        return inRange$1(this, mouseX, 'x', useFinalPosition);
    }
    inYRange(mouseY, useFinalPosition) {
        return inRange$1(this, mouseY, 'y', useFinalPosition);
    }
    getCenterPoint(useFinalPosition) {
        const { x , y  } = this.getProps([
            'x',
            'y'
        ], useFinalPosition);
        return {
            x,
            y
        };
    }
    size(options) {
        options = options || this.options || {};
        let radius = options.radius || 0;
        radius = Math.max(radius, radius && options.hoverRadius || 0);
        const borderWidth = radius && options.borderWidth || 0;
        return (radius + borderWidth) * 2;
    }
    draw(ctx, area) {
        const options = this.options;
        if (this.skip || options.radius < 0.1 || !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(this, area, this.size(options) / 2)) {
            return;
        }
        ctx.strokeStyle = options.borderColor;
        ctx.lineWidth = options.borderWidth;
        ctx.fillStyle = options.backgroundColor;
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.at)(ctx, options, this.x, this.y);
    }
    getRange() {
        const options = this.options || {};
        // @ts-expect-error Fallbacks should never be hit in practice
        return options.radius + options.hitRadius;
    }
}

function getBarBounds(bar, useFinalPosition) {
    const { x , y , base , width , height  } =  bar.getProps([
        'x',
        'y',
        'base',
        'width',
        'height'
    ], useFinalPosition);
    let left, right, top, bottom, half;
    if (bar.horizontal) {
        half = height / 2;
        left = Math.min(x, base);
        right = Math.max(x, base);
        top = y - half;
        bottom = y + half;
    } else {
        half = width / 2;
        left = x - half;
        right = x + half;
        top = Math.min(y, base);
        bottom = Math.max(y, base);
    }
    return {
        left,
        top,
        right,
        bottom
    };
}
function skipOrLimit(skip, value, min, max) {
    return skip ? 0 : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(value, min, max);
}
function parseBorderWidth(bar, maxW, maxH) {
    const value = bar.options.borderWidth;
    const skip = bar.borderSkipped;
    const o = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.av)(value);
    return {
        t: skipOrLimit(skip.top, o.top, 0, maxH),
        r: skipOrLimit(skip.right, o.right, 0, maxW),
        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),
        l: skipOrLimit(skip.left, o.left, 0, maxW)
    };
}
function parseBorderRadius(bar, maxW, maxH) {
    const { enableBorderRadius  } = bar.getProps([
        'enableBorderRadius'
    ]);
    const value = bar.options.borderRadius;
    const o = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(value);
    const maxR = Math.min(maxW, maxH);
    const skip = bar.borderSkipped;
    const enableBorder = enableBorderRadius || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value);
    return {
        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),
        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),
        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),
        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)
    };
}
function boundingRects(bar) {
    const bounds = getBarBounds(bar);
    const width = bounds.right - bounds.left;
    const height = bounds.bottom - bounds.top;
    const border = parseBorderWidth(bar, width / 2, height / 2);
    const radius = parseBorderRadius(bar, width / 2, height / 2);
    return {
        outer: {
            x: bounds.left,
            y: bounds.top,
            w: width,
            h: height,
            radius
        },
        inner: {
            x: bounds.left + border.l,
            y: bounds.top + border.t,
            w: width - border.l - border.r,
            h: height - border.t - border.b,
            radius: {
                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),
                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),
                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),
                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))
            }
        }
    };
}
function inRange(bar, x, y, useFinalPosition) {
    const skipX = x === null;
    const skipY = y === null;
    const skipBoth = skipX && skipY;
    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);
    return bounds && (skipX || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(x, bounds.left, bounds.right)) && (skipY || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(y, bounds.top, bounds.bottom));
}
function hasRadius(radius) {
    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;
}
 function addNormalRectPath(ctx, rect) {
    ctx.rect(rect.x, rect.y, rect.w, rect.h);
}
function inflateRect(rect, amount, refRect = {}) {
    const x = rect.x !== refRect.x ? -amount : 0;
    const y = rect.y !== refRect.y ? -amount : 0;
    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;
    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;
    return {
        x: rect.x + x,
        y: rect.y + y,
        w: rect.w + w,
        h: rect.h + h,
        radius: rect.radius
    };
}
class BarElement extends Element {
    static id = 'bar';
 static defaults = {
        borderSkipped: 'start',
        borderWidth: 0,
        borderRadius: 0,
        inflateAmount: 'auto',
        pointStyle: undefined
    };
 static defaultRoutes = {
        backgroundColor: 'backgroundColor',
        borderColor: 'borderColor'
    };
    constructor(cfg){
        super();
        this.options = undefined;
        this.horizontal = undefined;
        this.base = undefined;
        this.width = undefined;
        this.height = undefined;
        this.inflateAmount = undefined;
        if (cfg) {
            Object.assign(this, cfg);
        }
    }
    draw(ctx) {
        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;
        const { inner , outer  } = boundingRects(this);
        const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au : addNormalRectPath;
        ctx.save();
        if (outer.w !== inner.w || outer.h !== inner.h) {
            ctx.beginPath();
            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));
            ctx.clip();
            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));
            ctx.fillStyle = borderColor;
            ctx.fill('evenodd');
        }
        ctx.beginPath();
        addRectPath(ctx, inflateRect(inner, inflateAmount));
        ctx.fillStyle = backgroundColor;
        ctx.fill();
        ctx.restore();
    }
    inRange(mouseX, mouseY, useFinalPosition) {
        return inRange(this, mouseX, mouseY, useFinalPosition);
    }
    inXRange(mouseX, useFinalPosition) {
        return inRange(this, mouseX, null, useFinalPosition);
    }
    inYRange(mouseY, useFinalPosition) {
        return inRange(this, null, mouseY, useFinalPosition);
    }
    getCenterPoint(useFinalPosition) {
        const { x , y , base , horizontal  } =  this.getProps([
            'x',
            'y',
            'base',
            'horizontal'
        ], useFinalPosition);
        return {
            x: horizontal ? (x + base) / 2 : x,
            y: horizontal ? y : (y + base) / 2
        };
    }
    getRange(axis) {
        return axis === 'x' ? this.width / 2 : this.height / 2;
    }
}

var elements = /*#__PURE__*/Object.freeze({
__proto__: null,
ArcElement: ArcElement,
LineElement: LineElement,
PointElement: PointElement,
BarElement: BarElement
});

const BORDER_COLORS = [
    'rgb(54, 162, 235)',
    'rgb(255, 99, 132)',
    'rgb(255, 159, 64)',
    'rgb(255, 205, 86)',
    'rgb(75, 192, 192)',
    'rgb(153, 102, 255)',
    'rgb(201, 203, 207)' // grey
];
// Border colors with 50% transparency
const BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));
function getBorderColor(i) {
    return BORDER_COLORS[i % BORDER_COLORS.length];
}
function getBackgroundColor(i) {
    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];
}
function colorizeDefaultDataset(dataset, i) {
    dataset.borderColor = getBorderColor(i);
    dataset.backgroundColor = getBackgroundColor(i);
    return ++i;
}
function colorizeDoughnutDataset(dataset, i) {
    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));
    return i;
}
function colorizePolarAreaDataset(dataset, i) {
    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));
    return i;
}
function getColorizer(chart) {
    let i = 0;
    return (dataset, datasetIndex)=>{
        const controller = chart.getDatasetMeta(datasetIndex).controller;
        if (controller instanceof DoughnutController) {
            i = colorizeDoughnutDataset(dataset, i);
        } else if (controller instanceof PolarAreaController) {
            i = colorizePolarAreaDataset(dataset, i);
        } else if (controller) {
            i = colorizeDefaultDataset(dataset, i);
        }
    };
}
function containsColorsDefinitions(descriptors) {
    let k;
    for(k in descriptors){
        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {
            return true;
        }
    }
    return false;
}
function containsColorsDefinition(descriptor) {
    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);
}
var plugin_colors = {
    id: 'colors',
    defaults: {
        enabled: true,
        forceOverride: false
    },
    beforeLayout (chart, _args, options) {
        if (!options.enabled) {
            return;
        }
        const { data: { datasets  } , options: chartOptions  } = chart.config;
        const { elements  } = chartOptions;
        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {
            return;
        }
        const colorizer = getColorizer(chart);
        datasets.forEach(colorizer);
    }
};

function lttbDecimation(data, start, count, availableWidth, options) {
 const samples = options.samples || availableWidth;
    if (samples >= count) {
        return data.slice(start, start + count);
    }
    const decimated = [];
    const bucketWidth = (count - 2) / (samples - 2);
    let sampledIndex = 0;
    const endIndex = start + count - 1;
    let a = start;
    let i, maxAreaPoint, maxArea, area, nextA;
    decimated[sampledIndex++] = data[a];
    for(i = 0; i < samples - 2; i++){
        let avgX = 0;
        let avgY = 0;
        let j;
        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;
        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;
        const avgRangeLength = avgRangeEnd - avgRangeStart;
        for(j = avgRangeStart; j < avgRangeEnd; j++){
            avgX += data[j].x;
            avgY += data[j].y;
        }
        avgX /= avgRangeLength;
        avgY /= avgRangeLength;
        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;
        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;
        const { x: pointAx , y: pointAy  } = data[a];
        maxArea = area = -1;
        for(j = rangeOffs; j < rangeTo; j++){
            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));
            if (area > maxArea) {
                maxArea = area;
                maxAreaPoint = data[j];
                nextA = j;
            }
        }
        decimated[sampledIndex++] = maxAreaPoint;
        a = nextA;
    }
    decimated[sampledIndex++] = data[endIndex];
    return decimated;
}
function minMaxDecimation(data, start, count, availableWidth) {
    let avgX = 0;
    let countX = 0;
    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;
    const decimated = [];
    const endIndex = start + count - 1;
    const xMin = data[start].x;
    const xMax = data[endIndex].x;
    const dx = xMax - xMin;
    for(i = start; i < start + count; ++i){
        point = data[i];
        x = (point.x - xMin) / dx * availableWidth;
        y = point.y;
        const truncX = x | 0;
        if (truncX === prevX) {
            if (y < minY) {
                minY = y;
                minIndex = i;
            } else if (y > maxY) {
                maxY = y;
                maxIndex = i;
            }
            avgX = (countX * avgX + point.x) / ++countX;
        } else {
            const lastIndex = i - 1;
            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(minIndex) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(maxIndex)) {
                const intermediateIndex1 = Math.min(minIndex, maxIndex);
                const intermediateIndex2 = Math.max(minIndex, maxIndex);
                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {
                    decimated.push({
                        ...data[intermediateIndex1],
                        x: avgX
                    });
                }
                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {
                    decimated.push({
                        ...data[intermediateIndex2],
                        x: avgX
                    });
                }
            }
            if (i > 0 && lastIndex !== startIndex) {
                decimated.push(data[lastIndex]);
            }
            decimated.push(point);
            prevX = truncX;
            countX = 0;
            minY = maxY = y;
            minIndex = maxIndex = startIndex = i;
        }
    }
    return decimated;
}
function cleanDecimatedDataset(dataset) {
    if (dataset._decimated) {
        const data = dataset._data;
        delete dataset._decimated;
        delete dataset._data;
        Object.defineProperty(dataset, 'data', {
            configurable: true,
            enumerable: true,
            writable: true,
            value: data
        });
    }
}
function cleanDecimatedData(chart) {
    chart.data.datasets.forEach((dataset)=>{
        cleanDecimatedDataset(dataset);
    });
}
function getStartAndCountOfVisiblePointsSimplified(meta, points) {
    const pointCount = points.length;
    let start = 0;
    let count;
    const { iScale  } = meta;
    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();
    if (minDefined) {
        start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(points, iScale.axis, min).lo, 0, pointCount - 1);
    }
    if (maxDefined) {
        count = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(points, iScale.axis, max).hi + 1, start, pointCount) - start;
    } else {
        count = pointCount - start;
    }
    return {
        start,
        count
    };
}
var plugin_decimation = {
    id: 'decimation',
    defaults: {
        algorithm: 'min-max',
        enabled: false
    },
    beforeElementsUpdate: (chart, args, options)=>{
        if (!options.enabled) {
            cleanDecimatedData(chart);
            return;
        }
        const availableWidth = chart.width;
        chart.data.datasets.forEach((dataset, datasetIndex)=>{
            const { _data , indexAxis  } = dataset;
            const meta = chart.getDatasetMeta(datasetIndex);
            const data = _data || dataset.data;
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([
                indexAxis,
                chart.options.indexAxis
            ]) === 'y') {
                return;
            }
            if (!meta.controller.supportsDecimation) {
                return;
            }
            const xAxis = chart.scales[meta.xAxisID];
            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {
                return;
            }
            if (chart.options.parsing) {
                return;
            }
            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);
            const threshold = options.threshold || 4 * availableWidth;
            if (count <= threshold) {
                cleanDecimatedDataset(dataset);
                return;
            }
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(_data)) {
                dataset._data = data;
                delete dataset.data;
                Object.defineProperty(dataset, 'data', {
                    configurable: true,
                    enumerable: true,
                    get: function() {
                        return this._decimated;
                    },
                    set: function(d) {
                        this._data = d;
                    }
                });
            }
            let decimated;
            switch(options.algorithm){
                case 'lttb':
                    decimated = lttbDecimation(data, start, count, availableWidth, options);
                    break;
                case 'min-max':
                    decimated = minMaxDecimation(data, start, count, availableWidth);
                    break;
                default:
                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);
            }
            dataset._decimated = decimated;
        });
    },
    destroy (chart) {
        cleanDecimatedData(chart);
    }
};

function _segments(line, target, property) {
    const segments = line.segments;
    const points = line.points;
    const tpoints = target.points;
    const parts = [];
    for (const segment of segments){
        let { start , end  } = segment;
        end = _findSegmentEnd(start, end, points);
        const bounds = _getBounds(property, points[start], points[end], segment.loop);
        if (!target.segments) {
            parts.push({
                source: segment,
                target: bounds,
                start: points[start],
                end: points[end]
            });
            continue;
        }
        const targetSegments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.an)(target, bounds);
        for (const tgt of targetSegments){
            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);
            const fillSources = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(segment, points, subBounds);
            for (const fillSource of fillSources){
                parts.push({
                    source: fillSource,
                    target: tgt,
                    start: {
                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)
                    },
                    end: {
                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)
                    }
                });
            }
        }
    }
    return parts;
}
function _getBounds(property, first, last, loop) {
    if (loop) {
        return;
    }
    let start = first[property];
    let end = last[property];
    if (property === 'angle') {
        start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(start);
        end = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(end);
    }
    return {
        property,
        start,
        end
    };
}
function _pointsFromSegments(boundary, line) {
    const { x =null , y =null  } = boundary || {};
    const linePoints = line.points;
    const points = [];
    line.segments.forEach(({ start , end  })=>{
        end = _findSegmentEnd(start, end, linePoints);
        const first = linePoints[start];
        const last = linePoints[end];
        if (y !== null) {
            points.push({
                x: first.x,
                y
            });
            points.push({
                x: last.x,
                y
            });
        } else if (x !== null) {
            points.push({
                x,
                y: first.y
            });
            points.push({
                x,
                y: last.y
            });
        }
    });
    return points;
}
function _findSegmentEnd(start, end, points) {
    for(; end > start; end--){
        const point = points[end];
        if (!isNaN(point.x) && !isNaN(point.y)) {
            break;
        }
    }
    return end;
}
function _getEdge(a, b, prop, fn) {
    if (a && b) {
        return fn(a[prop], b[prop]);
    }
    return a ? a[prop] : b ? b[prop] : 0;
}

function _createBoundaryLine(boundary, line) {
    let points = [];
    let _loop = false;
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(boundary)) {
        _loop = true;
        points = boundary;
    } else {
        points = _pointsFromSegments(boundary, line);
    }
    return points.length ? new LineElement({
        points,
        options: {
            tension: 0
        },
        _loop,
        _fullLoop: _loop
    }) : null;
}
function _shouldApplyFill(source) {
    return source && source.fill !== false;
}

function _resolveTarget(sources, index, propagate) {
    const source = sources[index];
    let fill = source.fill;
    const visited = [
        index
    ];
    let target;
    if (!propagate) {
        return fill;
    }
    while(fill !== false && visited.indexOf(fill) === -1){
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(fill)) {
            return fill;
        }
        target = sources[fill];
        if (!target) {
            return false;
        }
        if (target.visible) {
            return fill;
        }
        visited.push(fill);
        fill = target.fill;
    }
    return false;
}
 function _decodeFill(line, index, count) {
     const fill = parseFillOption(line);
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {
        return isNaN(fill.value) ? false : fill;
    }
    let target = parseFloat(fill);
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(target) && Math.floor(target) === target) {
        return decodeTargetIndex(fill[0], index, target, count);
    }
    return [
        'origin',
        'start',
        'end',
        'stack',
        'shape'
    ].indexOf(fill) >= 0 && fill;
}
function decodeTargetIndex(firstCh, index, target, count) {
    if (firstCh === '-' || firstCh === '+') {
        target = index + target;
    }
    if (target === index || target < 0 || target >= count) {
        return false;
    }
    return target;
}
 function _getTargetPixel(fill, scale) {
    let pixel = null;
    if (fill === 'start') {
        pixel = scale.bottom;
    } else if (fill === 'end') {
        pixel = scale.top;
    } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {
        pixel = scale.getPixelForValue(fill.value);
    } else if (scale.getBasePixel) {
        pixel = scale.getBasePixel();
    }
    return pixel;
}
 function _getTargetValue(fill, scale, startValue) {
    let value;
    if (fill === 'start') {
        value = startValue;
    } else if (fill === 'end') {
        value = scale.options.reverse ? scale.min : scale.max;
    } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {
        value = fill.value;
    } else {
        value = scale.getBaseValue();
    }
    return value;
}
 function parseFillOption(line) {
    const options = line.options;
    const fillOption = options.fill;
    let fill = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(fillOption && fillOption.target, fillOption);
    if (fill === undefined) {
        fill = !!options.backgroundColor;
    }
    if (fill === false || fill === null) {
        return false;
    }
    if (fill === true) {
        return 'origin';
    }
    return fill;
}

function _buildStackLine(source) {
    const { scale , index , line  } = source;
    const points = [];
    const segments = line.segments;
    const sourcePoints = line.points;
    const linesBelow = getLinesBelow(scale, index);
    linesBelow.push(_createBoundaryLine({
        x: null,
        y: scale.bottom
    }, line));
    for(let i = 0; i < segments.length; i++){
        const segment = segments[i];
        for(let j = segment.start; j <= segment.end; j++){
            addPointsBelow(points, sourcePoints[j], linesBelow);
        }
    }
    return new LineElement({
        points,
        options: {}
    });
}
 function getLinesBelow(scale, index) {
    const below = [];
    const metas = scale.getMatchingVisibleMetas('line');
    for(let i = 0; i < metas.length; i++){
        const meta = metas[i];
        if (meta.index === index) {
            break;
        }
        if (!meta.hidden) {
            below.unshift(meta.dataset);
        }
    }
    return below;
}
 function addPointsBelow(points, sourcePoint, linesBelow) {
    const postponed = [];
    for(let j = 0; j < linesBelow.length; j++){
        const line = linesBelow[j];
        const { first , last , point  } = findPoint(line, sourcePoint, 'x');
        if (!point || first && last) {
            continue;
        }
        if (first) {
            postponed.unshift(point);
        } else {
            points.push(point);
            if (!last) {
                break;
            }
        }
    }
    points.push(...postponed);
}
 function findPoint(line, sourcePoint, property) {
    const point = line.interpolate(sourcePoint, property);
    if (!point) {
        return {};
    }
    const pointValue = point[property];
    const segments = line.segments;
    const linePoints = line.points;
    let first = false;
    let last = false;
    for(let i = 0; i < segments.length; i++){
        const segment = segments[i];
        const firstValue = linePoints[segment.start][property];
        const lastValue = linePoints[segment.end][property];
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(pointValue, firstValue, lastValue)) {
            first = pointValue === firstValue;
            last = pointValue === lastValue;
            break;
        }
    }
    return {
        first,
        last,
        point
    };
}

class simpleArc {
    constructor(opts){
        this.x = opts.x;
        this.y = opts.y;
        this.radius = opts.radius;
    }
    pathSegment(ctx, bounds, opts) {
        const { x , y , radius  } = this;
        bounds = bounds || {
            start: 0,
            end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T
        };
        ctx.arc(x, y, radius, bounds.end, bounds.start, true);
        return !opts.bounds;
    }
    interpolate(point) {
        const { x , y , radius  } = this;
        const angle = point.angle;
        return {
            x: x + Math.cos(angle) * radius,
            y: y + Math.sin(angle) * radius,
            angle
        };
    }
}

function _getTarget(source) {
    const { chart , fill , line  } = source;
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(fill)) {
        return getLineByIndex(chart, fill);
    }
    if (fill === 'stack') {
        return _buildStackLine(source);
    }
    if (fill === 'shape') {
        return true;
    }
    const boundary = computeBoundary(source);
    if (boundary instanceof simpleArc) {
        return boundary;
    }
    return _createBoundaryLine(boundary, line);
}
 function getLineByIndex(chart, index) {
    const meta = chart.getDatasetMeta(index);
    const visible = meta && chart.isDatasetVisible(index);
    return visible ? meta.dataset : null;
}
function computeBoundary(source) {
    const scale = source.scale || {};
    if (scale.getPointPositionForValue) {
        return computeCircularBoundary(source);
    }
    return computeLinearBoundary(source);
}
function computeLinearBoundary(source) {
    const { scale ={} , fill  } = source;
    const pixel = _getTargetPixel(fill, scale);
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(pixel)) {
        const horizontal = scale.isHorizontal();
        return {
            x: horizontal ? pixel : null,
            y: horizontal ? null : pixel
        };
    }
    return null;
}
function computeCircularBoundary(source) {
    const { scale , fill  } = source;
    const options = scale.options;
    const length = scale.getLabels().length;
    const start = options.reverse ? scale.max : scale.min;
    const value = _getTargetValue(fill, scale, start);
    const target = [];
    if (options.grid.circular) {
        const center = scale.getPointPositionForValue(0, start);
        return new simpleArc({
            x: center.x,
            y: center.y,
            radius: scale.getDistanceFromCenterForValue(value)
        });
    }
    for(let i = 0; i < length; ++i){
        target.push(scale.getPointPositionForValue(i, value));
    }
    return target;
}

function _drawfill(ctx, source, area) {
    const target = _getTarget(source);
    const { line , scale , axis  } = source;
    const lineOpts = line.options;
    const fillOption = lineOpts.fill;
    const color = lineOpts.backgroundColor;
    const { above =color , below =color  } = fillOption || {};
    if (target && line.points.length) {
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, area);
        doFill(ctx, {
            line,
            target,
            above,
            below,
            area,
            scale,
            axis
        });
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);
    }
}
function doFill(ctx, cfg) {
    const { line , target , above , below , area , scale  } = cfg;
    const property = line._loop ? 'angle' : cfg.axis;
    ctx.save();
    if (property === 'x' && below !== above) {
        clipVertical(ctx, target, area.top);
        fill(ctx, {
            line,
            target,
            color: above,
            scale,
            property
        });
        ctx.restore();
        ctx.save();
        clipVertical(ctx, target, area.bottom);
    }
    fill(ctx, {
        line,
        target,
        color: below,
        scale,
        property
    });
    ctx.restore();
}
function clipVertical(ctx, target, clipY) {
    const { segments , points  } = target;
    let first = true;
    let lineLoop = false;
    ctx.beginPath();
    for (const segment of segments){
        const { start , end  } = segment;
        const firstPoint = points[start];
        const lastPoint = points[_findSegmentEnd(start, end, points)];
        if (first) {
            ctx.moveTo(firstPoint.x, firstPoint.y);
            first = false;
        } else {
            ctx.lineTo(firstPoint.x, clipY);
            ctx.lineTo(firstPoint.x, firstPoint.y);
        }
        lineLoop = !!target.pathSegment(ctx, segment, {
            move: lineLoop
        });
        if (lineLoop) {
            ctx.closePath();
        } else {
            ctx.lineTo(lastPoint.x, clipY);
        }
    }
    ctx.lineTo(target.first().x, clipY);
    ctx.closePath();
    ctx.clip();
}
function fill(ctx, cfg) {
    const { line , target , property , color , scale  } = cfg;
    const segments = _segments(line, target, property);
    for (const { source: src , target: tgt , start , end  } of segments){
        const { style: { backgroundColor =color  } = {}  } = src;
        const notShape = target !== true;
        ctx.save();
        ctx.fillStyle = backgroundColor;
        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));
        ctx.beginPath();
        const lineLoop = !!line.pathSegment(ctx, src);
        let loop;
        if (notShape) {
            if (lineLoop) {
                ctx.closePath();
            } else {
                interpolatedLineTo(ctx, target, end, property);
            }
            const targetLoop = !!target.pathSegment(ctx, tgt, {
                move: lineLoop,
                reverse: true
            });
            loop = lineLoop && targetLoop;
            if (!loop) {
                interpolatedLineTo(ctx, target, start, property);
            }
        }
        ctx.closePath();
        ctx.fill(loop ? 'evenodd' : 'nonzero');
        ctx.restore();
    }
}
function clipBounds(ctx, scale, bounds) {
    const { top , bottom  } = scale.chart.chartArea;
    const { property , start , end  } = bounds || {};
    if (property === 'x') {
        ctx.beginPath();
        ctx.rect(start, top, end - start, bottom - top);
        ctx.clip();
    }
}
function interpolatedLineTo(ctx, target, point, property) {
    const interpolatedPoint = target.interpolate(point, property);
    if (interpolatedPoint) {
        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);
    }
}

var index = {
    id: 'filler',
    afterDatasetsUpdate (chart, _args, options) {
        const count = (chart.data.datasets || []).length;
        const sources = [];
        let meta, i, line, source;
        for(i = 0; i < count; ++i){
            meta = chart.getDatasetMeta(i);
            line = meta.dataset;
            source = null;
            if (line && line.options && line instanceof LineElement) {
                source = {
                    visible: chart.isDatasetVisible(i),
                    index: i,
                    fill: _decodeFill(line, i, count),
                    chart,
                    axis: meta.controller.options.indexAxis,
                    scale: meta.vScale,
                    line
                };
            }
            meta.$filler = source;
            sources.push(source);
        }
        for(i = 0; i < count; ++i){
            source = sources[i];
            if (!source || source.fill === false) {
                continue;
            }
            source.fill = _resolveTarget(sources, i, options.propagate);
        }
    },
    beforeDraw (chart, _args, options) {
        const draw = options.drawTime === 'beforeDraw';
        const metasets = chart.getSortedVisibleDatasetMetas();
        const area = chart.chartArea;
        for(let i = metasets.length - 1; i >= 0; --i){
            const source = metasets[i].$filler;
            if (!source) {
                continue;
            }
            source.line.updateControlPoints(area, source.axis);
            if (draw && source.fill) {
                _drawfill(chart.ctx, source, area);
            }
        }
    },
    beforeDatasetsDraw (chart, _args, options) {
        if (options.drawTime !== 'beforeDatasetsDraw') {
            return;
        }
        const metasets = chart.getSortedVisibleDatasetMetas();
        for(let i = metasets.length - 1; i >= 0; --i){
            const source = metasets[i].$filler;
            if (_shouldApplyFill(source)) {
                _drawfill(chart.ctx, source, chart.chartArea);
            }
        }
    },
    beforeDatasetDraw (chart, args, options) {
        const source = args.meta.$filler;
        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {
            return;
        }
        _drawfill(chart.ctx, source, chart.chartArea);
    },
    defaults: {
        propagate: true,
        drawTime: 'beforeDatasetDraw'
    }
};

const getBoxSize = (labelOpts, fontSize)=>{
    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;
    if (labelOpts.usePointStyle) {
        boxHeight = Math.min(boxHeight, fontSize);
        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);
    }
    return {
        boxWidth,
        boxHeight,
        itemHeight: Math.max(fontSize, boxHeight)
    };
};
const itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;
class Legend extends Element {
 constructor(config){
        super();
        this._added = false;
        this.legendHitBoxes = [];
 this._hoveredItem = null;
        this.doughnutMode = false;
        this.chart = config.chart;
        this.options = config.options;
        this.ctx = config.ctx;
        this.legendItems = undefined;
        this.columnSizes = undefined;
        this.lineWidths = undefined;
        this.maxHeight = undefined;
        this.maxWidth = undefined;
        this.top = undefined;
        this.bottom = undefined;
        this.left = undefined;
        this.right = undefined;
        this.height = undefined;
        this.width = undefined;
        this._margins = undefined;
        this.position = undefined;
        this.weight = undefined;
        this.fullSize = undefined;
    }
    update(maxWidth, maxHeight, margins) {
        this.maxWidth = maxWidth;
        this.maxHeight = maxHeight;
        this._margins = margins;
        this.setDimensions();
        this.buildLabels();
        this.fit();
    }
    setDimensions() {
        if (this.isHorizontal()) {
            this.width = this.maxWidth;
            this.left = this._margins.left;
            this.right = this.width;
        } else {
            this.height = this.maxHeight;
            this.top = this._margins.top;
            this.bottom = this.height;
        }
    }
    buildLabels() {
        const labelOpts = this.options.labels || {};
        let legendItems = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(labelOpts.generateLabels, [
            this.chart
        ], this) || [];
        if (labelOpts.filter) {
            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));
        }
        if (labelOpts.sort) {
            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));
        }
        if (this.options.reverse) {
            legendItems.reverse();
        }
        this.legendItems = legendItems;
    }
    fit() {
        const { options , ctx  } = this;
        if (!options.display) {
            this.width = this.height = 0;
            return;
        }
        const labelOpts = options.labels;
        const labelFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(labelOpts.font);
        const fontSize = labelFont.size;
        const titleHeight = this._computeTitleHeight();
        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);
        let width, height;
        ctx.font = labelFont.string;
        if (this.isHorizontal()) {
            width = this.maxWidth;
            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;
        } else {
            height = this.maxHeight;
            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;
        }
        this.width = Math.min(width, options.maxWidth || this.maxWidth);
        this.height = Math.min(height, options.maxHeight || this.maxHeight);
    }
 _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {
        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;
        const hitboxes = this.legendHitBoxes = [];
        const lineWidths = this.lineWidths = [
            0
        ];
        const lineHeight = itemHeight + padding;
        let totalHeight = titleHeight;
        ctx.textAlign = 'left';
        ctx.textBaseline = 'middle';
        let row = -1;
        let top = -lineHeight;
        this.legendItems.forEach((legendItem, i)=>{
            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;
            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {
                totalHeight += lineHeight;
                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;
                top += lineHeight;
                row++;
            }
            hitboxes[i] = {
                left: 0,
                top,
                row,
                width: itemWidth,
                height: itemHeight
            };
            lineWidths[lineWidths.length - 1] += itemWidth + padding;
        });
        return totalHeight;
    }
    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {
        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;
        const hitboxes = this.legendHitBoxes = [];
        const columnSizes = this.columnSizes = [];
        const heightLimit = maxHeight - titleHeight;
        let totalWidth = padding;
        let currentColWidth = 0;
        let currentColHeight = 0;
        let left = 0;
        let col = 0;
        this.legendItems.forEach((legendItem, i)=>{
            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);
            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {
                totalWidth += currentColWidth + padding;
                columnSizes.push({
                    width: currentColWidth,
                    height: currentColHeight
                });
                left += currentColWidth + padding;
                col++;
                currentColWidth = currentColHeight = 0;
            }
            hitboxes[i] = {
                left,
                top: currentColHeight,
                col,
                width: itemWidth,
                height: itemHeight
            };
            currentColWidth = Math.max(currentColWidth, itemWidth);
            currentColHeight += itemHeight + padding;
        });
        totalWidth += currentColWidth;
        columnSizes.push({
            width: currentColWidth,
            height: currentColHeight
        });
        return totalWidth;
    }
    adjustHitBoxes() {
        if (!this.options.display) {
            return;
        }
        const titleHeight = this._computeTitleHeight();
        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;
        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(rtl, this.left, this.width);
        if (this.isHorizontal()) {
            let row = 0;
            let left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - this.lineWidths[row]);
            for (const hitbox of hitboxes){
                if (row !== hitbox.row) {
                    row = hitbox.row;
                    left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - this.lineWidths[row]);
                }
                hitbox.top += this.top + titleHeight + padding;
                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);
                left += hitbox.width + padding;
            }
        } else {
            let col = 0;
            let top = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);
            for (const hitbox1 of hitboxes){
                if (hitbox1.col !== col) {
                    col = hitbox1.col;
                    top = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);
                }
                hitbox1.top = top;
                hitbox1.left += this.left + padding;
                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);
                top += hitbox1.height + padding;
            }
        }
    }
    isHorizontal() {
        return this.options.position === 'top' || this.options.position === 'bottom';
    }
    draw() {
        if (this.options.display) {
            const ctx = this.ctx;
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, this);
            this._draw();
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);
        }
    }
 _draw() {
        const { options: opts , columnSizes , lineWidths , ctx  } = this;
        const { align , labels: labelOpts  } = opts;
        const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.color;
        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(opts.rtl, this.left, this.width);
        const labelFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(labelOpts.font);
        const { padding  } = labelOpts;
        const fontSize = labelFont.size;
        const halfFontSize = fontSize / 2;
        let cursor;
        this.drawTitle();
        ctx.textAlign = rtlHelper.textAlign('left');
        ctx.textBaseline = 'middle';
        ctx.lineWidth = 0.5;
        ctx.font = labelFont.string;
        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);
        const drawLegendBox = function(x, y, legendItem) {
            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {
                return;
            }
            ctx.save();
            const lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineWidth, 1);
            ctx.fillStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.fillStyle, defaultColor);
            ctx.lineCap = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineCap, 'butt');
            ctx.lineDashOffset = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineDashOffset, 0);
            ctx.lineJoin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineJoin, 'miter');
            ctx.lineWidth = lineWidth;
            ctx.strokeStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.strokeStyle, defaultColor);
            ctx.setLineDash((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineDash, []));
            if (labelOpts.usePointStyle) {
                const drawOptions = {
                    radius: boxHeight * Math.SQRT2 / 2,
                    pointStyle: legendItem.pointStyle,
                    rotation: legendItem.rotation,
                    borderWidth: lineWidth
                };
                const centerX = rtlHelper.xPlus(x, boxWidth / 2);
                const centerY = y + halfFontSize;
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aD)(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);
            } else {
                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);
                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);
                const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(legendItem.borderRadius);
                ctx.beginPath();
                if (Object.values(borderRadius).some((v)=>v !== 0)) {
                    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {
                        x: xBoxLeft,
                        y: yBoxTop,
                        w: boxWidth,
                        h: boxHeight,
                        radius: borderRadius
                    });
                } else {
                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);
                }
                ctx.fill();
                if (lineWidth !== 0) {
                    ctx.stroke();
                }
            }
            ctx.restore();
        };
        const fillText = function(x, y, legendItem) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {
                strikethrough: legendItem.hidden,
                textAlign: rtlHelper.textAlign(legendItem.textAlign)
            });
        };
        const isHorizontal = this.isHorizontal();
        const titleHeight = this._computeTitleHeight();
        if (isHorizontal) {
            cursor = {
                x: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - lineWidths[0]),
                y: this.top + padding + titleHeight,
                line: 0
            };
        } else {
            cursor = {
                x: this.left + padding,
                y: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),
                line: 0
            };
        }
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aA)(this.ctx, opts.textDirection);
        const lineHeight = itemHeight + padding;
        this.legendItems.forEach((legendItem, i)=>{
            ctx.strokeStyle = legendItem.fontColor;
            ctx.fillStyle = legendItem.fontColor;
            const textWidth = ctx.measureText(legendItem.text).width;
            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));
            const width = boxWidth + halfFontSize + textWidth;
            let x = cursor.x;
            let y = cursor.y;
            rtlHelper.setWidth(this.width);
            if (isHorizontal) {
                if (i > 0 && x + width + padding > this.right) {
                    y = cursor.y += lineHeight;
                    cursor.line++;
                    x = cursor.x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - lineWidths[cursor.line]);
                }
            } else if (i > 0 && y + lineHeight > this.bottom) {
                x = cursor.x = x + columnSizes[cursor.line].width + padding;
                cursor.line++;
                y = cursor.y = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);
            }
            const realX = rtlHelper.x(x);
            drawLegendBox(realX, y, legendItem);
            x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);
            fillText(rtlHelper.x(x), y, legendItem);
            if (isHorizontal) {
                cursor.x += width + padding;
            } else if (typeof legendItem.text !== 'string') {
                const fontLineHeight = labelFont.lineHeight;
                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);
            } else {
                cursor.y += lineHeight;
            }
        });
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aC)(this.ctx, opts.textDirection);
    }
 drawTitle() {
        const opts = this.options;
        const titleOpts = opts.title;
        const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(titleOpts.font);
        const titlePadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(titleOpts.padding);
        if (!titleOpts.display) {
            return;
        }
        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(opts.rtl, this.left, this.width);
        const ctx = this.ctx;
        const position = titleOpts.position;
        const halfFontSize = titleFont.size / 2;
        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;
        let y;
        let left = this.left;
        let maxWidth = this.width;
        if (this.isHorizontal()) {
            maxWidth = Math.max(...this.lineWidths);
            y = this.top + topPaddingPlusHalfFontSize;
            left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(opts.align, left, this.right - maxWidth);
        } else {
            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);
            y = topPaddingPlusHalfFontSize + (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());
        }
        const x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(position, left, left + maxWidth);
        ctx.textAlign = rtlHelper.textAlign((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1)(position));
        ctx.textBaseline = 'middle';
        ctx.strokeStyle = titleOpts.color;
        ctx.fillStyle = titleOpts.color;
        ctx.font = titleFont.string;
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, titleOpts.text, x, y, titleFont);
    }
 _computeTitleHeight() {
        const titleOpts = this.options.title;
        const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(titleOpts.font);
        const titlePadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(titleOpts.padding);
        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;
    }
 _getLegendItemAt(x, y) {
        let i, hitBox, lh;
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(x, this.left, this.right) && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(y, this.top, this.bottom)) {
            lh = this.legendHitBoxes;
            for(i = 0; i < lh.length; ++i){
                hitBox = lh[i];
                if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(x, hitBox.left, hitBox.left + hitBox.width) && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(y, hitBox.top, hitBox.top + hitBox.height)) {
                    return this.legendItems[i];
                }
            }
        }
        return null;
    }
 handleEvent(e) {
        const opts = this.options;
        if (!isListened(e.type, opts)) {
            return;
        }
        const hoveredItem = this._getLegendItemAt(e.x, e.y);
        if (e.type === 'mousemove' || e.type === 'mouseout') {
            const previous = this._hoveredItem;
            const sameItem = itemsEqual(previous, hoveredItem);
            if (previous && !sameItem) {
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(opts.onLeave, [
                    e,
                    previous,
                    this
                ], this);
            }
            this._hoveredItem = hoveredItem;
            if (hoveredItem && !sameItem) {
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(opts.onHover, [
                    e,
                    hoveredItem,
                    this
                ], this);
            }
        } else if (hoveredItem) {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(opts.onClick, [
                e,
                hoveredItem,
                this
            ], this);
        }
    }
}
function calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {
    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);
    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);
    return {
        itemWidth,
        itemHeight
    };
}
function calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {
    let legendItemText = legendItem.text;
    if (legendItemText && typeof legendItemText !== 'string') {
        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);
    }
    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;
}
function calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {
    let itemHeight = _itemHeight;
    if (typeof legendItem.text !== 'string') {
        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);
    }
    return itemHeight;
}
function calculateLegendItemHeight(legendItem, fontLineHeight) {
    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;
    return fontLineHeight * labelHeight;
}
function isListened(type, opts) {
    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {
        return true;
    }
    if (opts.onClick && (type === 'click' || type === 'mouseup')) {
        return true;
    }
    return false;
}
var plugin_legend = {
    id: 'legend',
 _element: Legend,
    start (chart, _args, options) {
        const legend = chart.legend = new Legend({
            ctx: chart.ctx,
            options,
            chart
        });
        layouts.configure(chart, legend, options);
        layouts.addBox(chart, legend);
    },
    stop (chart) {
        layouts.removeBox(chart, chart.legend);
        delete chart.legend;
    },
    beforeUpdate (chart, _args, options) {
        const legend = chart.legend;
        layouts.configure(chart, legend, options);
        legend.options = options;
    },
    afterUpdate (chart) {
        const legend = chart.legend;
        legend.buildLabels();
        legend.adjustHitBoxes();
    },
    afterEvent (chart, args) {
        if (!args.replay) {
            chart.legend.handleEvent(args.event);
        }
    },
    defaults: {
        display: true,
        position: 'top',
        align: 'center',
        fullSize: true,
        reverse: false,
        weight: 1000,
        onClick (e, legendItem, legend) {
            const index = legendItem.datasetIndex;
            const ci = legend.chart;
            if (ci.isDatasetVisible(index)) {
                ci.hide(index);
                legendItem.hidden = true;
            } else {
                ci.show(index);
                legendItem.hidden = false;
            }
        },
        onHover: null,
        onLeave: null,
        labels: {
            color: (ctx)=>ctx.chart.options.color,
            boxWidth: 40,
            padding: 10,
            generateLabels (chart) {
                const datasets = chart.data.datasets;
                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;
                return chart._getSortedDatasetMetas().map((meta)=>{
                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);
                    const borderWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(style.borderWidth);
                    return {
                        text: datasets[meta.index].label,
                        fillStyle: style.backgroundColor,
                        fontColor: color,
                        hidden: !meta.visible,
                        lineCap: style.borderCapStyle,
                        lineDash: style.borderDash,
                        lineDashOffset: style.borderDashOffset,
                        lineJoin: style.borderJoinStyle,
                        lineWidth: (borderWidth.width + borderWidth.height) / 4,
                        strokeStyle: style.borderColor,
                        pointStyle: pointStyle || style.pointStyle,
                        rotation: style.rotation,
                        textAlign: textAlign || style.textAlign,
                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),
                        datasetIndex: meta.index
                    };
                }, this);
            }
        },
        title: {
            color: (ctx)=>ctx.chart.options.color,
            display: false,
            position: 'center',
            text: ''
        }
    },
    descriptors: {
        _scriptable: (name)=>!name.startsWith('on'),
        labels: {
            _scriptable: (name)=>![
                    'generateLabels',
                    'filter',
                    'sort'
                ].includes(name)
        }
    }
};

class Title extends Element {
 constructor(config){
        super();
        this.chart = config.chart;
        this.options = config.options;
        this.ctx = config.ctx;
        this._padding = undefined;
        this.top = undefined;
        this.bottom = undefined;
        this.left = undefined;
        this.right = undefined;
        this.width = undefined;
        this.height = undefined;
        this.position = undefined;
        this.weight = undefined;
        this.fullSize = undefined;
    }
    update(maxWidth, maxHeight) {
        const opts = this.options;
        this.left = 0;
        this.top = 0;
        if (!opts.display) {
            this.width = this.height = this.right = this.bottom = 0;
            return;
        }
        this.width = this.right = maxWidth;
        this.height = this.bottom = maxHeight;
        const lineCount = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(opts.text) ? opts.text.length : 1;
        this._padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(opts.padding);
        const textSize = lineCount * (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font).lineHeight + this._padding.height;
        if (this.isHorizontal()) {
            this.height = textSize;
        } else {
            this.width = textSize;
        }
    }
    isHorizontal() {
        const pos = this.options.position;
        return pos === 'top' || pos === 'bottom';
    }
    _drawArgs(offset) {
        const { top , left , bottom , right , options  } = this;
        const align = options.align;
        let rotation = 0;
        let maxWidth, titleX, titleY;
        if (this.isHorizontal()) {
            titleX = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, left, right);
            titleY = top + offset;
            maxWidth = right - left;
        } else {
            if (options.position === 'left') {
                titleX = left + offset;
                titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, bottom, top);
                rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P * -0.5;
            } else {
                titleX = right - offset;
                titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, top, bottom);
                rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P * 0.5;
            }
            maxWidth = bottom - top;
        }
        return {
            titleX,
            titleY,
            maxWidth,
            rotation
        };
    }
    draw() {
        const ctx = this.ctx;
        const opts = this.options;
        if (!opts.display) {
            return;
        }
        const fontOpts = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font);
        const lineHeight = fontOpts.lineHeight;
        const offset = lineHeight / 2 + this._padding.top;
        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, opts.text, 0, 0, fontOpts, {
            color: opts.color,
            maxWidth,
            rotation,
            textAlign: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1)(opts.align),
            textBaseline: 'middle',
            translation: [
                titleX,
                titleY
            ]
        });
    }
}
function createTitle(chart, titleOpts) {
    const title = new Title({
        ctx: chart.ctx,
        options: titleOpts,
        chart
    });
    layouts.configure(chart, title, titleOpts);
    layouts.addBox(chart, title);
    chart.titleBlock = title;
}
var plugin_title = {
    id: 'title',
 _element: Title,
    start (chart, _args, options) {
        createTitle(chart, options);
    },
    stop (chart) {
        const titleBlock = chart.titleBlock;
        layouts.removeBox(chart, titleBlock);
        delete chart.titleBlock;
    },
    beforeUpdate (chart, _args, options) {
        const title = chart.titleBlock;
        layouts.configure(chart, title, options);
        title.options = options;
    },
    defaults: {
        align: 'center',
        display: false,
        font: {
            weight: 'bold'
        },
        fullSize: true,
        padding: 10,
        position: 'top',
        text: '',
        weight: 2000
    },
    defaultRoutes: {
        color: 'color'
    },
    descriptors: {
        _scriptable: true,
        _indexable: false
    }
};

const map = new WeakMap();
var plugin_subtitle = {
    id: 'subtitle',
    start (chart, _args, options) {
        const title = new Title({
            ctx: chart.ctx,
            options,
            chart
        });
        layouts.configure(chart, title, options);
        layouts.addBox(chart, title);
        map.set(chart, title);
    },
    stop (chart) {
        layouts.removeBox(chart, map.get(chart));
        map.delete(chart);
    },
    beforeUpdate (chart, _args, options) {
        const title = map.get(chart);
        layouts.configure(chart, title, options);
        title.options = options;
    },
    defaults: {
        align: 'center',
        display: false,
        font: {
            weight: 'normal'
        },
        fullSize: true,
        padding: 0,
        position: 'top',
        text: '',
        weight: 1500
    },
    defaultRoutes: {
        color: 'color'
    },
    descriptors: {
        _scriptable: true,
        _indexable: false
    }
};

const positioners = {
 average (items) {
        if (!items.length) {
            return false;
        }
        let i, len;
        let x = 0;
        let y = 0;
        let count = 0;
        for(i = 0, len = items.length; i < len; ++i){
            const el = items[i].element;
            if (el && el.hasValue()) {
                const pos = el.tooltipPosition();
                x += pos.x;
                y += pos.y;
                ++count;
            }
        }
        return {
            x: x / count,
            y: y / count
        };
    },
 nearest (items, eventPosition) {
        if (!items.length) {
            return false;
        }
        let x = eventPosition.x;
        let y = eventPosition.y;
        let minDistance = Number.POSITIVE_INFINITY;
        let i, len, nearestElement;
        for(i = 0, len = items.length; i < len; ++i){
            const el = items[i].element;
            if (el && el.hasValue()) {
                const center = el.getCenterPoint();
                const d = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aE)(eventPosition, center);
                if (d < minDistance) {
                    minDistance = d;
                    nearestElement = el;
                }
            }
        }
        if (nearestElement) {
            const tp = nearestElement.tooltipPosition();
            x = tp.x;
            y = tp.y;
        }
        return {
            x,
            y
        };
    }
};
function pushOrConcat(base, toPush) {
    if (toPush) {
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(toPush)) {
            Array.prototype.push.apply(base, toPush);
        } else {
            base.push(toPush);
        }
    }
    return base;
}
 function splitNewlines(str) {
    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\n') > -1) {
        return str.split('\n');
    }
    return str;
}
 function createTooltipItem(chart, item) {
    const { element , datasetIndex , index  } = item;
    const controller = chart.getDatasetMeta(datasetIndex).controller;
    const { label , value  } = controller.getLabelAndValue(index);
    return {
        chart,
        label,
        parsed: controller.getParsed(index),
        raw: chart.data.datasets[datasetIndex].data[index],
        formattedValue: value,
        dataset: controller.getDataset(),
        dataIndex: index,
        datasetIndex,
        element
    };
}
 function getTooltipSize(tooltip, options) {
    const ctx = tooltip.chart.ctx;
    const { body , footer , title  } = tooltip;
    const { boxWidth , boxHeight  } = options;
    const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.bodyFont);
    const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.titleFont);
    const footerFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.footerFont);
    const titleLineCount = title.length;
    const footerLineCount = footer.length;
    const bodyLineItemCount = body.length;
    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);
    let height = padding.height;
    let width = 0;
    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);
    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;
    if (titleLineCount) {
        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;
    }
    if (combinedBodyLength) {
        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;
        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;
    }
    if (footerLineCount) {
        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;
    }
    let widthPadding = 0;
    const maxLineWidth = function(line) {
        width = Math.max(width, ctx.measureText(line).width + widthPadding);
    };
    ctx.save();
    ctx.font = titleFont.string;
    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltip.title, maxLineWidth);
    ctx.font = bodyFont.string;
    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);
    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;
    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(body, (bodyItem)=>{
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.before, maxLineWidth);
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.lines, maxLineWidth);
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.after, maxLineWidth);
    });
    widthPadding = 0;
    ctx.font = footerFont.string;
    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltip.footer, maxLineWidth);
    ctx.restore();
    width += padding.width;
    return {
        width,
        height
    };
}
function determineYAlign(chart, size) {
    const { y , height  } = size;
    if (y < height / 2) {
        return 'top';
    } else if (y > chart.height - height / 2) {
        return 'bottom';
    }
    return 'center';
}
function doesNotFitWithAlign(xAlign, chart, options, size) {
    const { x , width  } = size;
    const caret = options.caretSize + options.caretPadding;
    if (xAlign === 'left' && x + width + caret > chart.width) {
        return true;
    }
    if (xAlign === 'right' && x - width - caret < 0) {
        return true;
    }
}
function determineXAlign(chart, options, size, yAlign) {
    const { x , width  } = size;
    const { width: chartWidth , chartArea: { left , right  }  } = chart;
    let xAlign = 'center';
    if (yAlign === 'center') {
        xAlign = x <= (left + right) / 2 ? 'left' : 'right';
    } else if (x <= width / 2) {
        xAlign = 'left';
    } else if (x >= chartWidth - width / 2) {
        xAlign = 'right';
    }
    if (doesNotFitWithAlign(xAlign, chart, options, size)) {
        xAlign = 'center';
    }
    return xAlign;
}
 function determineAlignment(chart, options, size) {
    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);
    return {
        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),
        yAlign
    };
}
function alignX(size, xAlign) {
    let { x , width  } = size;
    if (xAlign === 'right') {
        x -= width;
    } else if (xAlign === 'center') {
        x -= width / 2;
    }
    return x;
}
function alignY(size, yAlign, paddingAndSize) {
    let { y , height  } = size;
    if (yAlign === 'top') {
        y += paddingAndSize;
    } else if (yAlign === 'bottom') {
        y -= height + paddingAndSize;
    } else {
        y -= height / 2;
    }
    return y;
}
 function getBackgroundPoint(options, size, alignment, chart) {
    const { caretSize , caretPadding , cornerRadius  } = options;
    const { xAlign , yAlign  } = alignment;
    const paddingAndSize = caretSize + caretPadding;
    const { topLeft , topRight , bottomLeft , bottomRight  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(cornerRadius);
    let x = alignX(size, xAlign);
    const y = alignY(size, yAlign, paddingAndSize);
    if (yAlign === 'center') {
        if (xAlign === 'left') {
            x += paddingAndSize;
        } else if (xAlign === 'right') {
            x -= paddingAndSize;
        }
    } else if (xAlign === 'left') {
        x -= Math.max(topLeft, bottomLeft) + caretSize;
    } else if (xAlign === 'right') {
        x += Math.max(topRight, bottomRight) + caretSize;
    }
    return {
        x: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(x, 0, chart.width - size.width),
        y: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(y, 0, chart.height - size.height)
    };
}
function getAlignedX(tooltip, align, options) {
    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);
    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;
}
 function getBeforeAfterBodyLines(callback) {
    return pushOrConcat([], splitNewlines(callback));
}
function createTooltipContext(parent, tooltip, tooltipItems) {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {
        tooltip,
        tooltipItems,
        type: 'tooltip'
    });
}
function overrideCallbacks(callbacks, context) {
    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;
    return override ? callbacks.override(override) : callbacks;
}
const defaultCallbacks = {
    beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    title (tooltipItems) {
        if (tooltipItems.length > 0) {
            const item = tooltipItems[0];
            const labels = item.chart.data.labels;
            const labelCount = labels ? labels.length : 0;
            if (this && this.options && this.options.mode === 'dataset') {
                return item.dataset.label || '';
            } else if (item.label) {
                return item.label;
            } else if (labelCount > 0 && item.dataIndex < labelCount) {
                return labels[item.dataIndex];
            }
        }
        return '';
    },
    afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    label (tooltipItem) {
        if (this && this.options && this.options.mode === 'dataset') {
            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;
        }
        let label = tooltipItem.dataset.label || '';
        if (label) {
            label += ': ';
        }
        const value = tooltipItem.formattedValue;
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {
            label += value;
        }
        return label;
    },
    labelColor (tooltipItem) {
        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);
        const options = meta.controller.getStyle(tooltipItem.dataIndex);
        return {
            borderColor: options.borderColor,
            backgroundColor: options.backgroundColor,
            borderWidth: options.borderWidth,
            borderDash: options.borderDash,
            borderDashOffset: options.borderDashOffset,
            borderRadius: 0
        };
    },
    labelTextColor () {
        return this.options.bodyColor;
    },
    labelPointStyle (tooltipItem) {
        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);
        const options = meta.controller.getStyle(tooltipItem.dataIndex);
        return {
            pointStyle: options.pointStyle,
            rotation: options.rotation
        };
    },
    afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,
    afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF
};
 function invokeCallbackWithFallback(callbacks, name, ctx, arg) {
    const result = callbacks[name].call(ctx, arg);
    if (typeof result === 'undefined') {
        return defaultCallbacks[name].call(ctx, arg);
    }
    return result;
}
class Tooltip extends Element {
 static positioners = positioners;
    constructor(config){
        super();
        this.opacity = 0;
        this._active = [];
        this._eventPosition = undefined;
        this._size = undefined;
        this._cachedAnimations = undefined;
        this._tooltipItems = [];
        this.$animations = undefined;
        this.$context = undefined;
        this.chart = config.chart;
        this.options = config.options;
        this.dataPoints = undefined;
        this.title = undefined;
        this.beforeBody = undefined;
        this.body = undefined;
        this.afterBody = undefined;
        this.footer = undefined;
        this.xAlign = undefined;
        this.yAlign = undefined;
        this.x = undefined;
        this.y = undefined;
        this.height = undefined;
        this.width = undefined;
        this.caretX = undefined;
        this.caretY = undefined;
        this.labelColors = undefined;
        this.labelPointStyles = undefined;
        this.labelTextColors = undefined;
    }
    initialize(options) {
        this.options = options;
        this._cachedAnimations = undefined;
        this.$context = undefined;
    }
 _resolveAnimations() {
        const cached = this._cachedAnimations;
        if (cached) {
            return cached;
        }
        const chart = this.chart;
        const options = this.options.setContext(this.getContext());
        const opts = options.enabled && chart.options.animation && options.animations;
        const animations = new Animations(this.chart, opts);
        if (opts._cacheable) {
            this._cachedAnimations = Object.freeze(animations);
        }
        return animations;
    }
 getContext() {
        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));
    }
    getTitle(context, options) {
        const { callbacks  } = options;
        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);
        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);
        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);
        let lines = [];
        lines = pushOrConcat(lines, splitNewlines(beforeTitle));
        lines = pushOrConcat(lines, splitNewlines(title));
        lines = pushOrConcat(lines, splitNewlines(afterTitle));
        return lines;
    }
    getBeforeBody(tooltipItems, options) {
        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));
    }
    getBody(tooltipItems, options) {
        const { callbacks  } = options;
        const bodyItems = [];
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltipItems, (context)=>{
            const bodyItem = {
                before: [],
                lines: [],
                after: []
            };
            const scoped = overrideCallbacks(callbacks, context);
            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));
            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));
            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));
            bodyItems.push(bodyItem);
        });
        return bodyItems;
    }
    getAfterBody(tooltipItems, options) {
        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));
    }
    getFooter(tooltipItems, options) {
        const { callbacks  } = options;
        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);
        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);
        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);
        let lines = [];
        lines = pushOrConcat(lines, splitNewlines(beforeFooter));
        lines = pushOrConcat(lines, splitNewlines(footer));
        lines = pushOrConcat(lines, splitNewlines(afterFooter));
        return lines;
    }
 _createItems(options) {
        const active = this._active;
        const data = this.chart.data;
        const labelColors = [];
        const labelPointStyles = [];
        const labelTextColors = [];
        let tooltipItems = [];
        let i, len;
        for(i = 0, len = active.length; i < len; ++i){
            tooltipItems.push(createTooltipItem(this.chart, active[i]));
        }
        if (options.filter) {
            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));
        }
        if (options.itemSort) {
            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));
        }
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltipItems, (context)=>{
            const scoped = overrideCallbacks(options.callbacks, context);
            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));
            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));
            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));
        });
        this.labelColors = labelColors;
        this.labelPointStyles = labelPointStyles;
        this.labelTextColors = labelTextColors;
        this.dataPoints = tooltipItems;
        return tooltipItems;
    }
    update(changed, replay) {
        const options = this.options.setContext(this.getContext());
        const active = this._active;
        let properties;
        let tooltipItems = [];
        if (!active.length) {
            if (this.opacity !== 0) {
                properties = {
                    opacity: 0
                };
            }
        } else {
            const position = positioners[options.position].call(this, active, this._eventPosition);
            tooltipItems = this._createItems(options);
            this.title = this.getTitle(tooltipItems, options);
            this.beforeBody = this.getBeforeBody(tooltipItems, options);
            this.body = this.getBody(tooltipItems, options);
            this.afterBody = this.getAfterBody(tooltipItems, options);
            this.footer = this.getFooter(tooltipItems, options);
            const size = this._size = getTooltipSize(this, options);
            const positionAndSize = Object.assign({}, position, size);
            const alignment = determineAlignment(this.chart, options, positionAndSize);
            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);
            this.xAlign = alignment.xAlign;
            this.yAlign = alignment.yAlign;
            properties = {
                opacity: 1,
                x: backgroundPoint.x,
                y: backgroundPoint.y,
                width: size.width,
                height: size.height,
                caretX: position.x,
                caretY: position.y
            };
        }
        this._tooltipItems = tooltipItems;
        this.$context = undefined;
        if (properties) {
            this._resolveAnimations().update(this, properties);
        }
        if (changed && options.external) {
            options.external.call(this, {
                chart: this.chart,
                tooltip: this,
                replay
            });
        }
    }
    drawCaret(tooltipPoint, ctx, size, options) {
        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);
        ctx.lineTo(caretPosition.x1, caretPosition.y1);
        ctx.lineTo(caretPosition.x2, caretPosition.y2);
        ctx.lineTo(caretPosition.x3, caretPosition.y3);
    }
    getCaretPosition(tooltipPoint, size, options) {
        const { xAlign , yAlign  } = this;
        const { caretSize , cornerRadius  } = options;
        const { topLeft , topRight , bottomLeft , bottomRight  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(cornerRadius);
        const { x: ptX , y: ptY  } = tooltipPoint;
        const { width , height  } = size;
        let x1, x2, x3, y1, y2, y3;
        if (yAlign === 'center') {
            y2 = ptY + height / 2;
            if (xAlign === 'left') {
                x1 = ptX;
                x2 = x1 - caretSize;
                y1 = y2 + caretSize;
                y3 = y2 - caretSize;
            } else {
                x1 = ptX + width;
                x2 = x1 + caretSize;
                y1 = y2 - caretSize;
                y3 = y2 + caretSize;
            }
            x3 = x1;
        } else {
            if (xAlign === 'left') {
                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;
            } else if (xAlign === 'right') {
                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;
            } else {
                x2 = this.caretX;
            }
            if (yAlign === 'top') {
                y1 = ptY;
                y2 = y1 - caretSize;
                x1 = x2 - caretSize;
                x3 = x2 + caretSize;
            } else {
                y1 = ptY + height;
                y2 = y1 + caretSize;
                x1 = x2 + caretSize;
                x3 = x2 - caretSize;
            }
            y3 = y1;
        }
        return {
            x1,
            x2,
            x3,
            y1,
            y2,
            y3
        };
    }
    drawTitle(pt, ctx, options) {
        const title = this.title;
        const length = title.length;
        let titleFont, titleSpacing, i;
        if (length) {
            const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(options.rtl, this.x, this.width);
            pt.x = getAlignedX(this, options.titleAlign, options);
            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);
            ctx.textBaseline = 'middle';
            titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.titleFont);
            titleSpacing = options.titleSpacing;
            ctx.fillStyle = options.titleColor;
            ctx.font = titleFont.string;
            for(i = 0; i < length; ++i){
                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);
                pt.y += titleFont.lineHeight + titleSpacing;
                if (i + 1 === length) {
                    pt.y += options.titleMarginBottom - titleSpacing;
                }
            }
        }
    }
 _drawColorBox(ctx, pt, i, rtlHelper, options) {
        const labelColors = this.labelColors[i];
        const labelPointStyle = this.labelPointStyles[i];
        const { boxHeight , boxWidth , boxPadding  } = options;
        const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.bodyFont);
        const colorX = getAlignedX(this, 'left', options);
        const rtlColorX = rtlHelper.x(colorX);
        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;
        const colorY = pt.y + yOffSet;
        if (options.usePointStyle) {
            const drawOptions = {
                radius: Math.min(boxWidth, boxHeight) / 2,
                pointStyle: labelPointStyle.pointStyle,
                rotation: labelPointStyle.rotation,
                borderWidth: 1
            };
            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;
            const centerY = colorY + boxHeight / 2;
            ctx.strokeStyle = options.multiKeyBackground;
            ctx.fillStyle = options.multiKeyBackground;
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.at)(ctx, drawOptions, centerX, centerY);
            ctx.strokeStyle = labelColors.borderColor;
            ctx.fillStyle = labelColors.backgroundColor;
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.at)(ctx, drawOptions, centerX, centerY);
        } else {
            ctx.lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;
            ctx.strokeStyle = labelColors.borderColor;
            ctx.setLineDash(labelColors.borderDash || []);
            ctx.lineDashOffset = labelColors.borderDashOffset || 0;
            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);
            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);
            const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(labelColors.borderRadius);
            if (Object.values(borderRadius).some((v)=>v !== 0)) {
                ctx.beginPath();
                ctx.fillStyle = options.multiKeyBackground;
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {
                    x: outerX,
                    y: colorY,
                    w: boxWidth,
                    h: boxHeight,
                    radius: borderRadius
                });
                ctx.fill();
                ctx.stroke();
                ctx.fillStyle = labelColors.backgroundColor;
                ctx.beginPath();
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {
                    x: innerX,
                    y: colorY + 1,
                    w: boxWidth - 2,
                    h: boxHeight - 2,
                    radius: borderRadius
                });
                ctx.fill();
            } else {
                ctx.fillStyle = options.multiKeyBackground;
                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);
                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);
                ctx.fillStyle = labelColors.backgroundColor;
                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);
            }
        }
        ctx.fillStyle = this.labelTextColors[i];
    }
    drawBody(pt, ctx, options) {
        const { body  } = this;
        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;
        const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.bodyFont);
        let bodyLineHeight = bodyFont.lineHeight;
        let xLinePadding = 0;
        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(options.rtl, this.x, this.width);
        const fillLineOfText = function(line) {
            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);
            pt.y += bodyLineHeight + bodySpacing;
        };
        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);
        let bodyItem, textColor, lines, i, j, ilen, jlen;
        ctx.textAlign = bodyAlign;
        ctx.textBaseline = 'middle';
        ctx.font = bodyFont.string;
        pt.x = getAlignedX(this, bodyAlignForCalculation, options);
        ctx.fillStyle = options.bodyColor;
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.beforeBody, fillLineOfText);
        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;
        for(i = 0, ilen = body.length; i < ilen; ++i){
            bodyItem = body[i];
            textColor = this.labelTextColors[i];
            ctx.fillStyle = textColor;
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.before, fillLineOfText);
            lines = bodyItem.lines;
            if (displayColors && lines.length) {
                this._drawColorBox(ctx, pt, i, rtlHelper, options);
                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);
            }
            for(j = 0, jlen = lines.length; j < jlen; ++j){
                fillLineOfText(lines[j]);
                bodyLineHeight = bodyFont.lineHeight;
            }
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.after, fillLineOfText);
        }
        xLinePadding = 0;
        bodyLineHeight = bodyFont.lineHeight;
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.afterBody, fillLineOfText);
        pt.y -= bodySpacing;
    }
    drawFooter(pt, ctx, options) {
        const footer = this.footer;
        const length = footer.length;
        let footerFont, i;
        if (length) {
            const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(options.rtl, this.x, this.width);
            pt.x = getAlignedX(this, options.footerAlign, options);
            pt.y += options.footerMarginTop;
            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);
            ctx.textBaseline = 'middle';
            footerFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.footerFont);
            ctx.fillStyle = options.footerColor;
            ctx.font = footerFont.string;
            for(i = 0; i < length; ++i){
                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);
                pt.y += footerFont.lineHeight + options.footerSpacing;
            }
        }
    }
    drawBackground(pt, ctx, tooltipSize, options) {
        const { xAlign , yAlign  } = this;
        const { x , y  } = pt;
        const { width , height  } = tooltipSize;
        const { topLeft , topRight , bottomLeft , bottomRight  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(options.cornerRadius);
        ctx.fillStyle = options.backgroundColor;
        ctx.strokeStyle = options.borderColor;
        ctx.lineWidth = options.borderWidth;
        ctx.beginPath();
        ctx.moveTo(x + topLeft, y);
        if (yAlign === 'top') {
            this.drawCaret(pt, ctx, tooltipSize, options);
        }
        ctx.lineTo(x + width - topRight, y);
        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);
        if (yAlign === 'center' && xAlign === 'right') {
            this.drawCaret(pt, ctx, tooltipSize, options);
        }
        ctx.lineTo(x + width, y + height - bottomRight);
        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);
        if (yAlign === 'bottom') {
            this.drawCaret(pt, ctx, tooltipSize, options);
        }
        ctx.lineTo(x + bottomLeft, y + height);
        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);
        if (yAlign === 'center' && xAlign === 'left') {
            this.drawCaret(pt, ctx, tooltipSize, options);
        }
        ctx.lineTo(x, y + topLeft);
        ctx.quadraticCurveTo(x, y, x + topLeft, y);
        ctx.closePath();
        ctx.fill();
        if (options.borderWidth > 0) {
            ctx.stroke();
        }
    }
 _updateAnimationTarget(options) {
        const chart = this.chart;
        const anims = this.$animations;
        const animX = anims && anims.x;
        const animY = anims && anims.y;
        if (animX || animY) {
            const position = positioners[options.position].call(this, this._active, this._eventPosition);
            if (!position) {
                return;
            }
            const size = this._size = getTooltipSize(this, options);
            const positionAndSize = Object.assign({}, position, this._size);
            const alignment = determineAlignment(chart, options, positionAndSize);
            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);
            if (animX._to !== point.x || animY._to !== point.y) {
                this.xAlign = alignment.xAlign;
                this.yAlign = alignment.yAlign;
                this.width = size.width;
                this.height = size.height;
                this.caretX = position.x;
                this.caretY = position.y;
                this._resolveAnimations().update(this, point);
            }
        }
    }
 _willRender() {
        return !!this.opacity;
    }
    draw(ctx) {
        const options = this.options.setContext(this.getContext());
        let opacity = this.opacity;
        if (!opacity) {
            return;
        }
        this._updateAnimationTarget(options);
        const tooltipSize = {
            width: this.width,
            height: this.height
        };
        const pt = {
            x: this.x,
            y: this.y
        };
        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;
        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);
        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;
        if (options.enabled && hasTooltipContent) {
            ctx.save();
            ctx.globalAlpha = opacity;
            this.drawBackground(pt, ctx, tooltipSize, options);
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aA)(ctx, options.textDirection);
            pt.y += padding.top;
            this.drawTitle(pt, ctx, options);
            this.drawBody(pt, ctx, options);
            this.drawFooter(pt, ctx, options);
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aC)(ctx, options.textDirection);
            ctx.restore();
        }
    }
 getActiveElements() {
        return this._active || [];
    }
 setActiveElements(activeElements, eventPosition) {
        const lastActive = this._active;
        const active = activeElements.map(({ datasetIndex , index  })=>{
            const meta = this.chart.getDatasetMeta(datasetIndex);
            if (!meta) {
                throw new Error('Cannot find a dataset at index ' + datasetIndex);
            }
            return {
                datasetIndex,
                element: meta.data[index],
                index
            };
        });
        const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(lastActive, active);
        const positionChanged = this._positionChanged(active, eventPosition);
        if (changed || positionChanged) {
            this._active = active;
            this._eventPosition = eventPosition;
            this._ignoreReplayEvents = true;
            this.update(true);
        }
    }
 handleEvent(e, replay, inChartArea = true) {
        if (replay && this._ignoreReplayEvents) {
            return false;
        }
        this._ignoreReplayEvents = false;
        const options = this.options;
        const lastActive = this._active || [];
        const active = this._getActiveElements(e, lastActive, replay, inChartArea);
        const positionChanged = this._positionChanged(active, e);
        const changed = replay || !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(active, lastActive) || positionChanged;
        if (changed) {
            this._active = active;
            if (options.enabled || options.external) {
                this._eventPosition = {
                    x: e.x,
                    y: e.y
                };
                this.update(true, replay);
            }
        }
        return changed;
    }
 _getActiveElements(e, lastActive, replay, inChartArea) {
        const options = this.options;
        if (e.type === 'mouseout') {
            return [];
        }
        if (!inChartArea) {
            return lastActive;
        }
        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);
        if (options.reverse) {
            active.reverse();
        }
        return active;
    }
 _positionChanged(active, e) {
        const { caretX , caretY , options  } = this;
        const position = positioners[options.position].call(this, active, e);
        return position !== false && (caretX !== position.x || caretY !== position.y);
    }
}
var plugin_tooltip = {
    id: 'tooltip',
    _element: Tooltip,
    positioners,
    afterInit (chart, _args, options) {
        if (options) {
            chart.tooltip = new Tooltip({
                chart,
                options
            });
        }
    },
    beforeUpdate (chart, _args, options) {
        if (chart.tooltip) {
            chart.tooltip.initialize(options);
        }
    },
    reset (chart, _args, options) {
        if (chart.tooltip) {
            chart.tooltip.initialize(options);
        }
    },
    afterDraw (chart) {
        const tooltip = chart.tooltip;
        if (tooltip && tooltip._willRender()) {
            const args = {
                tooltip
            };
            if (chart.notifyPlugins('beforeTooltipDraw', {
                ...args,
                cancelable: true
            }) === false) {
                return;
            }
            tooltip.draw(chart.ctx);
            chart.notifyPlugins('afterTooltipDraw', args);
        }
    },
    afterEvent (chart, args) {
        if (chart.tooltip) {
            const useFinalPosition = args.replay;
            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {
                args.changed = true;
            }
        }
    },
    defaults: {
        enabled: true,
        external: null,
        position: 'average',
        backgroundColor: 'rgba(0,0,0,0.8)',
        titleColor: '#fff',
        titleFont: {
            weight: 'bold'
        },
        titleSpacing: 2,
        titleMarginBottom: 6,
        titleAlign: 'left',
        bodyColor: '#fff',
        bodySpacing: 2,
        bodyFont: {},
        bodyAlign: 'left',
        footerColor: '#fff',
        footerSpacing: 2,
        footerMarginTop: 6,
        footerFont: {
            weight: 'bold'
        },
        footerAlign: 'left',
        padding: 6,
        caretPadding: 2,
        caretSize: 5,
        cornerRadius: 6,
        boxHeight: (ctx, opts)=>opts.bodyFont.size,
        boxWidth: (ctx, opts)=>opts.bodyFont.size,
        multiKeyBackground: '#fff',
        displayColors: true,
        boxPadding: 0,
        borderColor: 'rgba(0,0,0,0)',
        borderWidth: 0,
        animation: {
            duration: 400,
            easing: 'easeOutQuart'
        },
        animations: {
            numbers: {
                type: 'number',
                properties: [
                    'x',
                    'y',
                    'width',
                    'height',
                    'caretX',
                    'caretY'
                ]
            },
            opacity: {
                easing: 'linear',
                duration: 200
            }
        },
        callbacks: defaultCallbacks
    },
    defaultRoutes: {
        bodyFont: 'font',
        footerFont: 'font',
        titleFont: 'font'
    },
    descriptors: {
        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',
        _indexable: false,
        callbacks: {
            _scriptable: false,
            _indexable: false
        },
        animation: {
            _fallback: false
        },
        animations: {
            _fallback: 'animation'
        }
    },
    additionalOptionScopes: [
        'interaction'
    ]
};

var plugins = /*#__PURE__*/Object.freeze({
__proto__: null,
Colors: plugin_colors,
Decimation: plugin_decimation,
Filler: index,
Legend: plugin_legend,
SubTitle: plugin_subtitle,
Title: plugin_title,
Tooltip: plugin_tooltip
});

const addIfString = (labels, raw, index, addedLabels)=>{
    if (typeof raw === 'string') {
        index = labels.push(raw) - 1;
        addedLabels.unshift({
            index,
            label: raw
        });
    } else if (isNaN(raw)) {
        index = null;
    }
    return index;
};
function findOrAddLabel(labels, raw, index, addedLabels) {
    const first = labels.indexOf(raw);
    if (first === -1) {
        return addIfString(labels, raw, index, addedLabels);
    }
    const last = labels.lastIndexOf(raw);
    return first !== last ? index : first;
}
const validIndex = (index, max)=>index === null ? null : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(Math.round(index), 0, max);
function _getLabelForValue(value) {
    const labels = this.getLabels();
    if (value >= 0 && value < labels.length) {
        return labels[value];
    }
    return value;
}
class CategoryScale extends Scale {
    static id = 'category';
 static defaults = {
        ticks: {
            callback: _getLabelForValue
        }
    };
    constructor(cfg){
        super(cfg);
         this._startValue = undefined;
        this._valueRange = 0;
        this._addedLabels = [];
    }
    init(scaleOptions) {
        const added = this._addedLabels;
        if (added.length) {
            const labels = this.getLabels();
            for (const { index , label  } of added){
                if (labels[index] === label) {
                    labels.splice(index, 1);
                }
            }
            this._addedLabels = [];
        }
        super.init(scaleOptions);
    }
    parse(raw, index) {
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(raw)) {
            return null;
        }
        const labels = this.getLabels();
        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(index, raw), this._addedLabels);
        return validIndex(index, labels.length - 1);
    }
    determineDataLimits() {
        const { minDefined , maxDefined  } = this.getUserBounds();
        let { min , max  } = this.getMinMax(true);
        if (this.options.bounds === 'ticks') {
            if (!minDefined) {
                min = 0;
            }
            if (!maxDefined) {
                max = this.getLabels().length - 1;
            }
        }
        this.min = min;
        this.max = max;
    }
    buildTicks() {
        const min = this.min;
        const max = this.max;
        const offset = this.options.offset;
        const ticks = [];
        let labels = this.getLabels();
        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);
        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);
        this._startValue = this.min - (offset ? 0.5 : 0);
        for(let value = min; value <= max; value++){
            ticks.push({
                value
            });
        }
        return ticks;
    }
    getLabelForValue(value) {
        return _getLabelForValue.call(this, value);
    }
 configure() {
        super.configure();
        if (!this.isHorizontal()) {
            this._reversePixels = !this._reversePixels;
        }
    }
    getPixelForValue(value) {
        if (typeof value !== 'number') {
            value = this.parse(value);
        }
        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);
    }
    getPixelForTick(index) {
        const ticks = this.ticks;
        if (index < 0 || index > ticks.length - 1) {
            return null;
        }
        return this.getPixelForValue(ticks[index].value);
    }
    getValueForPixel(pixel) {
        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);
    }
    getBasePixel() {
        return this.bottom;
    }
}

function generateTicks$1(generationOptions, dataRange) {
    const ticks = [];
    const MIN_SPACING = 1e-14;
    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;
    const unit = step || 1;
    const maxSpaces = maxTicks - 1;
    const { min: rmin , max: rmax  } = dataRange;
    const minDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(min);
    const maxDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(max);
    const countDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(count);
    const minSpacing = (rmax - rmin) / (maxDigits + 1);
    let spacing = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aH)((rmax - rmin) / maxSpaces / unit) * unit;
    let factor, niceMin, niceMax, numSpaces;
    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {
        return [
            {
                value: rmin
            },
            {
                value: rmax
            }
        ];
    }
    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);
    if (numSpaces > maxSpaces) {
        spacing = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aH)(numSpaces * spacing / maxSpaces / unit) * unit;
    }
    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(precision)) {
        factor = Math.pow(10, precision);
        spacing = Math.ceil(spacing * factor) / factor;
    }
    if (bounds === 'ticks') {
        niceMin = Math.floor(rmin / spacing) * spacing;
        niceMax = Math.ceil(rmax / spacing) * spacing;
    } else {
        niceMin = rmin;
        niceMax = rmax;
    }
    if (minDefined && maxDefined && step && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aI)((max - min) / step, spacing / 1000)) {
        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));
        spacing = (max - min) / numSpaces;
        niceMin = min;
        niceMax = max;
    } else if (countDefined) {
        niceMin = minDefined ? min : niceMin;
        niceMax = maxDefined ? max : niceMax;
        numSpaces = count - 1;
        spacing = (niceMax - niceMin) / numSpaces;
    } else {
        numSpaces = (niceMax - niceMin) / spacing;
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(numSpaces, Math.round(numSpaces), spacing / 1000)) {
            numSpaces = Math.round(numSpaces);
        } else {
            numSpaces = Math.ceil(numSpaces);
        }
    }
    const decimalPlaces = Math.max((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aK)(spacing), (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aK)(niceMin));
    factor = Math.pow(10, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(precision) ? decimalPlaces : precision);
    niceMin = Math.round(niceMin * factor) / factor;
    niceMax = Math.round(niceMax * factor) / factor;
    let j = 0;
    if (minDefined) {
        if (includeBounds && niceMin !== min) {
            ticks.push({
                value: min
            });
            if (niceMin < min) {
                j++;
            }
            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {
                j++;
            }
        } else if (niceMin < min) {
            j++;
        }
    }
    for(; j < numSpaces; ++j){
        ticks.push({
            value: Math.round((niceMin + j * spacing) * factor) / factor
        });
    }
    if (maxDefined && includeBounds && niceMax !== max) {
        if (ticks.length && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {
            ticks[ticks.length - 1].value = max;
        } else {
            ticks.push({
                value: max
            });
        }
    } else if (!maxDefined || niceMax === max) {
        ticks.push({
            value: niceMax
        });
    }
    return ticks;
}
function relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {
    const rad = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(minRotation);
    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;
    const length = 0.75 * minSpacing * ('' + value).length;
    return Math.min(minSpacing / ratio, length);
}
class LinearScaleBase extends Scale {
    constructor(cfg){
        super(cfg);
         this.start = undefined;
         this.end = undefined;
         this._startValue = undefined;
         this._endValue = undefined;
        this._valueRange = 0;
    }
    parse(raw, index) {
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(raw)) {
            return null;
        }
        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {
            return null;
        }
        return +raw;
    }
    handleTickRangeOptions() {
        const { beginAtZero  } = this.options;
        const { minDefined , maxDefined  } = this.getUserBounds();
        let { min , max  } = this;
        const setMin = (v)=>min = minDefined ? min : v;
        const setMax = (v)=>max = maxDefined ? max : v;
        if (beginAtZero) {
            const minSign = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(min);
            const maxSign = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(max);
            if (minSign < 0 && maxSign < 0) {
                setMax(0);
            } else if (minSign > 0 && maxSign > 0) {
                setMin(0);
            }
        }
        if (min === max) {
            let offset = max === 0 ? 1 : Math.abs(max * 0.05);
            setMax(max + offset);
            if (!beginAtZero) {
                setMin(min - offset);
            }
        }
        this.min = min;
        this.max = max;
    }
    getTickLimit() {
        const tickOpts = this.options.ticks;
        let { maxTicksLimit , stepSize  } = tickOpts;
        let maxTicks;
        if (stepSize) {
            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;
            if (maxTicks > 1000) {
                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);
                maxTicks = 1000;
            }
        } else {
            maxTicks = this.computeTickLimit();
            maxTicksLimit = maxTicksLimit || 11;
        }
        if (maxTicksLimit) {
            maxTicks = Math.min(maxTicksLimit, maxTicks);
        }
        return maxTicks;
    }
 computeTickLimit() {
        return Number.POSITIVE_INFINITY;
    }
    buildTicks() {
        const opts = this.options;
        const tickOpts = opts.ticks;
        let maxTicks = this.getTickLimit();
        maxTicks = Math.max(2, maxTicks);
        const numericGeneratorOptions = {
            maxTicks,
            bounds: opts.bounds,
            min: opts.min,
            max: opts.max,
            precision: tickOpts.precision,
            step: tickOpts.stepSize,
            count: tickOpts.count,
            maxDigits: this._maxDigits(),
            horizontal: this.isHorizontal(),
            minRotation: tickOpts.minRotation || 0,
            includeBounds: tickOpts.includeBounds !== false
        };
        const dataRange = this._range || this;
        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);
        if (opts.bounds === 'ticks') {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aG)(ticks, this, 'value');
        }
        if (opts.reverse) {
            ticks.reverse();
            this.start = this.max;
            this.end = this.min;
        } else {
            this.start = this.min;
            this.end = this.max;
        }
        return ticks;
    }
 configure() {
        const ticks = this.ticks;
        let start = this.min;
        let end = this.max;
        super.configure();
        if (this.options.offset && ticks.length) {
            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;
            start -= offset;
            end += offset;
        }
        this._startValue = start;
        this._endValue = end;
        this._valueRange = end - start;
    }
    getLabelForValue(value) {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(value, this.chart.options.locale, this.options.ticks.format);
    }
}

class LinearScale extends LinearScaleBase {
    static id = 'linear';
 static defaults = {
        ticks: {
            callback: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL.formatters.numeric
        }
    };
    determineDataLimits() {
        const { min , max  } = this.getMinMax(true);
        this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) ? min : 0;
        this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) ? max : 1;
        this.handleTickRangeOptions();
    }
 computeTickLimit() {
        const horizontal = this.isHorizontal();
        const length = horizontal ? this.width : this.height;
        const minRotation = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.ticks.minRotation);
        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;
        const tickFont = this._resolveTickFontOptions(0);
        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));
    }
    getPixelForValue(value) {
        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);
    }
    getValueForPixel(pixel) {
        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;
    }
}

const log10Floor = (v)=>Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(v));
const changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);
function isMajor(tickVal) {
    const remain = tickVal / Math.pow(10, log10Floor(tickVal));
    return remain === 1;
}
function steps(min, max, rangeExp) {
    const rangeStep = Math.pow(10, rangeExp);
    const start = Math.floor(min / rangeStep);
    const end = Math.ceil(max / rangeStep);
    return end - start;
}
function startExp(min, max) {
    const range = max - min;
    let rangeExp = log10Floor(range);
    while(steps(min, max, rangeExp) > 10){
        rangeExp++;
    }
    while(steps(min, max, rangeExp) < 10){
        rangeExp--;
    }
    return Math.min(rangeExp, log10Floor(min));
}
 function generateTicks(generationOptions, { min , max  }) {
    min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(generationOptions.min, min);
    const ticks = [];
    const minExp = log10Floor(min);
    let exp = startExp(min, max);
    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;
    const stepSize = Math.pow(10, exp);
    const base = minExp > exp ? Math.pow(10, minExp) : 0;
    const start = Math.round((min - base) * precision) / precision;
    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;
    let significand = Math.floor((start - offset) / Math.pow(10, exp));
    let value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);
    while(value < max){
        ticks.push({
            value,
            major: isMajor(value),
            significand
        });
        if (significand >= 10) {
            significand = significand < 15 ? 15 : 20;
        } else {
            significand++;
        }
        if (significand >= 20) {
            exp++;
            significand = 2;
            precision = exp >= 0 ? 1 : precision;
        }
        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;
    }
    const lastTick = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(generationOptions.max, value);
    ticks.push({
        value: lastTick,
        major: isMajor(lastTick),
        significand
    });
    return ticks;
}
class LogarithmicScale extends Scale {
    static id = 'logarithmic';
 static defaults = {
        ticks: {
            callback: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL.formatters.logarithmic,
            major: {
                enabled: true
            }
        }
    };
    constructor(cfg){
        super(cfg);
         this.start = undefined;
         this.end = undefined;
         this._startValue = undefined;
        this._valueRange = 0;
    }
    parse(raw, index) {
        const value = LinearScaleBase.prototype.parse.apply(this, [
            raw,
            index
        ]);
        if (value === 0) {
            this._zero = true;
            return undefined;
        }
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value) && value > 0 ? value : null;
    }
    determineDataLimits() {
        const { min , max  } = this.getMinMax(true);
        this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) ? Math.max(0, min) : null;
        this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) ? Math.max(0, max) : null;
        if (this.options.beginAtZero) {
            this._zero = true;
        }
        if (this._zero && this.min !== this._suggestedMin && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(this._userMin)) {
            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);
        }
        this.handleTickRangeOptions();
    }
    handleTickRangeOptions() {
        const { minDefined , maxDefined  } = this.getUserBounds();
        let min = this.min;
        let max = this.max;
        const setMin = (v)=>min = minDefined ? min : v;
        const setMax = (v)=>max = maxDefined ? max : v;
        if (min === max) {
            if (min <= 0) {
                setMin(1);
                setMax(10);
            } else {
                setMin(changeExponent(min, -1));
                setMax(changeExponent(max, +1));
            }
        }
        if (min <= 0) {
            setMin(changeExponent(max, -1));
        }
        if (max <= 0) {
            setMax(changeExponent(min, +1));
        }
        this.min = min;
        this.max = max;
    }
    buildTicks() {
        const opts = this.options;
        const generationOptions = {
            min: this._userMin,
            max: this._userMax
        };
        const ticks = generateTicks(generationOptions, this);
        if (opts.bounds === 'ticks') {
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aG)(ticks, this, 'value');
        }
        if (opts.reverse) {
            ticks.reverse();
            this.start = this.max;
            this.end = this.min;
        } else {
            this.start = this.min;
            this.end = this.max;
        }
        return ticks;
    }
 getLabelForValue(value) {
        return value === undefined ? '0' : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(value, this.chart.options.locale, this.options.ticks.format);
    }
 configure() {
        const start = this.min;
        super.configure();
        this._startValue = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(start);
        this._valueRange = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(this.max) - (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(start);
    }
    getPixelForValue(value) {
        if (value === undefined || value === 0) {
            value = this.min;
        }
        if (value === null || isNaN(value)) {
            return NaN;
        }
        return this.getPixelForDecimal(value === this.min ? 0 : ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(value) - this._startValue) / this._valueRange);
    }
    getValueForPixel(pixel) {
        const decimal = this.getDecimalForPixel(pixel);
        return Math.pow(10, this._startValue + decimal * this._valueRange);
    }
}

function getTickBackdropHeight(opts) {
    const tickOpts = opts.ticks;
    if (tickOpts.display && opts.display) {
        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(tickOpts.backdropPadding);
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.font.size) + padding.height;
    }
    return 0;
}
function measureLabelSize(ctx, font, label) {
    label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label) ? label : [
        label
    ];
    return {
        w: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aN)(ctx, font.string, label),
        h: label.length * font.lineHeight
    };
}
function determineLimits(angle, pos, size, min, max) {
    if (angle === min || angle === max) {
        return {
            start: pos - size / 2,
            end: pos + size / 2
        };
    } else if (angle < min || angle > max) {
        return {
            start: pos - size,
            end: pos
        };
    }
    return {
        start: pos,
        end: pos + size
    };
}
 function fitWithPointLabels(scale) {
    const orig = {
        l: scale.left + scale._padding.left,
        r: scale.right - scale._padding.right,
        t: scale.top + scale._padding.top,
        b: scale.bottom - scale._padding.bottom
    };
    const limits = Object.assign({}, orig);
    const labelSizes = [];
    const padding = [];
    const valueCount = scale._pointLabels.length;
    const pointLabelOpts = scale.options.pointLabels;
    const additionalAngle = pointLabelOpts.centerPointLabels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P / valueCount : 0;
    for(let i = 0; i < valueCount; i++){
        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));
        padding[i] = opts.padding;
        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);
        const plFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font);
        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);
        labelSizes[i] = textSize;
        const angleRadians = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(scale.getIndexAngle(i) + additionalAngle);
        const angle = Math.round((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.U)(angleRadians));
        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);
        updateLimits(limits, orig, angleRadians, hLimits, vLimits);
    }
    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);
    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);
}
function updateLimits(limits, orig, angle, hLimits, vLimits) {
    const sin = Math.abs(Math.sin(angle));
    const cos = Math.abs(Math.cos(angle));
    let x = 0;
    let y = 0;
    if (hLimits.start < orig.l) {
        x = (orig.l - hLimits.start) / sin;
        limits.l = Math.min(limits.l, orig.l - x);
    } else if (hLimits.end > orig.r) {
        x = (hLimits.end - orig.r) / sin;
        limits.r = Math.max(limits.r, orig.r + x);
    }
    if (vLimits.start < orig.t) {
        y = (orig.t - vLimits.start) / cos;
        limits.t = Math.min(limits.t, orig.t - y);
    } else if (vLimits.end > orig.b) {
        y = (vLimits.end - orig.b) / cos;
        limits.b = Math.max(limits.b, orig.b + y);
    }
}
function buildPointLabelItems(scale, labelSizes, padding) {
    const items = [];
    const valueCount = scale._pointLabels.length;
    const opts = scale.options;
    const extra = getTickBackdropHeight(opts) / 2;
    const outerDistance = scale.drawingArea;
    const additionalAngle = opts.pointLabels.centerPointLabels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P / valueCount : 0;
    for(let i = 0; i < valueCount; i++){
        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);
        const angle = Math.round((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.U)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(pointLabelPosition.angle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H)));
        const size = labelSizes[i];
        const y = yForAngle(pointLabelPosition.y, size.h, angle);
        const textAlign = getTextAlignForAngle(angle);
        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);
        items.push({
            x: pointLabelPosition.x,
            y,
            textAlign,
            left,
            top: y,
            right: left + size.w,
            bottom: y + size.h
        });
    }
    return items;
}
function getTextAlignForAngle(angle) {
    if (angle === 0 || angle === 180) {
        return 'center';
    } else if (angle < 180) {
        return 'left';
    }
    return 'right';
}
function leftForTextAlign(x, w, align) {
    if (align === 'right') {
        x -= w;
    } else if (align === 'center') {
        x -= w / 2;
    }
    return x;
}
function yForAngle(y, h, angle) {
    if (angle === 90 || angle === 270) {
        y -= h / 2;
    } else if (angle > 270 || angle < 90) {
        y -= h;
    }
    return y;
}
function drawPointLabels(scale, labelCount) {
    const { ctx , options: { pointLabels  }  } = scale;
    for(let i = labelCount - 1; i >= 0; i--){
        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));
        const plFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(optsAtIndex.font);
        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];
        const { backdropColor  } = optsAtIndex;
        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(backdropColor)) {
            const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(optsAtIndex.borderRadius);
            const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(optsAtIndex.backdropPadding);
            ctx.fillStyle = backdropColor;
            const backdropLeft = left - padding.left;
            const backdropTop = top - padding.top;
            const backdropWidth = right - left + padding.width;
            const backdropHeight = bottom - top + padding.height;
            if (Object.values(borderRadius).some((v)=>v !== 0)) {
                ctx.beginPath();
                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {
                    x: backdropLeft,
                    y: backdropTop,
                    w: backdropWidth,
                    h: backdropHeight,
                    radius: borderRadius
                });
                ctx.fill();
            } else {
                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);
            }
        }
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {
            color: optsAtIndex.color,
            textAlign: textAlign,
            textBaseline: 'middle'
        });
    }
}
function pathRadiusLine(scale, radius, circular, labelCount) {
    const { ctx  } = scale;
    if (circular) {
        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);
    } else {
        let pointPosition = scale.getPointPosition(0, radius);
        ctx.moveTo(pointPosition.x, pointPosition.y);
        for(let i = 1; i < labelCount; i++){
            pointPosition = scale.getPointPosition(i, radius);
            ctx.lineTo(pointPosition.x, pointPosition.y);
        }
    }
}
function drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {
    const ctx = scale.ctx;
    const circular = gridLineOpts.circular;
    const { color , lineWidth  } = gridLineOpts;
    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {
        return;
    }
    ctx.save();
    ctx.strokeStyle = color;
    ctx.lineWidth = lineWidth;
    ctx.setLineDash(borderOpts.dash);
    ctx.lineDashOffset = borderOpts.dashOffset;
    ctx.beginPath();
    pathRadiusLine(scale, radius, circular, labelCount);
    ctx.closePath();
    ctx.stroke();
    ctx.restore();
}
function createPointLabelContext(parent, index, label) {
    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {
        label,
        index,
        type: 'pointLabel'
    });
}
class RadialLinearScale extends LinearScaleBase {
    static id = 'radialLinear';
 static defaults = {
        display: true,
        animate: true,
        position: 'chartArea',
        angleLines: {
            display: true,
            lineWidth: 1,
            borderDash: [],
            borderDashOffset: 0.0
        },
        grid: {
            circular: false
        },
        startAngle: 0,
        ticks: {
            showLabelBackdrop: true,
            callback: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL.formatters.numeric
        },
        pointLabels: {
            backdropColor: undefined,
            backdropPadding: 2,
            display: true,
            font: {
                size: 10
            },
            callback (label) {
                return label;
            },
            padding: 5,
            centerPointLabels: false
        }
    };
    static defaultRoutes = {
        'angleLines.color': 'borderColor',
        'pointLabels.color': 'color',
        'ticks.color': 'color'
    };
    static descriptors = {
        angleLines: {
            _fallback: 'grid'
        }
    };
    constructor(cfg){
        super(cfg);
         this.xCenter = undefined;
         this.yCenter = undefined;
         this.drawingArea = undefined;
         this._pointLabels = [];
        this._pointLabelItems = [];
    }
    setDimensions() {
        const padding = this._padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(getTickBackdropHeight(this.options) / 2);
        const w = this.width = this.maxWidth - padding.width;
        const h = this.height = this.maxHeight - padding.height;
        this.xCenter = Math.floor(this.left + w / 2 + padding.left);
        this.yCenter = Math.floor(this.top + h / 2 + padding.top);
        this.drawingArea = Math.floor(Math.min(w, h) / 2);
    }
    determineDataLimits() {
        const { min , max  } = this.getMinMax(false);
        this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) && !isNaN(min) ? min : 0;
        this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) && !isNaN(max) ? max : 0;
        this.handleTickRangeOptions();
    }
 computeTickLimit() {
        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));
    }
    generateTickLabels(ticks) {
        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);
        this._pointLabels = this.getLabels().map((value, index)=>{
            const label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.pointLabels.callback, [
                value,
                index
            ], this);
            return label || label === 0 ? label : '';
        }).filter((v, i)=>this.chart.getDataVisibility(i));
    }
    fit() {
        const opts = this.options;
        if (opts.display && opts.pointLabels.display) {
            fitWithPointLabels(this);
        } else {
            this.setCenterPoint(0, 0, 0, 0);
        }
    }
    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {
        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);
        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);
        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));
    }
    getIndexAngle(index) {
        const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T / (this._pointLabels.length || 1);
        const startAngle = this.options.startAngle || 0;
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(index * angleMultiplier + (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(startAngle));
    }
    getDistanceFromCenterForValue(value) {
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {
            return NaN;
        }
        const scalingFactor = this.drawingArea / (this.max - this.min);
        if (this.options.reverse) {
            return (this.max - value) * scalingFactor;
        }
        return (value - this.min) * scalingFactor;
    }
    getValueForDistanceFromCenter(distance) {
        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(distance)) {
            return NaN;
        }
        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));
        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;
    }
    getPointLabelContext(index) {
        const pointLabels = this._pointLabels || [];
        if (index >= 0 && index < pointLabels.length) {
            const pointLabel = pointLabels[index];
            return createPointLabelContext(this.getContext(), index, pointLabel);
        }
    }
    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {
        const angle = this.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H + additionalAngle;
        return {
            x: Math.cos(angle) * distanceFromCenter + this.xCenter,
            y: Math.sin(angle) * distanceFromCenter + this.yCenter,
            angle
        };
    }
    getPointPositionForValue(index, value) {
        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
    }
    getBasePosition(index) {
        return this.getPointPositionForValue(index || 0, this.getBaseValue());
    }
    getPointLabelPosition(index) {
        const { left , top , right , bottom  } = this._pointLabelItems[index];
        return {
            left,
            top,
            right,
            bottom
        };
    }
 drawBackground() {
        const { backgroundColor , grid: { circular  }  } = this.options;
        if (backgroundColor) {
            const ctx = this.ctx;
            ctx.save();
            ctx.beginPath();
            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);
            ctx.closePath();
            ctx.fillStyle = backgroundColor;
            ctx.fill();
            ctx.restore();
        }
    }
 drawGrid() {
        const ctx = this.ctx;
        const opts = this.options;
        const { angleLines , grid , border  } = opts;
        const labelCount = this._pointLabels.length;
        let i, offset, position;
        if (opts.pointLabels.display) {
            drawPointLabels(this, labelCount);
        }
        if (grid.display) {
            this.ticks.forEach((tick, index)=>{
                if (index !== 0) {
                    offset = this.getDistanceFromCenterForValue(tick.value);
                    const context = this.getContext(index);
                    const optsAtIndex = grid.setContext(context);
                    const optsAtIndexBorder = border.setContext(context);
                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);
                }
            });
        }
        if (angleLines.display) {
            ctx.save();
            for(i = labelCount - 1; i >= 0; i--){
                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));
                const { color , lineWidth  } = optsAtIndex;
                if (!lineWidth || !color) {
                    continue;
                }
                ctx.lineWidth = lineWidth;
                ctx.strokeStyle = color;
                ctx.setLineDash(optsAtIndex.borderDash);
                ctx.lineDashOffset = optsAtIndex.borderDashOffset;
                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);
                position = this.getPointPosition(i, offset);
                ctx.beginPath();
                ctx.moveTo(this.xCenter, this.yCenter);
                ctx.lineTo(position.x, position.y);
                ctx.stroke();
            }
            ctx.restore();
        }
    }
 drawBorder() {}
 drawLabels() {
        const ctx = this.ctx;
        const opts = this.options;
        const tickOpts = opts.ticks;
        if (!tickOpts.display) {
            return;
        }
        const startAngle = this.getIndexAngle(0);
        let offset, width;
        ctx.save();
        ctx.translate(this.xCenter, this.yCenter);
        ctx.rotate(startAngle);
        ctx.textAlign = 'center';
        ctx.textBaseline = 'middle';
        this.ticks.forEach((tick, index)=>{
            if (index === 0 && !opts.reverse) {
                return;
            }
            const optsAtIndex = tickOpts.setContext(this.getContext(index));
            const tickFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(optsAtIndex.font);
            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);
            if (optsAtIndex.showLabelBackdrop) {
                ctx.font = tickFont.string;
                width = ctx.measureText(tick.label).width;
                ctx.fillStyle = optsAtIndex.backdropColor;
                const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(optsAtIndex.backdropPadding);
                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);
            }
            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, tick.label, 0, -offset, tickFont, {
                color: optsAtIndex.color
            });
        });
        ctx.restore();
    }
 drawTitle() {}
}

const INTERVALS = {
    millisecond: {
        common: true,
        size: 1,
        steps: 1000
    },
    second: {
        common: true,
        size: 1000,
        steps: 60
    },
    minute: {
        common: true,
        size: 60000,
        steps: 60
    },
    hour: {
        common: true,
        size: 3600000,
        steps: 24
    },
    day: {
        common: true,
        size: 86400000,
        steps: 30
    },
    week: {
        common: false,
        size: 604800000,
        steps: 4
    },
    month: {
        common: true,
        size: 2.628e9,
        steps: 12
    },
    quarter: {
        common: false,
        size: 7.884e9,
        steps: 4
    },
    year: {
        common: true,
        size: 3.154e10
    }
};
 const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);
 function sorter(a, b) {
    return a - b;
}
 function parse(scale, input) {
    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(input)) {
        return null;
    }
    const adapter = scale._adapter;
    const { parser , round , isoWeekday  } = scale._parseOpts;
    let value = input;
    if (typeof parser === 'function') {
        value = parser(value);
    }
    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value)) {
        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);
    }
    if (value === null) {
        return null;
    }
    if (round) {
        value = round === 'week' && ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);
    }
    return +value;
}
 function determineUnitForAutoTicks(minUnit, min, max, capacity) {
    const ilen = UNITS.length;
    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){
        const interval = INTERVALS[UNITS[i]];
        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;
        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
            return UNITS[i];
        }
    }
    return UNITS[ilen - 1];
}
 function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {
    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){
        const unit = UNITS[i];
        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {
            return unit;
        }
    }
    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];
}
 function determineMajorUnit(unit) {
    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){
        if (INTERVALS[UNITS[i]].common) {
            return UNITS[i];
        }
    }
}
 function addTick(ticks, time, timestamps) {
    if (!timestamps) {
        ticks[time] = true;
    } else if (timestamps.length) {
        const { lo , hi  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aP)(timestamps, time);
        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];
        ticks[timestamp] = true;
    }
}
 function setMajorTicks(scale, ticks, map, majorUnit) {
    const adapter = scale._adapter;
    const first = +adapter.startOf(ticks[0].value, majorUnit);
    const last = ticks[ticks.length - 1].value;
    let major, index;
    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){
        index = map[major];
        if (index >= 0) {
            ticks[index].major = true;
        }
    }
    return ticks;
}
 function ticksFromTimestamps(scale, values, majorUnit) {
    const ticks = [];
     const map = {};
    const ilen = values.length;
    let i, value;
    for(i = 0; i < ilen; ++i){
        value = values[i];
        map[value] = i;
        ticks.push({
            value,
            major: false
        });
    }
    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);
}
class TimeScale extends Scale {
    static id = 'time';
 static defaults = {
 bounds: 'data',
        adapters: {},
        time: {
            parser: false,
            unit: false,
            round: false,
            isoWeekday: false,
            minUnit: 'millisecond',
            displayFormats: {}
        },
        ticks: {
 source: 'auto',
            callback: false,
            major: {
                enabled: false
            }
        }
    };
 constructor(props){
        super(props);
         this._cache = {
            data: [],
            labels: [],
            all: []
        };
         this._unit = 'day';
         this._majorUnit = undefined;
        this._offsets = {};
        this._normalized = false;
        this._parseOpts = undefined;
    }
    init(scaleOpts, opts = {}) {
        const time = scaleOpts.time || (scaleOpts.time = {});
         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);
        adapter.init(opts);
        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(time.displayFormats, adapter.formats());
        this._parseOpts = {
            parser: time.parser,
            round: time.round,
            isoWeekday: time.isoWeekday
        };
        super.init(scaleOpts);
        this._normalized = opts.normalized;
    }
 parse(raw, index) {
        if (raw === undefined) {
            return null;
        }
        return parse(this, raw);
    }
    beforeLayout() {
        super.beforeLayout();
        this._cache = {
            data: [],
            labels: [],
            all: []
        };
    }
    determineDataLimits() {
        const options = this.options;
        const adapter = this._adapter;
        const unit = options.time.unit || 'day';
        let { min , max , minDefined , maxDefined  } = this.getUserBounds();
 function _applyBounds(bounds) {
            if (!minDefined && !isNaN(bounds.min)) {
                min = Math.min(min, bounds.min);
            }
            if (!maxDefined && !isNaN(bounds.max)) {
                max = Math.max(max, bounds.max);
            }
        }
        if (!minDefined || !maxDefined) {
            _applyBounds(this._getLabelBounds());
            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {
                _applyBounds(this.getMinMax(false));
            }
        }
        min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);
        max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;
        this.min = Math.min(min, max - 1);
        this.max = Math.max(min + 1, max);
    }
 _getLabelBounds() {
        const arr = this.getLabelTimestamps();
        let min = Number.POSITIVE_INFINITY;
        let max = Number.NEGATIVE_INFINITY;
        if (arr.length) {
            min = arr[0];
            max = arr[arr.length - 1];
        }
        return {
            min,
            max
        };
    }
 buildTicks() {
        const options = this.options;
        const timeOpts = options.time;
        const tickOpts = options.ticks;
        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();
        if (options.bounds === 'ticks' && timestamps.length) {
            this.min = this._userMin || timestamps[0];
            this.max = this._userMax || timestamps[timestamps.length - 1];
        }
        const min = this.min;
        const max = this.max;
        const ticks = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aO)(timestamps, min, max);
        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));
        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);
        this.initOffsets(timestamps);
        if (options.reverse) {
            ticks.reverse();
        }
        return ticksFromTimestamps(this, ticks, this._majorUnit);
    }
    afterAutoSkip() {
        if (this.options.offsetAfterAutoskip) {
            this.initOffsets(this.ticks.map((tick)=>+tick.value));
        }
    }
 initOffsets(timestamps = []) {
        let start = 0;
        let end = 0;
        let first, last;
        if (this.options.offset && timestamps.length) {
            first = this.getDecimalForValue(timestamps[0]);
            if (timestamps.length === 1) {
                start = 1 - first;
            } else {
                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;
            }
            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);
            if (timestamps.length === 1) {
                end = last;
            } else {
                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;
            }
        }
        const limit = timestamps.length < 3 ? 0.5 : 0.25;
        start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(start, 0, limit);
        end = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(end, 0, limit);
        this._offsets = {
            start,
            end,
            factor: 1 / (start + 1 + end)
        };
    }
 _generate() {
        const adapter = this._adapter;
        const min = this.min;
        const max = this.max;
        const options = this.options;
        const timeOpts = options.time;
        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));
        const stepSize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.ticks.stepSize, 1);
        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;
        const hasWeekday = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(weekday) || weekday === true;
        const ticks = {};
        let first = min;
        let time, count;
        if (hasWeekday) {
            first = +adapter.startOf(first, 'isoWeek', weekday);
        }
        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);
        if (adapter.diff(max, min, minor) > 100000 * stepSize) {
            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);
        }
        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();
        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){
            addTick(ticks, time, timestamps);
        }
        if (time === max || options.bounds === 'ticks' || count === 1) {
            addTick(ticks, time, timestamps);
        }
        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);
    }
 getLabelForValue(value) {
        const adapter = this._adapter;
        const timeOpts = this.options.time;
        if (timeOpts.tooltipFormat) {
            return adapter.format(value, timeOpts.tooltipFormat);
        }
        return adapter.format(value, timeOpts.displayFormats.datetime);
    }
 format(value, format) {
        const options = this.options;
        const formats = options.time.displayFormats;
        const unit = this._unit;
        const fmt = format || formats[unit];
        return this._adapter.format(value, fmt);
    }
 _tickFormatFunction(time, index, ticks, format) {
        const options = this.options;
        const formatter = options.ticks.callback;
        if (formatter) {
            return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(formatter, [
                time,
                index,
                ticks
            ], this);
        }
        const formats = options.time.displayFormats;
        const unit = this._unit;
        const majorUnit = this._majorUnit;
        const minorFormat = unit && formats[unit];
        const majorFormat = majorUnit && formats[majorUnit];
        const tick = ticks[index];
        const major = majorUnit && majorFormat && tick && tick.major;
        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));
    }
 generateTickLabels(ticks) {
        let i, ilen, tick;
        for(i = 0, ilen = ticks.length; i < ilen; ++i){
            tick = ticks[i];
            tick.label = this._tickFormatFunction(tick.value, i, ticks);
        }
    }
 getDecimalForValue(value) {
        return value === null ? NaN : (value - this.min) / (this.max - this.min);
    }
 getPixelForValue(value) {
        const offsets = this._offsets;
        const pos = this.getDecimalForValue(value);
        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);
    }
 getValueForPixel(pixel) {
        const offsets = this._offsets;
        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;
        return this.min + pos * (this.max - this.min);
    }
 _getLabelSize(label) {
        const ticksOpts = this.options.ticks;
        const tickLabelWidth = this.ctx.measureText(label).width;
        const angle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);
        const cosRotation = Math.cos(angle);
        const sinRotation = Math.sin(angle);
        const tickFontSize = this._resolveTickFontOptions(0).size;
        return {
            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,
            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation
        };
    }
 _getLabelCapacity(exampleTime) {
        const timeOpts = this.options.time;
        const displayFormats = timeOpts.displayFormats;
        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;
        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [
            exampleTime
        ], this._majorUnit), format);
        const size = this._getLabelSize(exampleLabel);
        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;
        return capacity > 0 ? capacity : 1;
    }
 getDataTimestamps() {
        let timestamps = this._cache.data || [];
        let i, ilen;
        if (timestamps.length) {
            return timestamps;
        }
        const metas = this.getMatchingVisibleMetas();
        if (this._normalized && metas.length) {
            return this._cache.data = metas[0].controller.getAllParsedValues(this);
        }
        for(i = 0, ilen = metas.length; i < ilen; ++i){
            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));
        }
        return this._cache.data = this.normalize(timestamps);
    }
 getLabelTimestamps() {
        const timestamps = this._cache.labels || [];
        let i, ilen;
        if (timestamps.length) {
            return timestamps;
        }
        const labels = this.getLabels();
        for(i = 0, ilen = labels.length; i < ilen; ++i){
            timestamps.push(parse(this, labels[i]));
        }
        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);
    }
 normalize(values) {
        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__._)(values.sort(sorter));
    }
}

function interpolate(table, val, reverse) {
    let lo = 0;
    let hi = table.length - 1;
    let prevSource, nextSource, prevTarget, nextTarget;
    if (reverse) {
        if (val >= table[lo].pos && val <= table[hi].pos) {
            ({ lo , hi  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(table, 'pos', val));
        }
        ({ pos: prevSource , time: prevTarget  } = table[lo]);
        ({ pos: nextSource , time: nextTarget  } = table[hi]);
    } else {
        if (val >= table[lo].time && val <= table[hi].time) {
            ({ lo , hi  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(table, 'time', val));
        }
        ({ time: prevSource , pos: prevTarget  } = table[lo]);
        ({ time: nextSource , pos: nextTarget  } = table[hi]);
    }
    const span = nextSource - prevSource;
    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;
}
class TimeSeriesScale extends TimeScale {
    static id = 'timeseries';
 static defaults = TimeScale.defaults;
 constructor(props){
        super(props);
         this._table = [];
         this._minPos = undefined;
         this._tableRange = undefined;
    }
 initOffsets() {
        const timestamps = this._getTimestampsForTable();
        const table = this._table = this.buildLookupTable(timestamps);
        this._minPos = interpolate(table, this.min);
        this._tableRange = interpolate(table, this.max) - this._minPos;
        super.initOffsets(timestamps);
    }
 buildLookupTable(timestamps) {
        const { min , max  } = this;
        const items = [];
        const table = [];
        let i, ilen, prev, curr, next;
        for(i = 0, ilen = timestamps.length; i < ilen; ++i){
            curr = timestamps[i];
            if (curr >= min && curr <= max) {
                items.push(curr);
            }
        }
        if (items.length < 2) {
            return [
                {
                    time: min,
                    pos: 0
                },
                {
                    time: max,
                    pos: 1
                }
            ];
        }
        for(i = 0, ilen = items.length; i < ilen; ++i){
            next = items[i + 1];
            prev = items[i - 1];
            curr = items[i];
            if (Math.round((next + prev) / 2) !== curr) {
                table.push({
                    time: curr,
                    pos: i / (ilen - 1)
                });
            }
        }
        return table;
    }
 _getTimestampsForTable() {
        let timestamps = this._cache.all || [];
        if (timestamps.length) {
            return timestamps;
        }
        const data = this.getDataTimestamps();
        const label = this.getLabelTimestamps();
        if (data.length && label.length) {
            timestamps = this.normalize(data.concat(label));
        } else {
            timestamps = data.length ? data : label;
        }
        timestamps = this._cache.all = timestamps;
        return timestamps;
    }
 getDecimalForValue(value) {
        return (interpolate(this._table, value) - this._minPos) / this._tableRange;
    }
 getValueForPixel(pixel) {
        const offsets = this._offsets;
        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;
        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);
    }
}

var scales = /*#__PURE__*/Object.freeze({
__proto__: null,
CategoryScale: CategoryScale,
LinearScale: LinearScale,
LogarithmicScale: LogarithmicScale,
RadialLinearScale: RadialLinearScale,
TimeScale: TimeScale,
TimeSeriesScale: TimeSeriesScale
});

const registerables = [
    controllers,
    elements,
    plugins,
    scales
];


//# sourceMappingURL=chart.js.map


/***/ }),

/***/ "./node_modules/chart.js/dist/chunks/helpers.segment.js":
/*!**************************************************************!*\
  !*** ./node_modules/chart.js/dist/chunks/helpers.segment.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$": () => (/* binding */ unclipArea),
/* harmony export */   "A": () => (/* binding */ _rlookupByKey),
/* harmony export */   "B": () => (/* binding */ _lookupByKey),
/* harmony export */   "C": () => (/* binding */ _isPointInArea),
/* harmony export */   "D": () => (/* binding */ getAngleFromPoint),
/* harmony export */   "E": () => (/* binding */ toPadding),
/* harmony export */   "F": () => (/* binding */ each),
/* harmony export */   "G": () => (/* binding */ getMaximumSize),
/* harmony export */   "H": () => (/* binding */ HALF_PI),
/* harmony export */   "I": () => (/* binding */ _getParentNode),
/* harmony export */   "J": () => (/* binding */ readUsedSize),
/* harmony export */   "K": () => (/* binding */ supportsEventListenerOptions),
/* harmony export */   "L": () => (/* binding */ throttled),
/* harmony export */   "M": () => (/* binding */ _isDomSupported),
/* harmony export */   "N": () => (/* binding */ _factorize),
/* harmony export */   "O": () => (/* binding */ finiteOrDefault),
/* harmony export */   "P": () => (/* binding */ PI),
/* harmony export */   "Q": () => (/* binding */ callback),
/* harmony export */   "R": () => (/* binding */ _addGrace),
/* harmony export */   "S": () => (/* binding */ _limitValue),
/* harmony export */   "T": () => (/* binding */ TAU),
/* harmony export */   "U": () => (/* binding */ toDegrees),
/* harmony export */   "V": () => (/* binding */ _measureText),
/* harmony export */   "W": () => (/* binding */ _int16Range),
/* harmony export */   "X": () => (/* binding */ _alignPixel),
/* harmony export */   "Y": () => (/* binding */ clipArea),
/* harmony export */   "Z": () => (/* binding */ renderText),
/* harmony export */   "_": () => (/* binding */ _arrayUnique),
/* harmony export */   "a": () => (/* binding */ resolve),
/* harmony export */   "a$": () => (/* binding */ fontString),
/* harmony export */   "a0": () => (/* binding */ toFont),
/* harmony export */   "a1": () => (/* binding */ _toLeftRightCenter),
/* harmony export */   "a2": () => (/* binding */ _alignStartEnd),
/* harmony export */   "a3": () => (/* binding */ overrides),
/* harmony export */   "a4": () => (/* binding */ merge),
/* harmony export */   "a5": () => (/* binding */ _capitalize),
/* harmony export */   "a6": () => (/* binding */ descriptors),
/* harmony export */   "a7": () => (/* binding */ isFunction),
/* harmony export */   "a8": () => (/* binding */ _attachContext),
/* harmony export */   "a9": () => (/* binding */ _createResolver),
/* harmony export */   "aA": () => (/* binding */ overrideTextDirection),
/* harmony export */   "aB": () => (/* binding */ _textX),
/* harmony export */   "aC": () => (/* binding */ restoreTextDirection),
/* harmony export */   "aD": () => (/* binding */ drawPointLegend),
/* harmony export */   "aE": () => (/* binding */ distanceBetweenPoints),
/* harmony export */   "aF": () => (/* binding */ noop),
/* harmony export */   "aG": () => (/* binding */ _setMinAndMaxByKey),
/* harmony export */   "aH": () => (/* binding */ niceNum),
/* harmony export */   "aI": () => (/* binding */ almostWhole),
/* harmony export */   "aJ": () => (/* binding */ almostEquals),
/* harmony export */   "aK": () => (/* binding */ _decimalPlaces),
/* harmony export */   "aL": () => (/* binding */ Ticks),
/* harmony export */   "aM": () => (/* binding */ log10),
/* harmony export */   "aN": () => (/* binding */ _longestText),
/* harmony export */   "aO": () => (/* binding */ _filterBetween),
/* harmony export */   "aP": () => (/* binding */ _lookup),
/* harmony export */   "aQ": () => (/* binding */ isPatternOrGradient),
/* harmony export */   "aR": () => (/* binding */ getHoverColor),
/* harmony export */   "aS": () => (/* binding */ clone),
/* harmony export */   "aT": () => (/* binding */ _merger),
/* harmony export */   "aU": () => (/* binding */ _mergerIf),
/* harmony export */   "aV": () => (/* binding */ _deprecated),
/* harmony export */   "aW": () => (/* binding */ _splitKey),
/* harmony export */   "aX": () => (/* binding */ toFontString),
/* harmony export */   "aY": () => (/* binding */ splineCurve),
/* harmony export */   "aZ": () => (/* binding */ splineCurveMonotone),
/* harmony export */   "a_": () => (/* binding */ getStyle),
/* harmony export */   "aa": () => (/* binding */ _descriptors),
/* harmony export */   "ab": () => (/* binding */ mergeIf),
/* harmony export */   "ac": () => (/* binding */ uid),
/* harmony export */   "ad": () => (/* binding */ debounce),
/* harmony export */   "ae": () => (/* binding */ retinaScale),
/* harmony export */   "af": () => (/* binding */ clearCanvas),
/* harmony export */   "ag": () => (/* binding */ setsEqual),
/* harmony export */   "ah": () => (/* binding */ _elementsEqual),
/* harmony export */   "ai": () => (/* binding */ _isClickEvent),
/* harmony export */   "aj": () => (/* binding */ _isBetween),
/* harmony export */   "ak": () => (/* binding */ _readValueToProps),
/* harmony export */   "al": () => (/* binding */ _updateBezierControlPoints),
/* harmony export */   "am": () => (/* binding */ _computeSegments),
/* harmony export */   "an": () => (/* binding */ _boundSegments),
/* harmony export */   "ao": () => (/* binding */ _steppedInterpolation),
/* harmony export */   "ap": () => (/* binding */ _bezierInterpolation),
/* harmony export */   "aq": () => (/* binding */ _pointInLine),
/* harmony export */   "ar": () => (/* binding */ _steppedLineTo),
/* harmony export */   "as": () => (/* binding */ _bezierCurveTo),
/* harmony export */   "at": () => (/* binding */ drawPoint),
/* harmony export */   "au": () => (/* binding */ addRoundedRectPath),
/* harmony export */   "av": () => (/* binding */ toTRBL),
/* harmony export */   "aw": () => (/* binding */ toTRBLCorners),
/* harmony export */   "ax": () => (/* binding */ _boundSegment),
/* harmony export */   "ay": () => (/* binding */ _normalizeAngle),
/* harmony export */   "az": () => (/* binding */ getRtlAdapter),
/* harmony export */   "b": () => (/* binding */ isArray),
/* harmony export */   "b0": () => (/* binding */ toLineHeight),
/* harmony export */   "b1": () => (/* binding */ PITAU),
/* harmony export */   "b2": () => (/* binding */ INFINITY),
/* harmony export */   "b3": () => (/* binding */ RAD_PER_DEG),
/* harmony export */   "b4": () => (/* binding */ QUARTER_PI),
/* harmony export */   "b5": () => (/* binding */ TWO_THIRDS_PI),
/* harmony export */   "b6": () => (/* binding */ _angleDiff),
/* harmony export */   "c": () => (/* binding */ color),
/* harmony export */   "d": () => (/* binding */ defaults),
/* harmony export */   "e": () => (/* binding */ effects),
/* harmony export */   "f": () => (/* binding */ resolveObjectKey),
/* harmony export */   "g": () => (/* binding */ isNumberFinite),
/* harmony export */   "h": () => (/* binding */ defined),
/* harmony export */   "i": () => (/* binding */ isObject),
/* harmony export */   "j": () => (/* binding */ createContext),
/* harmony export */   "k": () => (/* binding */ isNullOrUndef),
/* harmony export */   "l": () => (/* binding */ listenArrayEvents),
/* harmony export */   "m": () => (/* binding */ toPercentage),
/* harmony export */   "n": () => (/* binding */ toDimension),
/* harmony export */   "o": () => (/* binding */ formatNumber),
/* harmony export */   "p": () => (/* binding */ _angleBetween),
/* harmony export */   "q": () => (/* binding */ _getStartAndCountOfVisiblePoints),
/* harmony export */   "r": () => (/* binding */ requestAnimFrame),
/* harmony export */   "s": () => (/* binding */ sign),
/* harmony export */   "t": () => (/* binding */ toRadians),
/* harmony export */   "u": () => (/* binding */ unlistenArrayEvents),
/* harmony export */   "v": () => (/* binding */ valueOrDefault),
/* harmony export */   "w": () => (/* binding */ _scaleRangesChanged),
/* harmony export */   "x": () => (/* binding */ isNumber),
/* harmony export */   "y": () => (/* binding */ _parseObjectDataRadialScale),
/* harmony export */   "z": () => (/* binding */ getRelativePosition)
/* harmony export */ });
/* harmony import */ var _kurkle_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kurkle/color */ "./node_modules/@kurkle/color/dist/color.esm.js");
/*!
 * Chart.js v4.2.1
 * https://www.chartjs.org
 * (c) 2023 Chart.js Contributors
 * Released under the MIT License
 */


/**
 * @namespace Chart.helpers
 */ /**
 * An empty function that can be used, for example, for optional callback.
 */ function noop() {
/* noop */ }
/**
 * Returns a unique id, sequentially generated from a global variable.
 */ const uid = (()=>{
    let id = 0;
    return ()=>id++;
})();
/**
 * Returns true if `value` is neither null nor undefined, else returns false.
 * @param value - The value to test.
 * @since 2.7.0
 */ function isNullOrUndef(value) {
    return value === null || typeof value === 'undefined';
}
/**
 * Returns true if `value` is an array (including typed arrays), else returns false.
 * @param value - The value to test.
 * @function
 */ function isArray(value) {
    if (Array.isArray && Array.isArray(value)) {
        return true;
    }
    const type = Object.prototype.toString.call(value);
    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {
        return true;
    }
    return false;
}
/**
 * Returns true if `value` is an object (excluding null), else returns false.
 * @param value - The value to test.
 * @since 2.7.0
 */ function isObject(value) {
    return value !== null && Object.prototype.toString.call(value) === '[object Object]';
}
/**
 * Returns true if `value` is a finite number, else returns false
 * @param value  - The value to test.
 */ function isNumberFinite(value) {
    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);
}
/**
 * Returns `value` if finite, else returns `defaultValue`.
 * @param value - The value to return if defined.
 * @param defaultValue - The value to return if `value` is not finite.
 */ function finiteOrDefault(value, defaultValue) {
    return isNumberFinite(value) ? value : defaultValue;
}
/**
 * Returns `value` if defined, else returns `defaultValue`.
 * @param value - The value to return if defined.
 * @param defaultValue - The value to return if `value` is undefined.
 */ function valueOrDefault(value, defaultValue) {
    return typeof value === 'undefined' ? defaultValue : value;
}
const toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;
const toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;
/**
 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
 * value returned by `fn`. If `fn` is not a function, this method returns undefined.
 * @param fn - The function to call.
 * @param args - The arguments with which `fn` should be called.
 * @param [thisArg] - The value of `this` provided for the call to `fn`.
 */ function callback(fn, args, thisArg) {
    if (fn && typeof fn.call === 'function') {
        return fn.apply(thisArg, args);
    }
}
function each(loopable, fn, thisArg, reverse) {
    let i, len, keys;
    if (isArray(loopable)) {
        len = loopable.length;
        if (reverse) {
            for(i = len - 1; i >= 0; i--){
                fn.call(thisArg, loopable[i], i);
            }
        } else {
            for(i = 0; i < len; i++){
                fn.call(thisArg, loopable[i], i);
            }
        }
    } else if (isObject(loopable)) {
        keys = Object.keys(loopable);
        len = keys.length;
        for(i = 0; i < len; i++){
            fn.call(thisArg, loopable[keys[i]], keys[i]);
        }
    }
}
/**
 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
 * @param a0 - The array to compare
 * @param a1 - The array to compare
 * @private
 */ function _elementsEqual(a0, a1) {
    let i, ilen, v0, v1;
    if (!a0 || !a1 || a0.length !== a1.length) {
        return false;
    }
    for(i = 0, ilen = a0.length; i < ilen; ++i){
        v0 = a0[i];
        v1 = a1[i];
        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {
            return false;
        }
    }
    return true;
}
/**
 * Returns a deep copy of `source` without keeping references on objects and arrays.
 * @param source - The value to clone.
 */ function clone(source) {
    if (isArray(source)) {
        return source.map(clone);
    }
    if (isObject(source)) {
        const target = Object.create(null);
        const keys = Object.keys(source);
        const klen = keys.length;
        let k = 0;
        for(; k < klen; ++k){
            target[keys[k]] = clone(source[keys[k]]);
        }
        return target;
    }
    return source;
}
function isValidKey(key) {
    return [
        '__proto__',
        'prototype',
        'constructor'
    ].indexOf(key) === -1;
}
/**
 * The default merger when Chart.helpers.merge is called without merger option.
 * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.
 * @private
 */ function _merger(key, target, source, options) {
    if (!isValidKey(key)) {
        return;
    }
    const tval = target[key];
    const sval = source[key];
    if (isObject(tval) && isObject(sval)) {
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        merge(tval, sval, options);
    } else {
        target[key] = clone(sval);
    }
}
function merge(target, source, options) {
    const sources = isArray(source) ? source : [
        source
    ];
    const ilen = sources.length;
    if (!isObject(target)) {
        return target;
    }
    options = options || {};
    const merger = options.merger || _merger;
    let current;
    for(let i = 0; i < ilen; ++i){
        current = sources[i];
        if (!isObject(current)) {
            continue;
        }
        const keys = Object.keys(current);
        for(let k = 0, klen = keys.length; k < klen; ++k){
            merger(keys[k], target, current, options);
        }
    }
    return target;
}
function mergeIf(target, source) {
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    return merge(target, source, {
        merger: _mergerIf
    });
}
/**
 * Merges source[key] in target[key] only if target[key] is undefined.
 * @private
 */ function _mergerIf(key, target, source) {
    if (!isValidKey(key)) {
        return;
    }
    const tval = target[key];
    const sval = source[key];
    if (isObject(tval) && isObject(sval)) {
        mergeIf(tval, sval);
    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {
        target[key] = clone(sval);
    }
}
/**
 * @private
 */ function _deprecated(scope, value, previous, current) {
    if (value !== undefined) {
        console.warn(scope + ': "' + previous + '" is deprecated. Please use "' + current + '" instead');
    }
}
// resolveObjectKey resolver cache
const keyResolvers = {
    // Chart.helpers.core resolveObjectKey should resolve empty key to root object
    '': (v)=>v,
    // default resolvers
    x: (o)=>o.x,
    y: (o)=>o.y
};
/**
 * @private
 */ function _splitKey(key) {
    const parts = key.split('.');
    const keys = [];
    let tmp = '';
    for (const part of parts){
        tmp += part;
        if (tmp.endsWith('\\')) {
            tmp = tmp.slice(0, -1) + '.';
        } else {
            keys.push(tmp);
            tmp = '';
        }
    }
    return keys;
}
function _getKeyResolver(key) {
    const keys = _splitKey(key);
    return (obj)=>{
        for (const k of keys){
            if (k === '') {
                break;
            }
            obj = obj && obj[k];
        }
        return obj;
    };
}
function resolveObjectKey(obj, key) {
    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));
    return resolver(obj);
}
/**
 * @private
 */ function _capitalize(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
}
const defined = (value)=>typeof value !== 'undefined';
const isFunction = (value)=>typeof value === 'function';
// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384
const setsEqual = (a, b)=>{
    if (a.size !== b.size) {
        return false;
    }
    for (const item of a){
        if (!b.has(item)) {
            return false;
        }
    }
    return true;
};
/**
 * @param e - The event
 * @private
 */ function _isClickEvent(e) {
    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';
}

/**
 * @alias Chart.helpers.math
 * @namespace
 */ const PI = Math.PI;
const TAU = 2 * PI;
const PITAU = TAU + PI;
const INFINITY = Number.POSITIVE_INFINITY;
const RAD_PER_DEG = PI / 180;
const HALF_PI = PI / 2;
const QUARTER_PI = PI / 4;
const TWO_THIRDS_PI = PI * 2 / 3;
const log10 = Math.log10;
const sign = Math.sign;
function almostEquals(x, y, epsilon) {
    return Math.abs(x - y) < epsilon;
}
/**
 * Implementation of the nice number algorithm used in determining where axis labels will go
 */ function niceNum(range) {
    const roundedRange = Math.round(range);
    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;
    const niceRange = Math.pow(10, Math.floor(log10(range)));
    const fraction = range / niceRange;
    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;
    return niceFraction * niceRange;
}
/**
 * Returns an array of factors sorted from 1 to sqrt(value)
 * @private
 */ function _factorize(value) {
    const result = [];
    const sqrt = Math.sqrt(value);
    let i;
    for(i = 1; i < sqrt; i++){
        if (value % i === 0) {
            result.push(i);
            result.push(value / i);
        }
    }
    if (sqrt === (sqrt | 0)) {
        result.push(sqrt);
    }
    result.sort((a, b)=>a - b).pop();
    return result;
}
function isNumber(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}
function almostWhole(x, epsilon) {
    const rounded = Math.round(x);
    return rounded - epsilon <= x && rounded + epsilon >= x;
}
/**
 * @private
 */ function _setMinAndMaxByKey(array, target, property) {
    let i, ilen, value;
    for(i = 0, ilen = array.length; i < ilen; i++){
        value = array[i][property];
        if (!isNaN(value)) {
            target.min = Math.min(target.min, value);
            target.max = Math.max(target.max, value);
        }
    }
}
function toRadians(degrees) {
    return degrees * (PI / 180);
}
function toDegrees(radians) {
    return radians * (180 / PI);
}
/**
 * Returns the number of decimal places
 * i.e. the number of digits after the decimal point, of the value of this Number.
 * @param x - A number.
 * @returns The number of decimal places.
 * @private
 */ function _decimalPlaces(x) {
    if (!isNumberFinite(x)) {
        return;
    }
    let e = 1;
    let p = 0;
    while(Math.round(x * e) / e !== x){
        e *= 10;
        p++;
    }
    return p;
}
// Gets the angle from vertical upright to the point about a centre.
function getAngleFromPoint(centrePoint, anglePoint) {
    const distanceFromXCenter = anglePoint.x - centrePoint.x;
    const distanceFromYCenter = anglePoint.y - centrePoint.y;
    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);
    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);
    if (angle < -0.5 * PI) {
        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
    }
    return {
        angle,
        distance: radialDistanceFromCenter
    };
}
function distanceBetweenPoints(pt1, pt2) {
    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
}
/**
 * Shortest distance between angles, in either direction.
 * @private
 */ function _angleDiff(a, b) {
    return (a - b + PITAU) % TAU - PI;
}
/**
 * Normalize angle to be between 0 and 2*PI
 * @private
 */ function _normalizeAngle(a) {
    return (a % TAU + TAU) % TAU;
}
/**
 * @private
 */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {
    const a = _normalizeAngle(angle);
    const s = _normalizeAngle(start);
    const e = _normalizeAngle(end);
    const angleToStart = _normalizeAngle(s - a);
    const angleToEnd = _normalizeAngle(e - a);
    const startToAngle = _normalizeAngle(a - s);
    const endToAngle = _normalizeAngle(a - e);
    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;
}
/**
 * Limit `value` between `min` and `max`
 * @param value
 * @param min
 * @param max
 * @private
 */ function _limitValue(value, min, max) {
    return Math.max(min, Math.min(max, value));
}
/**
 * @param {number} value
 * @private
 */ function _int16Range(value) {
    return _limitValue(value, -32768, 32767);
}
/**
 * @param value
 * @param start
 * @param end
 * @param [epsilon]
 * @private
 */ function _isBetween(value, start, end, epsilon = 1e-6) {
    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;
}

function _lookup(table, value, cmp) {
    cmp = cmp || ((index)=>table[index] < value);
    let hi = table.length - 1;
    let lo = 0;
    let mid;
    while(hi - lo > 1){
        mid = lo + hi >> 1;
        if (cmp(mid)) {
            lo = mid;
        } else {
            hi = mid;
        }
    }
    return {
        lo,
        hi
    };
}
/**
 * Binary search
 * @param table - the table search. must be sorted!
 * @param key - property name for the value in each entry
 * @param value - value to find
 * @param last - lookup last index
 * @private
 */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{
        const ti = table[index][key];
        return ti < value || ti === value && table[index + 1][key] === value;
    } : (index)=>table[index][key] < value);
/**
 * Reverse binary search
 * @param table - the table search. must be sorted!
 * @param key - property name for the value in each entry
 * @param value - value to find
 * @private
 */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);
/**
 * Return subset of `values` between `min` and `max` inclusive.
 * Values are assumed to be in sorted order.
 * @param values - sorted array of values
 * @param min - min value
 * @param max - max value
 */ function _filterBetween(values, min, max) {
    let start = 0;
    let end = values.length;
    while(start < end && values[start] < min){
        start++;
    }
    while(end > start && values[end - 1] > max){
        end--;
    }
    return start > 0 || end < values.length ? values.slice(start, end) : values;
}
const arrayEvents = [
    'push',
    'pop',
    'shift',
    'splice',
    'unshift'
];
function listenArrayEvents(array, listener) {
    if (array._chartjs) {
        array._chartjs.listeners.push(listener);
        return;
    }
    Object.defineProperty(array, '_chartjs', {
        configurable: true,
        enumerable: false,
        value: {
            listeners: [
                listener
            ]
        }
    });
    arrayEvents.forEach((key)=>{
        const method = '_onData' + _capitalize(key);
        const base = array[key];
        Object.defineProperty(array, key, {
            configurable: true,
            enumerable: false,
            value (...args) {
                const res = base.apply(this, args);
                array._chartjs.listeners.forEach((object)=>{
                    if (typeof object[method] === 'function') {
                        object[method](...args);
                    }
                });
                return res;
            }
        });
    });
}
function unlistenArrayEvents(array, listener) {
    const stub = array._chartjs;
    if (!stub) {
        return;
    }
    const listeners = stub.listeners;
    const index = listeners.indexOf(listener);
    if (index !== -1) {
        listeners.splice(index, 1);
    }
    if (listeners.length > 0) {
        return;
    }
    arrayEvents.forEach((key)=>{
        delete array[key];
    });
    delete array._chartjs;
}
/**
 * @param items
 */ function _arrayUnique(items) {
    const set = new Set();
    let i, ilen;
    for(i = 0, ilen = items.length; i < ilen; ++i){
        set.add(items[i]);
    }
    if (set.size === ilen) {
        return items;
    }
    return Array.from(set);
}

function fontString(pixelSize, fontStyle, fontFamily) {
    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
}
/**
* Request animation polyfill
*/ const requestAnimFrame = function() {
    if (typeof window === 'undefined') {
        return function(callback) {
            return callback();
        };
    }
    return window.requestAnimationFrame;
}();
/**
 * Throttles calling `fn` once per animation frame
 * Latest arguments are used on the actual call
 */ function throttled(fn, thisArg) {
    let argsToUse = [];
    let ticking = false;
    return function(...args) {
        // Save the args for use later
        argsToUse = args;
        if (!ticking) {
            ticking = true;
            requestAnimFrame.call(window, ()=>{
                ticking = false;
                fn.apply(thisArg, argsToUse);
            });
        }
    };
}
/**
 * Debounces calling `fn` for `delay` ms
 */ function debounce(fn, delay) {
    let timeout;
    return function(...args) {
        if (delay) {
            clearTimeout(timeout);
            timeout = setTimeout(fn, delay, args);
        } else {
            fn.apply(this, args);
        }
        return delay;
    };
}
/**
 * Converts 'start' to 'left', 'end' to 'right' and others to 'center'
 * @private
 */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';
/**
 * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`
 * @private
 */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;
/**
 * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`
 * @private
 */ const _textX = (align, left, right, rtl)=>{
    const check = rtl ? 'left' : 'right';
    return align === check ? right : align === 'center' ? (left + right) / 2 : left;
};
/**
 * Return start and count of visible points.
 * @private
 */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {
    const pointCount = points.length;
    let start = 0;
    let count = pointCount;
    if (meta._sorted) {
        const { iScale , _parsed  } = meta;
        const axis = iScale.axis;
        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();
        if (minDefined) {
            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed
            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey
            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);
        }
        if (maxDefined) {
            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed
            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey
            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;
        } else {
            count = pointCount - start;
        }
    }
    return {
        start,
        count
    };
}
/**
 * Checks if the scale ranges have changed.
 * @param {object} meta - dataset meta.
 * @returns {boolean}
 * @private
 */ function _scaleRangesChanged(meta) {
    const { xScale , yScale , _scaleRanges  } = meta;
    const newRanges = {
        xmin: xScale.min,
        xmax: xScale.max,
        ymin: yScale.min,
        ymax: yScale.max
    };
    if (!_scaleRanges) {
        meta._scaleRanges = newRanges;
        return true;
    }
    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;
    Object.assign(_scaleRanges, newRanges);
    return changed;
}

const atEdge = (t)=>t === 0 || t === 1;
const elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));
const elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;
/**
 * Easing functions adapted from Robert Penner's easing equations.
 * @namespace Chart.helpers.easing.effects
 * @see http://www.robertpenner.com/easing/
 */ const effects = {
    linear: (t)=>t,
    easeInQuad: (t)=>t * t,
    easeOutQuad: (t)=>-t * (t - 2),
    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),
    easeInCubic: (t)=>t * t * t,
    easeOutCubic: (t)=>(t -= 1) * t * t + 1,
    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),
    easeInQuart: (t)=>t * t * t * t,
    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),
    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),
    easeInQuint: (t)=>t * t * t * t * t,
    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,
    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),
    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,
    easeOutSine: (t)=>Math.sin(t * HALF_PI),
    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),
    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),
    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,
    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),
    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),
    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),
    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),
    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),
    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),
    easeInOutElastic (t) {
        const s = 0.1125;
        const p = 0.45;
        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);
    },
    easeInBack (t) {
        const s = 1.70158;
        return t * t * ((s + 1) * t - s);
    },
    easeOutBack (t) {
        const s = 1.70158;
        return (t -= 1) * t * ((s + 1) * t + s) + 1;
    },
    easeInOutBack (t) {
        let s = 1.70158;
        if ((t /= 0.5) < 1) {
            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));
        }
        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);
    },
    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),
    easeOutBounce (t) {
        const m = 7.5625;
        const d = 2.75;
        if (t < 1 / d) {
            return m * t * t;
        }
        if (t < 2 / d) {
            return m * (t -= 1.5 / d) * t + 0.75;
        }
        if (t < 2.5 / d) {
            return m * (t -= 2.25 / d) * t + 0.9375;
        }
        return m * (t -= 2.625 / d) * t + 0.984375;
    },
    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5
};

function isPatternOrGradient(value) {
    if (value && typeof value === 'object') {
        const type = value.toString();
        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';
    }
    return false;
}
function color(value) {
    return isPatternOrGradient(value) ? value : new _kurkle_color__WEBPACK_IMPORTED_MODULE_0__.Color(value);
}
function getHoverColor(value) {
    return isPatternOrGradient(value) ? value : new _kurkle_color__WEBPACK_IMPORTED_MODULE_0__.Color(value).saturate(0.5).darken(0.1).hexString();
}

const numbers = [
    'x',
    'y',
    'borderWidth',
    'radius',
    'tension'
];
const colors = [
    'color',
    'borderColor',
    'backgroundColor'
];
function applyAnimationsDefaults(defaults) {
    defaults.set('animation', {
        delay: undefined,
        duration: 1000,
        easing: 'easeOutQuart',
        fn: undefined,
        from: undefined,
        loop: undefined,
        to: undefined,
        type: undefined
    });
    defaults.describe('animation', {
        _fallback: false,
        _indexable: false,
        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'
    });
    defaults.set('animations', {
        colors: {
            type: 'color',
            properties: colors
        },
        numbers: {
            type: 'number',
            properties: numbers
        }
    });
    defaults.describe('animations', {
        _fallback: 'animation'
    });
    defaults.set('transitions', {
        active: {
            animation: {
                duration: 400
            }
        },
        resize: {
            animation: {
                duration: 0
            }
        },
        show: {
            animations: {
                colors: {
                    from: 'transparent'
                },
                visible: {
                    type: 'boolean',
                    duration: 0
                }
            }
        },
        hide: {
            animations: {
                colors: {
                    to: 'transparent'
                },
                visible: {
                    type: 'boolean',
                    easing: 'linear',
                    fn: (v)=>v | 0
                }
            }
        }
    });
}

function applyLayoutsDefaults(defaults) {
    defaults.set('layout', {
        autoPadding: true,
        padding: {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
        }
    });
}

const intlCache = new Map();
function getNumberFormat(locale, options) {
    options = options || {};
    const cacheKey = locale + JSON.stringify(options);
    let formatter = intlCache.get(cacheKey);
    if (!formatter) {
        formatter = new Intl.NumberFormat(locale, options);
        intlCache.set(cacheKey, formatter);
    }
    return formatter;
}
function formatNumber(num, locale, options) {
    return getNumberFormat(locale, options).format(num);
}

const formatters = {
 values (value) {
        return isArray(value) ?  value : '' + value;
    },
 numeric (tickValue, index, ticks) {
        if (tickValue === 0) {
            return '0';
        }
        const locale = this.chart.options.locale;
        let notation;
        let delta = tickValue;
        if (ticks.length > 1) {
            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));
            if (maxTick < 1e-4 || maxTick > 1e+15) {
                notation = 'scientific';
            }
            delta = calculateDelta(tickValue, ticks);
        }
        const logDelta = log10(Math.abs(delta));
        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);
        const options = {
            notation,
            minimumFractionDigits: numDecimal,
            maximumFractionDigits: numDecimal
        };
        Object.assign(options, this.options.ticks.format);
        return formatNumber(tickValue, locale, options);
    },
 logarithmic (tickValue, index, ticks) {
        if (tickValue === 0) {
            return '0';
        }
        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));
        if ([
            1,
            2,
            3,
            5,
            10,
            15
        ].includes(remain) || index > 0.8 * ticks.length) {
            return formatters.numeric.call(this, tickValue, index, ticks);
        }
        return '';
    }
};
function calculateDelta(tickValue, ticks) {
    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;
    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {
        delta = tickValue - Math.floor(tickValue);
    }
    return delta;
}
 var Ticks = {
    formatters
};

function applyScaleDefaults(defaults) {
    defaults.set('scale', {
        display: true,
        offset: false,
        reverse: false,
        beginAtZero: false,
 bounds: 'ticks',
 grace: 0,
        grid: {
            display: true,
            lineWidth: 1,
            drawOnChartArea: true,
            drawTicks: true,
            tickLength: 8,
            tickWidth: (_ctx, options)=>options.lineWidth,
            tickColor: (_ctx, options)=>options.color,
            offset: false
        },
        border: {
            display: true,
            dash: [],
            dashOffset: 0.0,
            width: 1
        },
        title: {
            display: false,
            text: '',
            padding: {
                top: 4,
                bottom: 4
            }
        },
        ticks: {
            minRotation: 0,
            maxRotation: 50,
            mirror: false,
            textStrokeWidth: 0,
            textStrokeColor: '',
            padding: 3,
            display: true,
            autoSkip: true,
            autoSkipPadding: 3,
            labelOffset: 0,
            callback: Ticks.formatters.values,
            minor: {},
            major: {},
            align: 'center',
            crossAlign: 'near',
            showLabelBackdrop: false,
            backdropColor: 'rgba(255, 255, 255, 0.75)',
            backdropPadding: 2
        }
    });
    defaults.route('scale.ticks', 'color', '', 'color');
    defaults.route('scale.grid', 'color', '', 'borderColor');
    defaults.route('scale.border', 'color', '', 'borderColor');
    defaults.route('scale.title', 'color', '', 'color');
    defaults.describe('scale', {
        _fallback: false,
        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',
        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'
    });
    defaults.describe('scales', {
        _fallback: 'scale'
    });
    defaults.describe('scale.ticks', {
        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',
        _indexable: (name)=>name !== 'backdropPadding'
    });
}

const overrides = Object.create(null);
const descriptors = Object.create(null);
 function getScope$1(node, key) {
    if (!key) {
        return node;
    }
    const keys = key.split('.');
    for(let i = 0, n = keys.length; i < n; ++i){
        const k = keys[i];
        node = node[k] || (node[k] = Object.create(null));
    }
    return node;
}
function set(root, scope, values) {
    if (typeof scope === 'string') {
        return merge(getScope$1(root, scope), values);
    }
    return merge(getScope$1(root, ''), scope);
}
 class Defaults {
    constructor(_descriptors, _appliers){
        this.animation = undefined;
        this.backgroundColor = 'rgba(0,0,0,0.1)';
        this.borderColor = 'rgba(0,0,0,0.1)';
        this.color = '#666';
        this.datasets = {};
        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();
        this.elements = {};
        this.events = [
            'mousemove',
            'mouseout',
            'click',
            'touchstart',
            'touchmove'
        ];
        this.font = {
            family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
            size: 12,
            style: 'normal',
            lineHeight: 1.2,
            weight: null
        };
        this.hover = {};
        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);
        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);
        this.hoverColor = (ctx, options)=>getHoverColor(options.color);
        this.indexAxis = 'x';
        this.interaction = {
            mode: 'nearest',
            intersect: true,
            includeInvisible: false
        };
        this.maintainAspectRatio = true;
        this.onHover = null;
        this.onClick = null;
        this.parsing = true;
        this.plugins = {};
        this.responsive = true;
        this.scale = undefined;
        this.scales = {};
        this.showLine = true;
        this.drawActiveElementsOnTop = true;
        this.describe(_descriptors);
        this.apply(_appliers);
    }
 set(scope, values) {
        return set(this, scope, values);
    }
 get(scope) {
        return getScope$1(this, scope);
    }
 describe(scope, values) {
        return set(descriptors, scope, values);
    }
    override(scope, values) {
        return set(overrides, scope, values);
    }
 route(scope, name, targetScope, targetName) {
        const scopeObject = getScope$1(this, scope);
        const targetScopeObject = getScope$1(this, targetScope);
        const privateName = '_' + name;
        Object.defineProperties(scopeObject, {
            [privateName]: {
                value: scopeObject[name],
                writable: true
            },
            [name]: {
                enumerable: true,
                get () {
                    const local = this[privateName];
                    const target = targetScopeObject[targetName];
                    if (isObject(local)) {
                        return Object.assign({}, target, local);
                    }
                    return valueOrDefault(local, target);
                },
                set (value) {
                    this[privateName] = value;
                }
            }
        });
    }
    apply(appliers) {
        appliers.forEach((apply)=>apply(this));
    }
}
var defaults = /* #__PURE__ */ new Defaults({
    _scriptable: (name)=>!name.startsWith('on'),
    _indexable: (name)=>name !== 'events',
    hover: {
        _fallback: 'interaction'
    },
    interaction: {
        _scriptable: false,
        _indexable: false
    }
}, [
    applyAnimationsDefaults,
    applyLayoutsDefaults,
    applyScaleDefaults
]);

function toFontString(font) {
    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {
        return null;
    }
    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;
}
 function _measureText(ctx, data, gc, longest, string) {
    let textWidth = data[string];
    if (!textWidth) {
        textWidth = data[string] = ctx.measureText(string).width;
        gc.push(string);
    }
    if (textWidth > longest) {
        longest = textWidth;
    }
    return longest;
}
 function _longestText(ctx, font, arrayOfThings, cache) {
    cache = cache || {};
    let data = cache.data = cache.data || {};
    let gc = cache.garbageCollect = cache.garbageCollect || [];
    if (cache.font !== font) {
        data = cache.data = {};
        gc = cache.garbageCollect = [];
        cache.font = font;
    }
    ctx.save();
    ctx.font = font;
    let longest = 0;
    const ilen = arrayOfThings.length;
    let i, j, jlen, thing, nestedThing;
    for(i = 0; i < ilen; i++){
        thing = arrayOfThings[i];
        if (thing !== undefined && thing !== null && isArray(thing) !== true) {
            longest = _measureText(ctx, data, gc, longest, thing);
        } else if (isArray(thing)) {
            for(j = 0, jlen = thing.length; j < jlen; j++){
                nestedThing = thing[j];
                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {
                    longest = _measureText(ctx, data, gc, longest, nestedThing);
                }
            }
        }
    }
    ctx.restore();
    const gcLen = gc.length / 2;
    if (gcLen > arrayOfThings.length) {
        for(i = 0; i < gcLen; i++){
            delete data[gc[i]];
        }
        gc.splice(0, gcLen);
    }
    return longest;
}
 function _alignPixel(chart, pixel, width) {
    const devicePixelRatio = chart.currentDevicePixelRatio;
    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;
    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;
}
 function clearCanvas(canvas, ctx) {
    ctx = ctx || canvas.getContext('2d');
    ctx.save();
    ctx.resetTransform();
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.restore();
}
function drawPoint(ctx, options, x, y) {
    drawPointLegend(ctx, options, x, y, null);
}
function drawPointLegend(ctx, options, x, y, w) {
    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;
    const style = options.pointStyle;
    const rotation = options.rotation;
    const radius = options.radius;
    let rad = (rotation || 0) * RAD_PER_DEG;
    if (style && typeof style === 'object') {
        type = style.toString();
        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
            ctx.save();
            ctx.translate(x, y);
            ctx.rotate(rad);
            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);
            ctx.restore();
            return;
        }
    }
    if (isNaN(radius) || radius <= 0) {
        return;
    }
    ctx.beginPath();
    switch(style){
        default:
            if (w) {
                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);
            } else {
                ctx.arc(x, y, radius, 0, TAU);
            }
            ctx.closePath();
            break;
        case 'triangle':
            width = w ? w / 2 : radius;
            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);
            rad += TWO_THIRDS_PI;
            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);
            rad += TWO_THIRDS_PI;
            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);
            ctx.closePath();
            break;
        case 'rectRounded':
            cornerRadius = radius * 0.516;
            size = radius - cornerRadius;
            xOffset = Math.cos(rad + QUARTER_PI) * size;
            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);
            yOffset = Math.sin(rad + QUARTER_PI) * size;
            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);
            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);
            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);
            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);
            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);
            ctx.closePath();
            break;
        case 'rect':
            if (!rotation) {
                size = Math.SQRT1_2 * radius;
                width = w ? w / 2 : size;
                ctx.rect(x - width, y - size, 2 * width, 2 * size);
                break;
            }
            rad += QUARTER_PI;
         case 'rectRot':
            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);
            xOffset = Math.cos(rad) * radius;
            yOffset = Math.sin(rad) * radius;
            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);
            ctx.moveTo(x - xOffsetW, y - yOffset);
            ctx.lineTo(x + yOffsetW, y - xOffset);
            ctx.lineTo(x + xOffsetW, y + yOffset);
            ctx.lineTo(x - yOffsetW, y + xOffset);
            ctx.closePath();
            break;
        case 'crossRot':
            rad += QUARTER_PI;
         case 'cross':
            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);
            xOffset = Math.cos(rad) * radius;
            yOffset = Math.sin(rad) * radius;
            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);
            ctx.moveTo(x - xOffsetW, y - yOffset);
            ctx.lineTo(x + xOffsetW, y + yOffset);
            ctx.moveTo(x + yOffsetW, y - xOffset);
            ctx.lineTo(x - yOffsetW, y + xOffset);
            break;
        case 'star':
            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);
            xOffset = Math.cos(rad) * radius;
            yOffset = Math.sin(rad) * radius;
            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);
            ctx.moveTo(x - xOffsetW, y - yOffset);
            ctx.lineTo(x + xOffsetW, y + yOffset);
            ctx.moveTo(x + yOffsetW, y - xOffset);
            ctx.lineTo(x - yOffsetW, y + xOffset);
            rad += QUARTER_PI;
            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);
            xOffset = Math.cos(rad) * radius;
            yOffset = Math.sin(rad) * radius;
            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);
            ctx.moveTo(x - xOffsetW, y - yOffset);
            ctx.lineTo(x + xOffsetW, y + yOffset);
            ctx.moveTo(x + yOffsetW, y - xOffset);
            ctx.lineTo(x - yOffsetW, y + xOffset);
            break;
        case 'line':
            xOffset = w ? w / 2 : Math.cos(rad) * radius;
            yOffset = Math.sin(rad) * radius;
            ctx.moveTo(x - xOffset, y - yOffset);
            ctx.lineTo(x + xOffset, y + yOffset);
            break;
        case 'dash':
            ctx.moveTo(x, y);
            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);
            break;
        case false:
            ctx.closePath();
            break;
    }
    ctx.fill();
    if (options.borderWidth > 0) {
        ctx.stroke();
    }
}
 function _isPointInArea(point, area, margin) {
    margin = margin || 0.5;
    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;
}
function clipArea(ctx, area) {
    ctx.save();
    ctx.beginPath();
    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
    ctx.clip();
}
function unclipArea(ctx) {
    ctx.restore();
}
 function _steppedLineTo(ctx, previous, target, flip, mode) {
    if (!previous) {
        return ctx.lineTo(target.x, target.y);
    }
    if (mode === 'middle') {
        const midpoint = (previous.x + target.x) / 2.0;
        ctx.lineTo(midpoint, previous.y);
        ctx.lineTo(midpoint, target.y);
    } else if (mode === 'after' !== !!flip) {
        ctx.lineTo(previous.x, target.y);
    } else {
        ctx.lineTo(target.x, previous.y);
    }
    ctx.lineTo(target.x, target.y);
}
 function _bezierCurveTo(ctx, previous, target, flip) {
    if (!previous) {
        return ctx.lineTo(target.x, target.y);
    }
    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);
}
 function renderText(ctx, text, x, y, font, opts = {}) {
    const lines = isArray(text) ? text : [
        text
    ];
    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';
    let i, line;
    ctx.save();
    ctx.font = font.string;
    setRenderOpts(ctx, opts);
    for(i = 0; i < lines.length; ++i){
        line = lines[i];
        if (opts.backdrop) {
            drawBackdrop(ctx, opts.backdrop);
        }
        if (stroke) {
            if (opts.strokeColor) {
                ctx.strokeStyle = opts.strokeColor;
            }
            if (!isNullOrUndef(opts.strokeWidth)) {
                ctx.lineWidth = opts.strokeWidth;
            }
            ctx.strokeText(line, x, y, opts.maxWidth);
        }
        ctx.fillText(line, x, y, opts.maxWidth);
        decorateText(ctx, x, y, line, opts);
        y += font.lineHeight;
    }
    ctx.restore();
}
function setRenderOpts(ctx, opts) {
    if (opts.translation) {
        ctx.translate(opts.translation[0], opts.translation[1]);
    }
    if (!isNullOrUndef(opts.rotation)) {
        ctx.rotate(opts.rotation);
    }
    if (opts.color) {
        ctx.fillStyle = opts.color;
    }
    if (opts.textAlign) {
        ctx.textAlign = opts.textAlign;
    }
    if (opts.textBaseline) {
        ctx.textBaseline = opts.textBaseline;
    }
}
function decorateText(ctx, x, y, line, opts) {
    if (opts.strikethrough || opts.underline) {
 const metrics = ctx.measureText(line);
        const left = x - metrics.actualBoundingBoxLeft;
        const right = x + metrics.actualBoundingBoxRight;
        const top = y - metrics.actualBoundingBoxAscent;
        const bottom = y + metrics.actualBoundingBoxDescent;
        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;
        ctx.strokeStyle = ctx.fillStyle;
        ctx.beginPath();
        ctx.lineWidth = opts.decorationWidth || 2;
        ctx.moveTo(left, yDecoration);
        ctx.lineTo(right, yDecoration);
        ctx.stroke();
    }
}
function drawBackdrop(ctx, opts) {
    const oldColor = ctx.fillStyle;
    ctx.fillStyle = opts.color;
    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);
    ctx.fillStyle = oldColor;
}
 function addRoundedRectPath(ctx, rect) {
    const { x , y , w , h , radius  } = rect;
    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);
    ctx.lineTo(x, y + h - radius.bottomLeft);
    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);
    ctx.lineTo(x + w - radius.bottomRight, y + h);
    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);
    ctx.lineTo(x + w, y + radius.topRight);
    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);
    ctx.lineTo(x + radius.topLeft, y);
}

const LINE_HEIGHT = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/;
const FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
/**
 * @alias Chart.helpers.options
 * @namespace
 */ /**
 * Converts the given line height `value` in pixels for a specific font `size`.
 * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
 * @param size - The font size (in pixels) used to resolve relative `value`.
 * @returns The effective line height in pixels (size * 1.2 if value is invalid).
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
 * @since 2.7.0
 */ function toLineHeight(value, size) {
    const matches = ('' + value).match(LINE_HEIGHT);
    if (!matches || matches[1] === 'normal') {
        return size * 1.2;
    }
    value = +matches[2];
    switch(matches[3]){
        case 'px':
            return value;
        case '%':
            value /= 100;
            break;
    }
    return size * value;
}
const numberOrZero = (v)=>+v || 0;
function _readValueToProps(value, props) {
    const ret = {};
    const objProps = isObject(props);
    const keys = objProps ? Object.keys(props) : props;
    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;
    for (const prop of keys){
        ret[prop] = numberOrZero(read(prop));
    }
    return ret;
}
/**
 * Converts the given value into a TRBL object.
 * @param value - If a number, set the value to all TRBL component,
 *  else, if an object, use defined properties and sets undefined ones to 0.
 *  x / y are shorthands for same value for left/right and top/bottom.
 * @returns The padding values (top, right, bottom, left)
 * @since 3.0.0
 */ function toTRBL(value) {
    return _readValueToProps(value, {
        top: 'y',
        right: 'x',
        bottom: 'y',
        left: 'x'
    });
}
/**
 * Converts the given value into a TRBL corners object (similar with css border-radius).
 * @param value - If a number, set the value to all TRBL corner components,
 *  else, if an object, use defined properties and sets undefined ones to 0.
 * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)
 * @since 3.0.0
 */ function toTRBLCorners(value) {
    return _readValueToProps(value, [
        'topLeft',
        'topRight',
        'bottomLeft',
        'bottomRight'
    ]);
}
/**
 * Converts the given value into a padding object with pre-computed width/height.
 * @param value - If a number, set the value to all TRBL component,
 *  else, if an object, use defined properties and sets undefined ones to 0.
 *  x / y are shorthands for same value for left/right and top/bottom.
 * @returns The padding values (top, right, bottom, left, width, height)
 * @since 2.7.0
 */ function toPadding(value) {
    const obj = toTRBL(value);
    obj.width = obj.left + obj.right;
    obj.height = obj.top + obj.bottom;
    return obj;
}
/**
 * Parses font options and returns the font object.
 * @param options - A object that contains font options to be parsed.
 * @param fallback - A object that contains fallback font options.
 * @return The font object.
 * @private
 */ function toFont(options, fallback) {
    options = options || {};
    fallback = fallback || defaults.font;
    let size = valueOrDefault(options.size, fallback.size);
    if (typeof size === 'string') {
        size = parseInt(size, 10);
    }
    let style = valueOrDefault(options.style, fallback.style);
    if (style && !('' + style).match(FONT_STYLE)) {
        console.warn('Invalid font style specified: "' + style + '"');
        style = undefined;
    }
    const font = {
        family: valueOrDefault(options.family, fallback.family),
        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),
        size,
        style,
        weight: valueOrDefault(options.weight, fallback.weight),
        string: ''
    };
    font.string = toFontString(font);
    return font;
}
/**
 * Evaluates the given `inputs` sequentially and returns the first defined value.
 * @param inputs - An array of values, falling back to the last value.
 * @param context - If defined and the current value is a function, the value
 * is called with `context` as first argument and the result becomes the new input.
 * @param index - If defined and the current value is an array, the value
 * at `index` become the new input.
 * @param info - object to return information about resolution in
 * @param info.cacheable - Will be set to `false` if option is not cacheable.
 * @since 2.7.0
 */ function resolve(inputs, context, index, info) {
    let cacheable = true;
    let i, ilen, value;
    for(i = 0, ilen = inputs.length; i < ilen; ++i){
        value = inputs[i];
        if (value === undefined) {
            continue;
        }
        if (context !== undefined && typeof value === 'function') {
            value = value(context);
            cacheable = false;
        }
        if (index !== undefined && isArray(value)) {
            value = value[index % value.length];
            cacheable = false;
        }
        if (value !== undefined) {
            if (info && !cacheable) {
                info.cacheable = false;
            }
            return value;
        }
    }
}
/**
 * @param minmax
 * @param grace
 * @param beginAtZero
 * @private
 */ function _addGrace(minmax, grace, beginAtZero) {
    const { min , max  } = minmax;
    const change = toDimension(grace, (max - min) / 2);
    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;
    return {
        min: keepZero(min, -Math.abs(change)),
        max: keepZero(max, change)
    };
}
function createContext(parentContext, context) {
    return Object.assign(Object.create(parentContext), context);
}

function _createResolver(scopes, prefixes = [
    ''
], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {
    if (!defined(fallback)) {
        fallback = _resolve('_fallback', scopes);
    }
    const cache = {
        [Symbol.toStringTag]: 'Object',
        _cacheable: true,
        _scopes: scopes,
        _rootScopes: rootScopes,
        _fallback: fallback,
        _getTarget: getTarget,
        override: (scope)=>_createResolver([
                scope,
                ...scopes
            ], prefixes, rootScopes, fallback)
    };
    return new Proxy(cache, {
 deleteProperty (target, prop) {
            delete target[prop];
            delete target._keys;
            delete scopes[0][prop];
            return true;
        },
 get (target, prop) {
            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));
        },
 getOwnPropertyDescriptor (target, prop) {
            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);
        },
 getPrototypeOf () {
            return Reflect.getPrototypeOf(scopes[0]);
        },
 has (target, prop) {
            return getKeysFromAllScopes(target).includes(prop);
        },
 ownKeys (target) {
            return getKeysFromAllScopes(target);
        },
 set (target, prop, value) {
            const storage = target._storage || (target._storage = getTarget());
            target[prop] = storage[prop] = value;
            delete target._keys;
            return true;
        }
    });
}
 function _attachContext(proxy, context, subProxy, descriptorDefaults) {
    const cache = {
        _cacheable: false,
        _proxy: proxy,
        _context: context,
        _subProxy: subProxy,
        _stack: new Set(),
        _descriptors: _descriptors(proxy, descriptorDefaults),
        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),
        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)
    };
    return new Proxy(cache, {
 deleteProperty (target, prop) {
            delete target[prop];
            delete proxy[prop];
            return true;
        },
 get (target, prop, receiver) {
            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));
        },
 getOwnPropertyDescriptor (target, prop) {
            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {
                enumerable: true,
                configurable: true
            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);
        },
 getPrototypeOf () {
            return Reflect.getPrototypeOf(proxy);
        },
 has (target, prop) {
            return Reflect.has(proxy, prop);
        },
 ownKeys () {
            return Reflect.ownKeys(proxy);
        },
 set (target, prop, value) {
            proxy[prop] = value;
            delete target[prop];
            return true;
        }
    });
}
 function _descriptors(proxy, defaults = {
    scriptable: true,
    indexable: true
}) {
    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;
    return {
        allKeys: _allKeys,
        scriptable: _scriptable,
        indexable: _indexable,
        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,
        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable
    };
}
const readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;
const needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);
function _cached(target, prop, resolve) {
    if (Object.prototype.hasOwnProperty.call(target, prop)) {
        return target[prop];
    }
    const value = resolve();
    target[prop] = value;
    return value;
}
function _resolveWithContext(target, prop, receiver) {
    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;
    let value = _proxy[prop];
    if (isFunction(value) && descriptors.isScriptable(prop)) {
        value = _resolveScriptable(prop, value, target, receiver);
    }
    if (isArray(value) && value.length) {
        value = _resolveArray(prop, value, target, descriptors.isIndexable);
    }
    if (needsSubResolver(prop, value)) {
        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);
    }
    return value;
}
function _resolveScriptable(prop, value, target, receiver) {
    const { _proxy , _context , _subProxy , _stack  } = target;
    if (_stack.has(prop)) {
        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);
    }
    _stack.add(prop);
    value = value(_context, _subProxy || receiver);
    _stack.delete(prop);
    if (needsSubResolver(prop, value)) {
        value = createSubResolver(_proxy._scopes, _proxy, prop, value);
    }
    return value;
}
function _resolveArray(prop, value, target, isIndexable) {
    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;
    if (defined(_context.index) && isIndexable(prop)) {
        value = value[_context.index % value.length];
    } else if (isObject(value[0])) {
        const arr = value;
        const scopes = _proxy._scopes.filter((s)=>s !== arr);
        value = [];
        for (const item of arr){
            const resolver = createSubResolver(scopes, _proxy, prop, item);
            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));
        }
    }
    return value;
}
function resolveFallback(fallback, prop, value) {
    return isFunction(fallback) ? fallback(prop, value) : fallback;
}
const getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;
function addScopes(set, parentScopes, key, parentFallback, value) {
    for (const parent of parentScopes){
        const scope = getScope(key, parent);
        if (scope) {
            set.add(scope);
            const fallback = resolveFallback(scope._fallback, key, value);
            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {
                return fallback;
            }
        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {
            return null;
        }
    }
    return false;
}
function createSubResolver(parentScopes, resolver, prop, value) {
    const rootScopes = resolver._rootScopes;
    const fallback = resolveFallback(resolver._fallback, prop, value);
    const allScopes = [
        ...parentScopes,
        ...rootScopes
    ];
    const set = new Set();
    set.add(value);
    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);
    if (key === null) {
        return false;
    }
    if (defined(fallback) && fallback !== prop) {
        key = addScopesFromKey(set, allScopes, fallback, key, value);
        if (key === null) {
            return false;
        }
    }
    return _createResolver(Array.from(set), [
        ''
    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));
}
function addScopesFromKey(set, allScopes, key, fallback, item) {
    while(key){
        key = addScopes(set, allScopes, key, fallback, item);
    }
    return key;
}
function subGetTarget(resolver, prop, value) {
    const parent = resolver._getTarget();
    if (!(prop in parent)) {
        parent[prop] = {};
    }
    const target = parent[prop];
    if (isArray(target) && isObject(value)) {
        return value;
    }
    return target || {};
}
function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {
    let value;
    for (const prefix of prefixes){
        value = _resolve(readKey(prefix, prop), scopes);
        if (defined(value)) {
            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;
        }
    }
}
function _resolve(key, scopes) {
    for (const scope of scopes){
        if (!scope) {
            continue;
        }
        const value = scope[key];
        if (defined(value)) {
            return value;
        }
    }
}
function getKeysFromAllScopes(target) {
    let keys = target._keys;
    if (!keys) {
        keys = target._keys = resolveKeysFromAllScopes(target._scopes);
    }
    return keys;
}
function resolveKeysFromAllScopes(scopes) {
    const set = new Set();
    for (const scope of scopes){
        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){
            set.add(key);
        }
    }
    return Array.from(set);
}
function _parseObjectDataRadialScale(meta, data, start, count) {
    const { iScale  } = meta;
    const { key ='r'  } = this._parsing;
    const parsed = new Array(count);
    let i, ilen, index, item;
    for(i = 0, ilen = count; i < ilen; ++i){
        index = i + start;
        item = data[index];
        parsed[i] = {
            r: iScale.parse(resolveObjectKey(item, key), index)
        };
    }
    return parsed;
}

const EPSILON = Number.EPSILON || 1e-14;
const getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];
const getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';
function splineCurve(firstPoint, middlePoint, afterPoint, t) {
    // Props to Rob Spencer at scaled innovation for his post on splining between points
    // http://scaledinnovation.com/analytics/splines/aboutSplines.html
    // This function must also respect "skipped" points
    const previous = firstPoint.skip ? middlePoint : firstPoint;
    const current = middlePoint;
    const next = afterPoint.skip ? middlePoint : afterPoint;
    const d01 = distanceBetweenPoints(current, previous);
    const d12 = distanceBetweenPoints(next, current);
    let s01 = d01 / (d01 + d12);
    let s12 = d12 / (d01 + d12);
    // If all points are the same, s01 & s02 will be inf
    s01 = isNaN(s01) ? 0 : s01;
    s12 = isNaN(s12) ? 0 : s12;
    const fa = t * s01; // scaling factor for triangle Ta
    const fb = t * s12;
    return {
        previous: {
            x: current.x - fa * (next.x - previous.x),
            y: current.y - fa * (next.y - previous.y)
        },
        next: {
            x: current.x + fb * (next.x - previous.x),
            y: current.y + fb * (next.y - previous.y)
        }
    };
}
/**
 * Adjust tangents to ensure monotonic properties
 */ function monotoneAdjust(points, deltaK, mK) {
    const pointsLen = points.length;
    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;
    let pointAfter = getPoint(points, 0);
    for(let i = 0; i < pointsLen - 1; ++i){
        pointCurrent = pointAfter;
        pointAfter = getPoint(points, i + 1);
        if (!pointCurrent || !pointAfter) {
            continue;
        }
        if (almostEquals(deltaK[i], 0, EPSILON)) {
            mK[i] = mK[i + 1] = 0;
            continue;
        }
        alphaK = mK[i] / deltaK[i];
        betaK = mK[i + 1] / deltaK[i];
        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
        if (squaredMagnitude <= 9) {
            continue;
        }
        tauK = 3 / Math.sqrt(squaredMagnitude);
        mK[i] = alphaK * tauK * deltaK[i];
        mK[i + 1] = betaK * tauK * deltaK[i];
    }
}
function monotoneCompute(points, mK, indexAxis = 'x') {
    const valueAxis = getValueAxis(indexAxis);
    const pointsLen = points.length;
    let delta, pointBefore, pointCurrent;
    let pointAfter = getPoint(points, 0);
    for(let i = 0; i < pointsLen; ++i){
        pointBefore = pointCurrent;
        pointCurrent = pointAfter;
        pointAfter = getPoint(points, i + 1);
        if (!pointCurrent) {
            continue;
        }
        const iPixel = pointCurrent[indexAxis];
        const vPixel = pointCurrent[valueAxis];
        if (pointBefore) {
            delta = (iPixel - pointBefore[indexAxis]) / 3;
            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;
            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];
        }
        if (pointAfter) {
            delta = (pointAfter[indexAxis] - iPixel) / 3;
            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;
            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];
        }
    }
}
/**
 * This function calculates Bézier control points in a similar way than |splineCurve|,
 * but preserves monotonicity of the provided data and ensures no local extremums are added
 * between the dataset discrete points due to the interpolation.
 * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation
 */ function splineCurveMonotone(points, indexAxis = 'x') {
    const valueAxis = getValueAxis(indexAxis);
    const pointsLen = points.length;
    const deltaK = Array(pointsLen).fill(0);
    const mK = Array(pointsLen);
    // Calculate slopes (deltaK) and initialize tangents (mK)
    let i, pointBefore, pointCurrent;
    let pointAfter = getPoint(points, 0);
    for(i = 0; i < pointsLen; ++i){
        pointBefore = pointCurrent;
        pointCurrent = pointAfter;
        pointAfter = getPoint(points, i + 1);
        if (!pointCurrent) {
            continue;
        }
        if (pointAfter) {
            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];
            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0
            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;
        }
        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;
    }
    monotoneAdjust(points, deltaK, mK);
    monotoneCompute(points, mK, indexAxis);
}
function capControlPoint(pt, min, max) {
    return Math.max(Math.min(pt, max), min);
}
function capBezierPoints(points, area) {
    let i, ilen, point, inArea, inAreaPrev;
    let inAreaNext = _isPointInArea(points[0], area);
    for(i = 0, ilen = points.length; i < ilen; ++i){
        inAreaPrev = inArea;
        inArea = inAreaNext;
        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);
        if (!inArea) {
            continue;
        }
        point = points[i];
        if (inAreaPrev) {
            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);
            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);
        }
        if (inAreaNext) {
            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);
            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);
        }
    }
}
/**
 * @private
 */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {
    let i, ilen, point, controlPoints;
    // Only consider points that are drawn in case the spanGaps option is used
    if (options.spanGaps) {
        points = points.filter((pt)=>!pt.skip);
    }
    if (options.cubicInterpolationMode === 'monotone') {
        splineCurveMonotone(points, indexAxis);
    } else {
        let prev = loop ? points[points.length - 1] : points[0];
        for(i = 0, ilen = points.length; i < ilen; ++i){
            point = points[i];
            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);
            point.cp1x = controlPoints.previous.x;
            point.cp1y = controlPoints.previous.y;
            point.cp2x = controlPoints.next.x;
            point.cp2y = controlPoints.next.y;
            prev = point;
        }
    }
    if (options.capBezierPoints) {
        capBezierPoints(points, area);
    }
}

/**
 * Note: typedefs are auto-exported, so use a made-up `dom` namespace where
 * necessary to avoid duplicates with `export * from './helpers`; see
 * https://github.com/microsoft/TypeScript/issues/46011
 * @typedef { import('../core/core.controller.js').default } dom.Chart
 * @typedef { import('../../types').ChartEvent } ChartEvent
 */ /**
 * @private
 */ function _isDomSupported() {
    return typeof window !== 'undefined' && typeof document !== 'undefined';
}
/**
 * @private
 */ function _getParentNode(domNode) {
    let parent = domNode.parentNode;
    if (parent && parent.toString() === '[object ShadowRoot]') {
        parent = parent.host;
    }
    return parent;
}
/**
 * convert max-width/max-height values that may be percentages into a number
 * @private
 */ function parseMaxStyle(styleValue, node, parentProperty) {
    let valueInPixels;
    if (typeof styleValue === 'string') {
        valueInPixels = parseInt(styleValue, 10);
        if (styleValue.indexOf('%') !== -1) {
            // percentage * size in dimension
            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
        }
    } else {
        valueInPixels = styleValue;
    }
    return valueInPixels;
}
const getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);
function getStyle(el, property) {
    return getComputedStyle(el).getPropertyValue(property);
}
const positions = [
    'top',
    'right',
    'bottom',
    'left'
];
function getPositionedStyle(styles, style, suffix) {
    const result = {};
    suffix = suffix ? '-' + suffix : '';
    for(let i = 0; i < 4; i++){
        const pos = positions[i];
        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;
    }
    result.width = result.left + result.right;
    result.height = result.top + result.bottom;
    return result;
}
const useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);
/**
 * @param e
 * @param canvas
 * @returns Canvas position
 */ function getCanvasPosition(e, canvas) {
    const touches = e.touches;
    const source = touches && touches.length ? touches[0] : e;
    const { offsetX , offsetY  } = source;
    let box = false;
    let x, y;
    if (useOffsetPos(offsetX, offsetY, e.target)) {
        x = offsetX;
        y = offsetY;
    } else {
        const rect = canvas.getBoundingClientRect();
        x = source.clientX - rect.left;
        y = source.clientY - rect.top;
        box = true;
    }
    return {
        x,
        y,
        box
    };
}
/**
 * Gets an event's x, y coordinates, relative to the chart area
 * @param event
 * @param chart
 * @returns x and y coordinates of the event
 */ function getRelativePosition(event, chart) {
    if ('native' in event) {
        return event;
    }
    const { canvas , currentDevicePixelRatio  } = chart;
    const style = getComputedStyle(canvas);
    const borderBox = style.boxSizing === 'border-box';
    const paddings = getPositionedStyle(style, 'padding');
    const borders = getPositionedStyle(style, 'border', 'width');
    const { x , y , box  } = getCanvasPosition(event, canvas);
    const xOffset = paddings.left + (box && borders.left);
    const yOffset = paddings.top + (box && borders.top);
    let { width , height  } = chart;
    if (borderBox) {
        width -= paddings.width + borders.width;
        height -= paddings.height + borders.height;
    }
    return {
        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),
        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)
    };
}
function getContainerSize(canvas, width, height) {
    let maxWidth, maxHeight;
    if (width === undefined || height === undefined) {
        const container = _getParentNode(canvas);
        if (!container) {
            width = canvas.clientWidth;
            height = canvas.clientHeight;
        } else {
            const rect = container.getBoundingClientRect(); // this is the border box of the container
            const containerStyle = getComputedStyle(container);
            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');
            const containerPadding = getPositionedStyle(containerStyle, 'padding');
            width = rect.width - containerPadding.width - containerBorder.width;
            height = rect.height - containerPadding.height - containerBorder.height;
            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');
            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');
        }
    }
    return {
        width,
        height,
        maxWidth: maxWidth || INFINITY,
        maxHeight: maxHeight || INFINITY
    };
}
const round1 = (v)=>Math.round(v * 10) / 10;
// eslint-disable-next-line complexity
function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {
    const style = getComputedStyle(canvas);
    const margins = getPositionedStyle(style, 'margin');
    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;
    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;
    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);
    let { width , height  } = containerSize;
    if (style.boxSizing === 'content-box') {
        const borders = getPositionedStyle(style, 'border', 'width');
        const paddings = getPositionedStyle(style, 'padding');
        width -= paddings.width + borders.width;
        height -= paddings.height + borders.height;
    }
    width = Math.max(0, width - margins.width);
    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);
    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));
    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));
    if (width && !height) {
        // https://github.com/chartjs/Chart.js/issues/4659
        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)
        height = round1(width / 2);
    }
    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;
    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {
        height = containerSize.height;
        width = round1(Math.floor(height * aspectRatio));
    }
    return {
        width,
        height
    };
}
/**
 * @param chart
 * @param forceRatio
 * @param forceStyle
 * @returns True if the canvas context size or transformation has changed.
 */ function retinaScale(chart, forceRatio, forceStyle) {
    const pixelRatio = forceRatio || 1;
    const deviceHeight = Math.floor(chart.height * pixelRatio);
    const deviceWidth = Math.floor(chart.width * pixelRatio);
    chart.height = Math.floor(chart.height);
    chart.width = Math.floor(chart.width);
    const canvas = chart.canvas;
    // If no style has been set on the canvas, the render size is used as display size,
    // making the chart visually bigger, so let's enforce it to the "correct" values.
    // See https://github.com/chartjs/Chart.js/issues/3575
    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {
        canvas.style.height = `${chart.height}px`;
        canvas.style.width = `${chart.width}px`;
    }
    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {
        chart.currentDevicePixelRatio = pixelRatio;
        canvas.height = deviceHeight;
        canvas.width = deviceWidth;
        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);
        return true;
    }
    return false;
}
/**
 * Detects support for options object argument in addEventListener.
 * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
 * @private
 */ const supportsEventListenerOptions = function() {
    let passiveSupported = false;
    try {
        const options = {
            get passive () {
                passiveSupported = true;
                return false;
            }
        };
        window.addEventListener('test', null, options);
        window.removeEventListener('test', null, options);
    } catch (e) {
    // continue regardless of error
    }
    return passiveSupported;
}();
/**
 * The "used" size is the final value of a dimension property after all calculations have
 * been performed. This method uses the computed style of `element` but returns undefined
 * if the computed style is not expressed in pixels. That can happen in some cases where
 * `element` has a size relative to its parent and this last one is not yet displayed,
 * for example because of `display: none` on a parent node.
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
 * @returns Size in pixels or undefined if unknown.
 */ function readUsedSize(element, property) {
    const value = getStyle(element, property);
    const matches = value && value.match(/^(\d+)(\.\d+)?px$/);
    return matches ? +matches[1] : undefined;
}

/**
 * @private
 */ function _pointInLine(p1, p2, t, mode) {
    return {
        x: p1.x + t * (p2.x - p1.x),
        y: p1.y + t * (p2.y - p1.y)
    };
}
/**
 * @private
 */ function _steppedInterpolation(p1, p2, t, mode) {
    return {
        x: p1.x + t * (p2.x - p1.x),
        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y
    };
}
/**
 * @private
 */ function _bezierInterpolation(p1, p2, t, mode) {
    const cp1 = {
        x: p1.cp2x,
        y: p1.cp2y
    };
    const cp2 = {
        x: p2.cp1x,
        y: p2.cp1y
    };
    const a = _pointInLine(p1, cp1, t);
    const b = _pointInLine(cp1, cp2, t);
    const c = _pointInLine(cp2, p2, t);
    const d = _pointInLine(a, b, t);
    const e = _pointInLine(b, c, t);
    return _pointInLine(d, e, t);
}

const getRightToLeftAdapter = function(rectX, width) {
    return {
        x (x) {
            return rectX + rectX + width - x;
        },
        setWidth (w) {
            width = w;
        },
        textAlign (align) {
            if (align === 'center') {
                return align;
            }
            return align === 'right' ? 'left' : 'right';
        },
        xPlus (x, value) {
            return x - value;
        },
        leftForLtr (x, itemWidth) {
            return x - itemWidth;
        }
    };
};
const getLeftToRightAdapter = function() {
    return {
        x (x) {
            return x;
        },
        setWidth (w) {},
        textAlign (align) {
            return align;
        },
        xPlus (x, value) {
            return x + value;
        },
        leftForLtr (x, _itemWidth) {
            return x;
        }
    };
};
function getRtlAdapter(rtl, rectX, width) {
    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();
}
function overrideTextDirection(ctx, direction) {
    let style, original;
    if (direction === 'ltr' || direction === 'rtl') {
        style = ctx.canvas.style;
        original = [
            style.getPropertyValue('direction'),
            style.getPropertyPriority('direction')
        ];
        style.setProperty('direction', direction, 'important');
        ctx.prevTextDirection = original;
    }
}
function restoreTextDirection(ctx, original) {
    if (original !== undefined) {
        delete ctx.prevTextDirection;
        ctx.canvas.style.setProperty('direction', original[0], original[1]);
    }
}

function propertyFn(property) {
    if (property === 'angle') {
        return {
            between: _angleBetween,
            compare: _angleDiff,
            normalize: _normalizeAngle
        };
    }
    return {
        between: _isBetween,
        compare: (a, b)=>a - b,
        normalize: (x)=>x
    };
}
function normalizeSegment({ start , end , count , loop , style  }) {
    return {
        start: start % count,
        end: end % count,
        loop: loop && (end - start + 1) % count === 0,
        style
    };
}
function getSegment(segment, points, bounds) {
    const { property , start: startBound , end: endBound  } = bounds;
    const { between , normalize  } = propertyFn(property);
    const count = points.length;
    let { start , end , loop  } = segment;
    let i, ilen;
    if (loop) {
        start += count;
        end += count;
        for(i = 0, ilen = count; i < ilen; ++i){
            if (!between(normalize(points[start % count][property]), startBound, endBound)) {
                break;
            }
            start--;
            end--;
        }
        start %= count;
        end %= count;
    }
    if (end < start) {
        end += count;
    }
    return {
        start,
        end,
        loop,
        style: segment.style
    };
}
 function _boundSegment(segment, points, bounds) {
    if (!bounds) {
        return [
            segment
        ];
    }
    const { property , start: startBound , end: endBound  } = bounds;
    const count = points.length;
    const { compare , between , normalize  } = propertyFn(property);
    const { start , end , loop , style  } = getSegment(segment, points, bounds);
    const result = [];
    let inside = false;
    let subStart = null;
    let value, point, prevValue;
    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;
    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);
    const shouldStart = ()=>inside || startIsBefore();
    const shouldStop = ()=>!inside || endIsBefore();
    for(let i = start, prev = start; i <= end; ++i){
        point = points[i % count];
        if (point.skip) {
            continue;
        }
        value = normalize(point[property]);
        if (value === prevValue) {
            continue;
        }
        inside = between(value, startBound, endBound);
        if (subStart === null && shouldStart()) {
            subStart = compare(value, startBound) === 0 ? i : prev;
        }
        if (subStart !== null && shouldStop()) {
            result.push(normalizeSegment({
                start: subStart,
                end: i,
                loop,
                count,
                style
            }));
            subStart = null;
        }
        prev = i;
        prevValue = value;
    }
    if (subStart !== null) {
        result.push(normalizeSegment({
            start: subStart,
            end,
            loop,
            count,
            style
        }));
    }
    return result;
}
 function _boundSegments(line, bounds) {
    const result = [];
    const segments = line.segments;
    for(let i = 0; i < segments.length; i++){
        const sub = _boundSegment(segments[i], line.points, bounds);
        if (sub.length) {
            result.push(...sub);
        }
    }
    return result;
}
 function findStartAndEnd(points, count, loop, spanGaps) {
    let start = 0;
    let end = count - 1;
    if (loop && !spanGaps) {
        while(start < count && !points[start].skip){
            start++;
        }
    }
    while(start < count && points[start].skip){
        start++;
    }
    start %= count;
    if (loop) {
        end += start;
    }
    while(end > start && points[end % count].skip){
        end--;
    }
    end %= count;
    return {
        start,
        end
    };
}
 function solidSegments(points, start, max, loop) {
    const count = points.length;
    const result = [];
    let last = start;
    let prev = points[start];
    let end;
    for(end = start + 1; end <= max; ++end){
        const cur = points[end % count];
        if (cur.skip || cur.stop) {
            if (!prev.skip) {
                loop = false;
                result.push({
                    start: start % count,
                    end: (end - 1) % count,
                    loop
                });
                start = last = cur.stop ? end : null;
            }
        } else {
            last = end;
            if (prev.skip) {
                start = end;
            }
        }
        prev = cur;
    }
    if (last !== null) {
        result.push({
            start: start % count,
            end: last % count,
            loop
        });
    }
    return result;
}
 function _computeSegments(line, segmentOptions) {
    const points = line.points;
    const spanGaps = line.options.spanGaps;
    const count = points.length;
    if (!count) {
        return [];
    }
    const loop = !!line._loop;
    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);
    if (spanGaps === true) {
        return splitByStyles(line, [
            {
                start,
                end,
                loop
            }
        ], points, segmentOptions);
    }
    const max = end < start ? end + count : end;
    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;
    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);
}
 function splitByStyles(line, segments, points, segmentOptions) {
    if (!segmentOptions || !segmentOptions.setContext || !points) {
        return segments;
    }
    return doSplitByStyles(line, segments, points, segmentOptions);
}
 function doSplitByStyles(line, segments, points, segmentOptions) {
    const chartContext = line._chart.getContext();
    const baseStyle = readStyle(line.options);
    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;
    const count = points.length;
    const result = [];
    let prevStyle = baseStyle;
    let start = segments[0].start;
    let i = start;
    function addStyle(s, e, l, st) {
        const dir = spanGaps ? -1 : 1;
        if (s === e) {
            return;
        }
        s += count;
        while(points[s % count].skip){
            s -= dir;
        }
        while(points[e % count].skip){
            e += dir;
        }
        if (s % count !== e % count) {
            result.push({
                start: s % count,
                end: e % count,
                loop: l,
                style: st
            });
            prevStyle = st;
            start = e % count;
        }
    }
    for (const segment of segments){
        start = spanGaps ? start : segment.start;
        let prev = points[start % count];
        let style;
        for(i = start + 1; i <= segment.end; i++){
            const pt = points[i % count];
            style = readStyle(segmentOptions.setContext(createContext(chartContext, {
                type: 'segment',
                p0: prev,
                p1: pt,
                p0DataIndex: (i - 1) % count,
                p1DataIndex: i % count,
                datasetIndex
            })));
            if (styleChanged(style, prevStyle)) {
                addStyle(start, i - 1, segment.loop, prevStyle);
            }
            prev = pt;
            prevStyle = style;
        }
        if (start < i - 1) {
            addStyle(start, i - 1, segment.loop, prevStyle);
        }
    }
    return result;
}
function readStyle(options) {
    return {
        backgroundColor: options.backgroundColor,
        borderCapStyle: options.borderCapStyle,
        borderDash: options.borderDash,
        borderDashOffset: options.borderDashOffset,
        borderJoinStyle: options.borderJoinStyle,
        borderWidth: options.borderWidth,
        borderColor: options.borderColor
    };
}
function styleChanged(style, prevStyle) {
    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);
}


//# sourceMappingURL=helpers.segment.js.map


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rreStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rreStore */ "./src/rreStore.ts");
/* harmony import */ var _queryTemplate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queryTemplate */ "./src/queryTemplate.ts");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state */ "./src/state.ts");
/* harmony import */ var _resultAggregator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resultAggregator */ "./src/resultAggregator.ts");
/* harmony import */ var _elastic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./elastic */ "./src/elastic.ts");
/* harmony import */ var _documentChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./documentChart */ "./src/documentChart.ts");
/* harmony import */ var _scorer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scorer */ "./src/scorer.ts");
/* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! chart.js/auto */ "./node_modules/chart.js/auto/auto.js");
/* harmony import */ var simple_datatables__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! simple-datatables */ "./node_modules/simple-datatables/dist/module.js");
/* harmony import */ var _assets_images_decay_2d_png__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./assets/images/decay_2d.png */ "./src/assets/images/decay_2d.png");
/* harmony import */ var _assets_images_graphic_equalizer_png__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./assets/images/graphic_equalizer.png */ "./src/assets/images/graphic_equalizer.png");
/* harmony import */ var _assets_images_icons8_globe_32_png__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./assets/images/icons8-globe-32.png */ "./src/assets/images/icons8-globe-32.png");
/* harmony import */ var _datatables_css__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./datatables.css */ "./src/datatables.css");













const rreStore1 = new _rreStore__WEBPACK_IMPORTED_MODULE_0__.rreStore();
const scorer = new _scorer__WEBPACK_IMPORTED_MODULE_6__.ScorerForNdcg();
const aggregationColumnsControl = [
    { label: "Ctrl_DA", documentSource: "hudx_dr", agg: "avg" }
];
const aggregationColumnsExperimentA = [
    { label: "ExpA_DA", documentSource: "hudx_dr", agg: "avg" }
];
const aggregationColumnsExperimentB = [
    { label: "ExpB_DA", documentSource: "hudx_dr", agg: "avg" }
];
const aggregationColumnsMerged = [
    { label: "Ctrl_DA", documentSource: "hudx_dr", agg: "avg" },
    { label: "ExpA_DA", documentSource: "hudx_dr", agg: "avg" },
    { label: "ExpB_DA", documentSource: "hudx_dr", agg: "avg" }
];
//{ label: "Avg Score",         documentSource: "_score",  agg: "avg" },
//{ label: "Min Score",         documentSource: "_score",  agg: "min" },
//{ label: "Max Score",         documentSource: "_score",  agg: "max" },
//{ label: "Avg Document Date", resultSet: "1", documentSource: "hudx_dr", agg: "avg" },
//{ label: "Avg Document Date", documentSource: "documentDate", agg: "avg" },
//{ label: "Ctrl_Days_Avg",     resultSet: "Control",     documentSource: "hudx_dr", agg: "avg" },
//{ label: "Exp A Avg Doc Date", resultSet: "3", documentSource: "hudx_dr", agg: "avg" },
//{ label: "Min Document Date", documentSource: "hudx_dr", agg: "min" },
//{ label: "Max Document Date", documentSource: "hudx_dr", agg: "max" }
//TODO: ndcg for each query, plus average of rating averages, age of documents, ndcg
const tableHeadersControl = ["Query", ...aggregationColumnsControl.map((col) => col['label'])];
const tableHeadersExperimentA = ["Query", ...aggregationColumnsExperimentA.map((col) => col['label'])];
const tableHeadersExperimentB = ["Query", ...aggregationColumnsExperimentB.map((col) => col['label'])];
const tableHeadersMerged = [
    "Query",
    "C_Hits",
    "A_Hits",
    "B_Hits",
    ...aggregationColumnsControl.map((col) => col['label']),
    ...aggregationColumnsExperimentA.map((col) => col['label']),
    ...aggregationColumnsExperimentB.map((col) => col['label']),
    // "C_Rating1",
    // "A_Rating1",
    // "B_Rating1",
    // "C_Rating2",
    // "A_Rating2",
    // "B_Rating2",
    "C_nDCG",
    "A_nDCG",
    "B_nDCG"
];
let lastMaybeKeywords = "";
let positionsControl = {};
let positionsExperimentA = {};
let positionsExperimentB = {};
(() => {
    const button1_wrapper = document.getElementById('button1_wrapper');
    const working = document.getElementById('working');
    const loading = document.getElementById('loading');
    const decaySliderElementA = document.getElementById('decay-slider-a');
    const decaySliderOutputElementA = document.getElementById('decay-slider-value-a');
    const weightSliderElementA = document.getElementById('weight-slider-a');
    const weightSliderOutputElementA = document.getElementById('weight-slider-value-a');
    const scaleSliderElementA = document.getElementById('scale-slider-a');
    const scaleSliderOutputElementA = document.getElementById('scale-slider-value-a');
    const offsetSliderElementA = document.getElementById('offset-slider-a');
    const offsetSliderOutputElementA = document.getElementById('offset-slider-value-a');
    const decaySliderElementB = document.getElementById('decay-slider-b');
    const decaySliderOutputElementB = document.getElementById('decay-slider-value-b');
    const weightSliderElementB = document.getElementById('weight-slider-b');
    const weightSliderOutputElementB = document.getElementById('weight-slider-value-b');
    const scaleSliderElementB = document.getElementById('scale-slider-b');
    const scaleSliderOutputElementB = document.getElementById('scale-slider-value-b');
    const offsetSliderElementB = document.getElementById('offset-slider-b');
    const offsetSliderOutputElementB = document.getElementById('offset-slider-value-b');
    const keywordListAreaElement = document.getElementById("keywordListArea");
    const keywordListApplyButtonElement = document.getElementById("keywordListApply");
    keywordListApplyButtonElement.onclick = setKeywordListFromPane;
    const queryTemplateAreaElementControl = document.getElementById("queryTemplateAreaControl");
    const queryTemplateApplyButtonElementControl = document.getElementById("queryTemplateApplyControl");
    queryTemplateApplyButtonElementControl.onclick = setQueryTemplateFromPaneControl;
    const queryTemplateAreaElementExperimentA = document.getElementById("queryTemplateAreaExperimentA");
    const queryTemplateApplyButtonElementExperimentA = document.getElementById("queryTemplateApplyExperimentA");
    queryTemplateApplyButtonElementExperimentA.onclick = setQueryTemplateFromPaneExperimentA;
    const queryTemplateAreaElementExperimentB = document.getElementById("queryTemplateAreaExperimentB");
    const queryTemplateApplyButtonElementExperimentB = document.getElementById("queryTemplateApplyExperimentB");
    queryTemplateApplyButtonElementExperimentB.onclick = setQueryTemplateFromPaneExperimentB;
    const searchSummaryElementControl = document.getElementById('search-summary-control');
    const searchSummaryElementExperimentA = document.getElementById('search-summary-experiment-a');
    const searchSummaryElementExperimentB = document.getElementById('search-summary-experiment-b');
    const resultListElementControl = document.getElementById('result-doc-list-control');
    const resultListElementExperimentA = document.getElementById('result-doc-list-experiment-a');
    const resultListElementExperimentB = document.getElementById('result-doc-list-experiment-b');
    // const testingTextAreaElementControl       = document.getElementById("testingTextAreaControl") as HTMLTextAreaElement;
    const resultVizElement = document.getElementById('result-visualization');
    let dataTableMerged = new simple_datatables__WEBPACK_IMPORTED_MODULE_8__.DataTable("#queriesTableMerged", {
        searchable: false,
        paging: false
    });
    let theKeywords = [];
    let cannedKeywords = [
        "vawa",
        "lsa",
        "consolidated plan",
        "cdbg-cv",
        "transitional housing",
        "tbra",
        "covid",
        "ura",
        "system performance measures",
        "point in time",
        "housing counseling",
        "continuum of care",
        "section 8",
        "ross",
        "program income",
        "fss",
        "ask a question",
        "pit",
        "cdbg-dr",
        "hcs",
        "ahar",
        "nsp",
        "aaq",
        "building home",
        "income calculator",
        "wiser",
        "coordinated entry",
        "basically cdbg",
        "rapid rehousing",
        "heros",
        "fair housing",
        "income limits",
        "esnaps",
        "hopwa",
        "coc",
        "esg",
        "caper",
        "environmental review",
        "hmis",
        "home",
        "idis",
        "cdbg",
        "section 3",
        "homeless",
        "sage",
        "drgr",
        "environmental",
        "chdo",
        "homeless definition",
        "homelessness",
        "davis bacon",
        "housing first",
        "procurement",
        "application",
        "forms",
        "housing",
        "apr",
        "nofa",
        "monitoring",
        "permanent supportive housing",
        "lead the way",
        "financial management",
        "rad",
        "grants",
        "match",
        "apply",
        "cpd",
        "2 cfr 200",
        "fmr",
        "cares act",
        "annual action plan",
        "cdbg income limits",
        "eloccs",
        "e-snaps",
        "lead based paint",
        "relocation",
        "noise",
        "9902",
        "home arp",
        "cpd notices",
        "home program",
        "giw",
        "section 108",
        "domestic violence",
        "utility allowance",
        "idis login",
        "lead",
        "rental assistance",
        "lihtc",
        "hmis data standards",
        "hqs",
        "cdbg idis",
        "htf",
        "faq",
        "home income limits",
        "hic",
        "esg-cv",
        "yhdp",
        "calculator",
        "affh",
        "income",
        "happy fair housing month"
    ];
    let searchUrl = "http://localhost:4004/fess.search/_search";
    let queryTemplateFromQuepid = "";
    const stateManager = new _state__WEBPACK_IMPORTED_MODULE_2__.StateManager(new _state__WEBPACK_IMPORTED_MODULE_2__.SessionStateStore(), resetState);
    // to reset session state
    stateManager.setState(resetState());
    const start = async () => {
        console.log("start");
        //console.log("rreStore_tests_pass? " + rreStore_tests_pass());
        const result = await parseQueryParamsAndCallQuepid();
        stateManager.setState(resetState()); // we have to reload state again now because things have likely changed with the preceding line's processing
        initializeKeywordListPane();
        initializeQueryTemplatePane();
        //initializeEnginePane();
        initializeSliders();
        updateResults();
    };
    function resetState() {
        let initial_experimentA_decay = 0.75;
        let initial_experimentA_weight = 2.0;
        let initial_experimentA_scale = 600;
        let initial_experimentA_offset = 180;
        let initial_experimentB_decay = 0.80;
        let initial_experimentB_weight = 2.0;
        let initial_experimentB_scale = 600;
        let initial_experimentB_offset = 180;
        return {
            url: loadUrl(),
            queryTemplateControl: loadQueryTemplateControl(),
            decayA: initial_experimentA_decay,
            weightA: initial_experimentA_weight,
            scaleA: initial_experimentA_scale,
            offsetA: initial_experimentA_offset,
            decayB: initial_experimentB_decay,
            weightB: initial_experimentB_weight,
            scaleB: initial_experimentB_scale,
            offsetB: initial_experimentB_offset,
            queryTemplateExperimentA: loadQueryTemplateExperimentA(initial_experimentA_decay, initial_experimentA_weight, initial_experimentA_scale, initial_experimentA_offset),
            queryTemplateExperimentB: loadQueryTemplateExperimentB(initial_experimentB_decay, initial_experimentB_weight, initial_experimentB_scale, initial_experimentB_offset),
            keywords: loadKeywords(),
            expanded: []
        };
    }
    // these loadXYZ() methods could be Quepid integration hooks.
    function loadUrl() {
        //return "http://localhost:9207/aila_20230130/_search";
        return searchUrl;
    }
    function loadQueryTemplateControl() {
        return new _queryTemplate__WEBPACK_IMPORTED_MODULE_1__.FixedQuerySource().loadQueryTemplateControl(queryTemplateFromQuepid);
    }
    function loadQueryTemplateExperimentA(decay, weight, scale, offset) {
        return new _queryTemplate__WEBPACK_IMPORTED_MODULE_1__.FixedQuerySource().loadQueryTemplateExperimentA(queryTemplateFromQuepid, decay, weight, scale, offset);
    }
    function loadQueryTemplateExperimentB(decay, weight, scale, offset) {
        return new _queryTemplate__WEBPACK_IMPORTED_MODULE_1__.FixedQuerySource().loadQueryTemplateExperimentB(queryTemplateFromQuepid, decay, weight, scale, offset);
    }
    function loadKeywords() {
        // let rreStore1 = new rreStore();
        //TODO: get the keywords list from rreStore instead of them being a hardcoded list here.
        if (theKeywords.length >= 1) {
            setLastMaybeKeywords(theKeywords[0]);
        }
        return theKeywords;
    }
    function initializeKeywordListPane() {
        keywordListAreaElement.value = stateManager.getState().keywords.join("\n");
    }
    function setKeywordListFromPane() {
        stateManager.setQueries(keywordListAreaElement.value.split("\n").map((s) => s.trim()).filter((s) => s.length > 0));
        keywordListAreaElement.parentElement.classList.toggle('hidden');
        updateResults();
        calculateScoreVsRecencyMatrix();
    }
    function initializeQueryTemplatePane() {
        queryTemplateAreaElementControl.value = JSON.stringify(stateManager.getState().queryTemplateControl, null, 2);
        queryTemplateAreaElementExperimentA.value = JSON.stringify(stateManager.getState().queryTemplateExperimentA, null, 2);
        queryTemplateAreaElementExperimentB.value = JSON.stringify(stateManager.getState().queryTemplateExperimentB, null, 2);
    }
    function setQueryTemplateFromPaneControl() {
        stateManager.setQueryTemplateControl(JSON.parse(queryTemplateAreaElementControl.value));
        queryTemplateAreaElementControl.parentElement.classList.toggle('hidden');
        updateResults();
    }
    function setQueryTemplateFromPaneExperimentA() {
        stateManager.setQueryTemplateExperimentA(JSON.parse(queryTemplateAreaElementExperimentA.value));
        queryTemplateAreaElementExperimentA.parentElement.classList.toggle('hidden');
        updateResults();
    }
    function setQueryTemplateFromPaneExperimentB() {
        stateManager.setQueryTemplateExperimentB(JSON.parse(queryTemplateAreaElementExperimentB.value));
        queryTemplateAreaElementExperimentB.parentElement.classList.toggle('hidden');
        updateResults();
    }
    function initializeSliders() {
        const state = stateManager.getState();
        decaySliderElementA.setAttribute("value", state.decayA.toString());
        decaySliderOutputElementA.textContent = state.decayA.toString();
        decaySliderElementA.onchange = updateSliders;
        weightSliderElementA.setAttribute("value", state.weightA.toString());
        weightSliderOutputElementA.textContent = state.weightA.toString();
        weightSliderElementA.onchange = updateSliders;
        scaleSliderElementA.setAttribute("value", state.scaleA.toString());
        scaleSliderOutputElementA.textContent = state.scaleA.toString() + "d";
        scaleSliderElementA.onchange = updateSliders;
        offsetSliderElementA.setAttribute("value", state.offsetA.toString());
        offsetSliderOutputElementA.textContent = state.offsetA.toString() + "d";
        offsetSliderElementA.onchange = updateSliders;
        decaySliderElementB.setAttribute("value", state.decayB.toString());
        decaySliderOutputElementB.textContent = state.decayB.toString();
        decaySliderElementB.onchange = updateSliders;
        weightSliderElementB.setAttribute("value", state.weightB.toString());
        weightSliderOutputElementB.textContent = state.weightB.toString();
        weightSliderElementB.onchange = updateSliders;
        scaleSliderElementB.setAttribute("value", state.scaleB.toString());
        scaleSliderOutputElementB.textContent = state.scaleB.toString() + "d";
        scaleSliderElementB.onchange = updateSliders;
        offsetSliderElementB.setAttribute("value", state.offsetB.toString());
        offsetSliderOutputElementB.textContent = state.offsetB.toString() + "d";
        offsetSliderElementB.onchange = updateSliders;
        updateSliders();
    }
    function markStartOfWork() {
        button1_wrapper.style.display = "none";
        working.style.display = "block";
        loading.style.display = "none";
    }
    function markEndOfWork() {
        button1_wrapper.style.display = "block";
        working.style.display = "none";
        loading.style.display = "block";
    }
    function getQueryParams(url) {
        // console.log(url);
        if (url.indexOf('?') != -1) {
            const paramArr = url.slice(url.indexOf('?') + 1).split('&');
            // console.log(paramArr);
            let params = {};
            paramArr.map((param) => {
                // console.log(param);
                const [key, val] = param.split('=');
                params[key] = decodeURIComponent(val);
            });
            return params;
        }
        else {
            return {};
        }
    }
    function debug(name, value) {
        console.log("debug() name: " + name);
        console.log("debug() value:");
        console.log(value);
    }
    async function callQuepid(base_url, case_id, try_number) {
        const promise1 = callQuepidCaseApi("1", base_url, case_id, try_number);
        const promise2 = callQuepidCaseTryApi("2", base_url, case_id, try_number);
        const promises = [promise1, promise2];
        return Promise.allSettled(promises).then((results) => {
            results.forEach((result) => {
                if (result.status === "fulfilled") {
                    //debug("result:", result);
                    //debug("result.value:", result.value);
                    //debug("result.value.request_id:", result.value.request_id);
                    if (result.value.request_id === "1") {
                        //console.log(result.value.response.queries);
                        result.value.response.queries.forEach((query) => {
                            theKeywords.push(query["query_text"]);
                        });
                    }
                    else if (result.value.request_id === "2") {
                        searchUrl = result.value.response.search_url;
                        //debug("searchUrl", searchUrl);
                        queryTemplateFromQuepid = result.value.response.query_params;
                        //debug("queryTemplateFromQuepid", queryTemplateFromQuepid);
                    }
                }
            });
            return true;
        });
    }
    async function callQuepidCaseApi(request_id, base_url, case_id, try_number) {
        let url = base_url + "/api/cases/" + case_id.toString();
        return getResponse(request_id, url);
    }
    async function callQuepidCaseTryApi(request_id, base_url, case_id, try_number) {
        let url = base_url + "/api/cases/" + case_id.toString() + "/tries/" + try_number.toString();
        return getResponse(request_id, url);
    }
    async function getResponse(request_id, url) {
        let requestParams = {};
        return fetch(url, requestParams)
            .then((response) => response.json())
            .then((responseJson) => {
            return { request_id: request_id, response: responseJson };
        });
    }
    function base64encode(input) {
        return btoa(input);
    }
    function base64decode(input) {
        return atob(input);
    }
    function parseQueryParamsAndCallQuepid() {
        let queryParams = getQueryParams(window.location.toString());
        let case_id = 0;
        let try_number = 0;
        let quepid_url = "";
        for (const key of Object.keys(queryParams)) {
            //keyValuePairsText += "key:" + key + ",value:" + queryParams[key]+"\n";
            if (key == "quepid_url") {
                quepid_url = base64decode(queryParams[key]);
            }
            else if (key == "case_id") {
                case_id = queryParams[key];
            }
            else if (key == "try_number") {
                try_number = queryParams[key];
            }
        }
        if (Object.keys(queryParams).length > 0) {
            //console.log("Now calling quepid at " + quepid_url + " to get information about case_id " + case_id + " and try_number " + try_number + "...");
            return callQuepid(quepid_url, case_id, try_number);
            // testingTextAreaElementControl.textContent = keyValuePairsText;
        }
        else {
            theKeywords = cannedKeywords;
            return Promise.resolve(true);
        }
    }
    function updateSliders() {
        markStartOfWork();
        stateManager.setDecayA(decaySliderElementA.valueAsNumber);
        stateManager.setWeightA(weightSliderElementA.valueAsNumber);
        stateManager.setScaleA(scaleSliderElementA.valueAsNumber);
        stateManager.setOffsetA(offsetSliderElementA.valueAsNumber);
        stateManager.setDecayB(decaySliderElementB.valueAsNumber);
        stateManager.setWeightB(weightSliderElementB.valueAsNumber);
        stateManager.setScaleB(scaleSliderElementB.valueAsNumber);
        stateManager.setOffsetB(offsetSliderElementB.valueAsNumber);
        const newState = stateManager.getState();
        weightSliderOutputElementA.textContent = newState.weightA.toString();
        decaySliderOutputElementA.textContent = newState.decayA.toString();
        scaleSliderOutputElementA.textContent = newState.scaleA.toString() + "d";
        offsetSliderOutputElementA.textContent = newState.offsetA.toString() + "d";
        weightSliderOutputElementB.textContent = newState.weightB.toString();
        decaySliderOutputElementB.textContent = newState.decayB.toString();
        scaleSliderOutputElementB.textContent = newState.scaleB.toString() + "d";
        offsetSliderOutputElementB.textContent = newState.offsetB.toString() + "d";
        //console.log("rebuilding query template with freshnessDecay:" + newState.freshnessDecayA + ", and weight:"+ newState.weightA + ", scale:" + newState.scaleA + ", offset:" + newState.offsetA);
        let queryTemplateControl = loadQueryTemplateControl();
        let queryTemplateExperimentA = loadQueryTemplateExperimentA(newState.decayA, newState.weightA, newState.scaleA, newState.offsetA);
        let queryTemplateExperimentB = loadQueryTemplateExperimentB(newState.decayB, newState.weightB, newState.scaleB, newState.offsetB);
        stateManager.setQueryTemplateControl(queryTemplateControl);
        stateManager.setQueryTemplateExperimentA(queryTemplateExperimentA);
        stateManager.setQueryTemplateExperimentB(queryTemplateExperimentB);
        queryTemplateAreaElementControl.value = JSON.stringify(stateManager.getState().queryTemplateControl, null, 2);
        queryTemplateAreaElementExperimentA.value = JSON.stringify(stateManager.getState().queryTemplateExperimentA, null, 2);
        queryTemplateAreaElementExperimentB.value = JSON.stringify(stateManager.getState().queryTemplateExperimentB, null, 2);
        updateResults();
        renderDetails(lastMaybeKeywords);
    }
    async function batchPromises(promiseGenerators, batchSize = 5) {
        let results = [];
        while (promiseGenerators.length > 0) {
            const batchResults = await Promise.all(promiseGenerators.splice(0, batchSize).map(f => f()));
            results = [...results, ...batchResults];
        }
        return results;
    }
    function calculateScoreVsRecencyMatrix() {
        // const state = stateManager.getState();
        // /// 0 to 0.04 in steps of 0.0008
        // //const decayValues = [...Array(51)].map((_, i) => i * 0.0008);
        // const decayValues = [...Array(51)].map((_, i) => i * 0.08);
        // const decayValuesAndScores = decayValues.map((decayValue) => {
        //   const elasticSearchesControl = state.keywords.map((keywords: string) => {
        //     const parametersControl = { keywords: keywords };
        //     // let url_to_elasticsearch = state.url;
        //     return () => new ElasticClient(state.url).search(state.queryTemplateControl, parametersControl).then(searchResult => {
        //       const aggregations = aggregateResults(searchResult, aggregationColumns);
        //       return [keywords, searchResult.totalHits, ...aggregations];
        //     });
        //   });
        //   return batchPromises(elasticSearchesControl).then((allResults) => {
        //     const aggregated = transposeToColumns(allResults);
        //     // we're only really interested in the average score and average document age over all keywords for this decay value
        //     return [
        //       decayValue,
        //       aggregateNumeric(aggregated['Avg Score'].filter((n) => n !== null) as number[], "avg"),
        //       aggregateDates(aggregated['Avg Document Date'].filter((n) => n !== null) as Date[], "avg")
        //     ];
        //   })
        // })
        // Promise.all(decayValuesAndScores).then((allDecayValuesAndScores) => {
        //   const recencyScoresVisualizationElement = document.getElementById('result-visualization') as HTMLElement;
        //   recencyScoresVisualizationElement.replaceChildren(render(`<canvas id="score-recency-chart"></canvas>`));
        //   const canvas = document.getElementById('score-recency-chart') as HTMLCanvasElement;
        //   const decayValues = allDecayValuesAndScores.map((res) => res[0]);
        //   // x-axis = average document age in days
        //   const labels = allDecayValuesAndScores.map((res) => daysSince(res[2] as Date));
        //   // y-axis = scores
        //   const values = allDecayValuesAndScores.map((res) => res[1]);
        //   const scatterPlotData = allDecayValuesAndScores.map((res) => {
        //     return {
        //       x: daysSince(res[2] as Date),
        //       y: res[1]
        //     }
        //   })
        //   const tooltipLabel: (context: Record<string, any>) => string = (context: Record<string, any>) => {
        //     const idx = context.dataIndex
        //     return `decay: ${(decayValues[idx] as number).toFixed(6)}, score: ${(values[idx] as number).toFixed(6)}, avg. age in days: ${labels[idx]}`;
        //   }
        //   const data = {
        //     datasets: [{
        //       label: 'Score vs. Age',
        //       data: scatterPlotData,
        //       fillColor: "rgba(220,220,220,0.5)",
        //       strokeColor: "rgba(220,220,220,0.8)",
        //       highlightFill: "rgba(220,220,220,0.75)",
        //       highlightStroke: "rgba(220,220,220,1)",
        //     }]
        //   }
        //   new Chart(
        //       canvas,
        //       {
        //         type: 'scatter',
        //         data: data,
        //         options: {
        //           scales: {
        //             x: {
        //               type: 'linear',
        //               position: 'bottom'
        //             }
        //           },
        //           plugins: {
        //             tooltip: {
        //               callbacks: {
        //                 label: tooltipLabel
        //               }
        //             }
        //           }
        //         }
        //       }
        //   );
        // })
    }
    function updateResults() {
        updateResultsMerged();
    }
    let count = 0;
    async function updateResultsMerged() {
        const state = stateManager.getState();
        const client = new _elastic__WEBPACK_IMPORTED_MODULE_4__.ElasticClient(state.url);
        if (state.keywords.length == 0)
            return;
        const results = state.keywords.map((keywords) => {
            const parametersControl = { keywords: keywords };
            const parametersExperimentA = { keywords: keywords };
            const parametersExperimentB = { keywords: keywords };
            let searchRequestControl = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequest(client, 0, "Control", state.queryTemplateControl, parametersControl, null);
            let searchRequestExperimentA = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequest(client, 1, "ExperimentA", state.queryTemplateExperimentA, parametersExperimentA, null);
            let searchRequestExperimentB = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequest(client, 2, "ExperimentB", state.queryTemplateExperimentB, parametersExperimentB, null);
            let searchRequests = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequests(client);
            searchRequests.add(searchRequestControl);
            searchRequests.add(searchRequestExperimentA);
            searchRequests.add(searchRequestExperimentB);
            let results1 = client.searchMultiple(searchRequests).then((searchResults) => {
                searchResults.results.forEach((searchResult) => {
                    if (searchResult.id == 0) {
                        setSearchResultControl(searchResult);
                        calcAveragesControl(keywords, searchResult);
                        renderResultCountControl(keywords, searchResult.totalHits);
                        renderResultListControl(keywords, searchResult.documents);
                        const aC = (0,_resultAggregator__WEBPACK_IMPORTED_MODULE_3__.aggregateResults)(searchResult, aggregationColumnsControl);
                        saveSearchAggregationsControl(keywords, searchResult.totalHits.toString(), renderDate2(aC));
                        savePositionsControl(keywords, searchResult);
                    }
                    else if (searchResult.id == 1) {
                        setSearchResultExperimentA(searchResult);
                        calcAveragesExperimentA(keywords, searchResult);
                        renderResultCountExperimentA(keywords, searchResult.totalHits);
                        renderResultListExperimentA(keywords, searchResult.documents);
                        const aA = (0,_resultAggregator__WEBPACK_IMPORTED_MODULE_3__.aggregateResults)(searchResult, aggregationColumnsExperimentA);
                        saveSearchAggregationsExperimentA(keywords, searchResult.totalHits.toString(), renderDate2(aA));
                        savePositionsExperimentA(keywords, searchResult);
                    }
                    else if (searchResult.id == 2) {
                        setSearchResultExperimentB(searchResult);
                        calcAveragesExperimentB(keywords, searchResult);
                        renderResultCountExperimentB(keywords, searchResult.totalHits);
                        renderResultListExperimentB(keywords, searchResult.documents);
                        const aB = (0,_resultAggregator__WEBPACK_IMPORTED_MODULE_3__.aggregateResults)(searchResult, aggregationColumnsExperimentB);
                        saveSearchAggregationsExperimentB(keywords, searchResult.totalHits.toString(), renderDate2(aB));
                        savePositionsExperimentB(keywords, searchResult);
                    }
                });
                return [keywords, ...aggregationColumnsMerged];
            });
            return results1;
        });
        Promise.all(results).then((allResults) => {
            updateSummary(searchSummaryElementControl, "Ctrl_DA", tableHeadersControl, getSearchResultControl_Docs());
            updateSummary(searchSummaryElementExperimentA, "ExpA_DA", tableHeadersExperimentA, getSearchResultExperimentA_Docs());
            updateSummary(searchSummaryElementExperimentB, "ExpB_DA", tableHeadersExperimentB, getSearchResultExperimentB_Docs());
            replaceDatatable2(dataTableMerged, "queriesTableMerged", tableHeadersMerged, getAllAgg());
            calculateAverages();
            markEndOfWork();
        });
    }
    var ac = {};
    function saveSearchAggregationsControl(keywords, totalHits, aggregations) {
        ac[keywords] = [totalHits, aggregations];
    }
    var aa = {};
    function saveSearchAggregationsExperimentA(keywords, totalHits, aggregations) {
        aa[keywords] = [totalHits, aggregations];
    }
    var ab = {};
    function saveSearchAggregationsExperimentB(keywords, totalHits, aggregations) {
        ab[keywords] = [totalHits, aggregations];
    }
    var avgDaysC = [];
    function lookupAverageDaysControl(keywords) {
        return avgDaysC[keywords];
    }
    var avgDaysA = [];
    function lookupAverageDaysExperimentA(keywords) {
        return avgDaysA[keywords];
    }
    var avgDaysB = [];
    function lookupAverageDaysExperimentB(keywords) {
        return avgDaysB[keywords];
    }
    var avgRatC1 = [];
    var avgRatC2 = [];
    var ndcgC = [];
    function calcAveragesControl(keywords, sr) {
        avgDaysC[keywords] = calcAverageDays(keywords, sr);
        avgRatC1[keywords] = calcAverageRating1(keywords, sr);
        avgRatC2[keywords] = calcAverageRating2(keywords, sr);
        ndcgC[keywords] = scorer.calcNdcgScore(rreStore1, keywords, sr);
    }
    function saveRatingAtPositionControl(position, rating) {
        let theRating = rating;
        if (!exists(theRating)) {
            theRating = -1;
        }
        if (!exists(positionsControl[position.toString()])) {
            positionsControl[position.toString()] = [];
        }
        positionsControl[position.toString()].push(theRating);
    }
    function saveRatingAtPositionExperimentA(position, rating) {
        let theRating = rating;
        if (!exists(theRating)) {
            theRating = -1;
        }
        if (!exists(positionsExperimentA[position.toString()])) {
            positionsExperimentA[position.toString()] = [];
        }
        positionsExperimentA[position.toString()].push(theRating);
    }
    function saveRatingAtPositionExperimentB(position, rating) {
        let theRating = rating;
        if (!exists(theRating)) {
            theRating = -1;
        }
        if (!exists(positionsExperimentB[position.toString()])) {
            positionsExperimentB[position.toString()] = [];
        }
        positionsExperimentB[position.toString()].push(theRating);
    }
    function lookupAverageRating1Control(keywords) {
        return avgRatC1[keywords];
    }
    function lookupAverageRating2Control(keywords) {
        return avgRatC2[keywords];
    }
    var avgRatA1 = [];
    var avgRatA2 = [];
    var ndcgA = [];
    function calcAveragesExperimentA(keywords, sr) {
        avgDaysA[keywords] = calcAverageDays(keywords, sr);
        avgRatA1[keywords] = calcAverageRating1(keywords, sr);
        avgRatA2[keywords] = calcAverageRating2(keywords, sr);
        ndcgA[keywords] = scorer.calcNdcgScore(rreStore1, keywords, sr);
    }
    function lookupAverageRating1ExperimentA(keywords) {
        return avgRatA1[keywords];
    }
    function lookupAverageRating2ExperimentA(keywords) {
        return avgRatA2[keywords];
    }
    function lookupNdcgControl(keywords) {
        return ndcgC[keywords];
    }
    function lookupNdcgExperimentA(keywords) {
        return ndcgA[keywords];
    }
    function lookupNdcgExperimentB(keywords) {
        return ndcgB[keywords];
    }
    var avgRatB1 = [];
    var avgRatB2 = [];
    var ndcgB = [];
    function calcAveragesExperimentB(keywords, sr) {
        avgDaysB[keywords] = calcAverageDays(keywords, sr);
        avgRatB1[keywords] = calcAverageRating1(keywords, sr);
        avgRatB2[keywords] = calcAverageRating2(keywords, sr);
        ndcgB[keywords] = scorer.calcNdcgScore(rreStore1, keywords, sr);
    }
    function lookupAverageRating1ExperimentB(keywords) {
        return avgRatB1[keywords];
    }
    function lookupAverageRating2ExperimentB(keywords) {
        return avgRatB2[keywords];
    }
    function getAllAgg() {
        let returnValue = [];
        let count = 0;
        Object.keys(ac).forEach((key) => {
            returnValue[count] = [key,
                ac[key][0], aa[key][0], ab[key][0],
                ac[key][1], aa[key][1], ab[key][1],
                // avgRatC1[key], avgRatA1[key], avgRatB1[key],
                // avgRatC2[key], avgRatA2[key], avgRatB2[key],
                ndcgC[key], ndcgA[key], ndcgB[key]];
            count++;
        });
        return returnValue;
    }
    function calculateAverages() {
        let keywords = stateManager.getState().keywords;
        let cFA1_value = 0;
        let cFA2_value = 0;
        let expAFA1_value = 0;
        let expAFA2_value = 0;
        let expBFA1_value = 0;
        let expBFA2_value = 0;
        let total = 0;
        total = 0;
        keywords.forEach((keyword) => {
            total = total + lookupAverageDaysControl(keyword);
        });
        cFA1_value = roundToTwoDecimals(total / keywords.length);
        total = 0;
        keywords.forEach((keyword) => {
            total = total + lookupAverageDaysExperimentA(keyword);
        });
        expAFA1_value = roundToTwoDecimals(total / keywords.length);
        total = 0;
        keywords.forEach((keyword) => {
            total = total + lookupAverageDaysExperimentB(keyword);
        });
        expBFA1_value = roundToTwoDecimals(total / keywords.length);
        total = 0;
        keywords.forEach((keyword) => {
            total = total + lookupNdcgControl(keyword);
        });
        cFA2_value = roundToTwoDecimals(total / keywords.length);
        total = 0;
        keywords.forEach((keyword) => {
            total = total + lookupNdcgExperimentA(keyword);
        });
        expAFA2_value = roundToTwoDecimals(total / keywords.length);
        total = 0;
        keywords.forEach((keyword) => {
            total = total + lookupNdcgExperimentB(keyword);
        });
        expBFA2_value = roundToTwoDecimals(total / keywords.length);
        let cFA1 = document.getElementById("controlFA1");
        if (cFA1) {
            cFA1.textContent = cFA1_value.toString();
        }
        let cFA2 = document.getElementById("controlFA2");
        if (cFA2) {
            cFA2.textContent = cFA2_value.toString();
        }
        let expAFA1 = document.getElementById("experimentAFA1");
        if (expAFA1) {
            expAFA1.textContent = expAFA1_value.toString();
        }
        let expAFA2 = document.getElementById("experimentAFA2");
        if (expAFA2) {
            expAFA2.textContent = expAFA2_value.toString();
        }
        let expBFA1 = document.getElementById("experimentBFA1");
        if (expBFA1) {
            expBFA1.textContent = expBFA1_value.toString();
        }
        let expBFA2 = document.getElementById("experimentBFA2");
        if (expBFA2) {
            expBFA2.textContent = expBFA2_value.toString();
        }
    }
    function updateSummary(summaryElement1, daysAvgColumn, tableHeaders, allResults) {
        const columns = transposeToColumns(tableHeaders, allResults);
        //const avgAvgScore = aggregateNumeric(columns['Avg Score'].filter((n) => n !== null) as number[], "avg");
        //const avgDocumentDate = aggregateDates(columns['Avg Document Date'].filter((n) => n !== null) as Date[], "avg");
        const avgDocumentDate = (0,_resultAggregator__WEBPACK_IMPORTED_MODULE_3__.aggregateDates)(columns[daysAvgColumn].filter((n) => n !== null), "avg");
        let summary = `${stateManager.getState().keywords.length} queries`;
        //ndcg?? not score
        // console.log(summary);
        // if (avgAvgScore != null) {
        //   summary += `, avg score: ${avgAvgScore}`;
        // }
        if (avgDocumentDate != null) {
            summary += `, avg document date: ${renderDate(avgDocumentDate)}`;
        }
        summaryElement1.innerText = summary;
    }
    function transposeToColumns(tableHeaders, allResults) {
        return tableHeaders.reduce((columns, columnName, colIdx) => {
            columns[columnName] = allResults.map((row) => row[colIdx]);
            return columns;
        }, {});
    }
    function setLastMaybeKeywords(maybeKeywords) {
        lastMaybeKeywords = maybeKeywords;
    }
    function replaceDatatable(dataTable, tableName, tableHeaders, allResults) {
        dataTable.destroy();
        dataTable = new simple_datatables__WEBPACK_IMPORTED_MODULE_8__.DataTable("#" + tableName, {
            data: {
                headings: tableHeaders,
                data: renderCellValues(allResults)
            },
            searchable: false,
            paging: false,
            rowRender: (rowValue, tr, _index) => {
                // add the current keyword as data attribute of the table row
                if (!tr.attributes) {
                    tr.attributes = {};
                }
                tr.attributes["data-name"] = rowValue[0].data[0].data;
                let returnValue = tr;
                return returnValue;
            }
        });
        for (let i = 0; i < dataTable.dom.rows.length; i++) {
            dataTable.dom.rows[i].addEventListener("click", e => {
                //console.log(((e.target as HTMLElement).parentElement as HTMLElement).dataset.name)
                const maybeKeywords = e.target.parentElement.dataset.name;
                if (maybeKeywords) {
                    setLastMaybeKeywords(maybeKeywords);
                    renderDetails(maybeKeywords);
                }
            });
        }
    }
    function clearDiv(divId) {
        let someDiv = document.getElementById(divId);
        if (exists(someDiv) && someDiv) {
            someDiv.innerHTML = "<table id=\"queriesTableMerged\"></table>";
        }
    }
    function replaceDatatable2(dataTable, tableName, tableHeaders, allResults) {
        dataTable.destroy();
        clearDiv("myDataTableDiv"); //fixes the multiple nesting div issue we saw before
        dataTable = new simple_datatables__WEBPACK_IMPORTED_MODULE_8__.DataTable("#" + tableName, {
            data: {
                headings: tableHeaders,
                data: renderCellValues2(allResults)
            },
            searchable: false,
            paging: false,
            rowRender: (rowValue, tr, _index) => {
                // add the current keyword as data attribute of the table row
                if (!tr.attributes) {
                    tr.attributes = {};
                }
                tr.attributes["data-name"] = rowValue[0].data[0].data;
                let returnValue = tr;
                return returnValue;
            }
        });
        for (let i = 0; i < dataTable.dom.rows.length; i++) {
            dataTable.dom.rows[i].addEventListener("click", e => {
                //console.log(((e.target as HTMLElement).parentElement as HTMLElement).dataset.name)
                const maybeKeywords = e.target.parentElement.dataset.name;
                if (maybeKeywords) {
                    setLastMaybeKeywords(maybeKeywords);
                    renderDetails(maybeKeywords);
                }
            });
        }
    }
    function renderCellValues(values) {
        return values.map((row) => row.map(renderCellValue));
    }
    function renderCellValues2(values) {
        return values.map((row) => row.map(renderCellValue));
    }
    function renderCellValue(value) {
        if (value == null) {
            return "";
        }
        else if (value instanceof Date) {
            return renderDate(value);
        }
        else {
            return value;
        }
    }
    function renderDate(date) {
        const year = date.getFullYear();
        const month = date.getMonth() + 1;
        const day = date.getDate();
        //return `${year}-${String(month).padStart(2, "0")}-${String(day).padStart(2, "0")} (${daysSince(date)} days ago).`
        return `${daysSince(date)}`;
    }
    function renderDate2(date) {
        if (date[0] === null) {
            return "";
        }
        if (date[0] instanceof Date) {
            return renderDate(new Date(date[0].toString()));
        }
        return "";
    }
    function daysSince(date) {
        const diffInMillis = Math.abs(new Date().valueOf() - date.valueOf());
        return Math.ceil(diffInMillis / (24 * 3600 * 1000));
    }
    function renderDetails(keywords) {
        const state = stateManager.getState();
        const parametersControl = { keywords: keywords };
        const parametersExperimentA = { keywords: keywords };
        const parametersExperimentB = { keywords: keywords };
        let client = new _elastic__WEBPACK_IMPORTED_MODULE_4__.ElasticClient(state.url);
        let searchRequests = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequests(client);
        let searchRequestControl = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequest(client, 0, "Control", state.queryTemplateControl, parametersControl, null);
        let searchRequestExperimentA = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequest(client, 1, "ExperimentA", state.queryTemplateExperimentA, parametersExperimentA, null);
        let searchRequestExperimentB = new _elastic__WEBPACK_IMPORTED_MODULE_4__.SearchRequest(client, 2, "ExperimentB", state.queryTemplateExperimentB, parametersExperimentB, null);
        searchRequests.add(searchRequestControl);
        searchRequests.add(searchRequestExperimentA);
        searchRequests.add(searchRequestExperimentB);
        client.searchMultiple(searchRequests).then((searchResults) => {
            searchResults.results.forEach((searchResult) => {
                if (searchResult.id == 0) {
                    setSearchResultControl(searchResult);
                    calcAveragesControl(keywords, searchResult);
                    renderResultCountControl(keywords, searchResult.totalHits);
                    renderResultListControl(keywords, searchResult.documents);
                }
                else if (searchResult.id == 1) {
                    setSearchResultExperimentA(searchResult);
                    calcAveragesExperimentA(keywords, searchResult);
                    renderResultCountExperimentA(keywords, searchResult.totalHits);
                    renderResultListExperimentA(keywords, searchResult.documents);
                }
                else if (searchResult.id == 2) {
                    setSearchResultExperimentB(searchResult);
                    calcAveragesExperimentB(keywords, searchResult);
                    renderResultCountExperimentB(keywords, searchResult.totalHits);
                    renderResultListExperimentB(keywords, searchResult.documents);
                }
            });
            resultVizElement.replaceChildren(render(`<canvas id="age-chart"></canvas>`));
            renderAgeCharts(getSearchResultControl_Docs(), getSearchResultExperimentA_Docs(), getSearchResultExperimentB_Docs());
            //renderScoresChart(searchResult.documents);
            //renderDecayFunction(state.freshnessDecay);
        });
    }
    let searchResultControl;
    let searchResultControl_sr;
    function calcAverageRating1(keywords, sr) {
        let sum = 0;
        let count = 0;
        let rating = 0;
        sr.documents.forEach((element) => {
            rating = rreStore1.get_rating_or_zero(keywords, "" + element.url); //cjm
            sum = sum + rating;
            count = count + 1;
        });
        return roundToTwoDecimals(sum / count);
    }
    function calcAverageRating2(keywords, sr) {
        let sum = 0;
        let count = 0;
        let rating = 0;
        sr.documents.forEach((element) => {
            rating = rreStore1.get_rating_or_zero(keywords, "" + element.url); //cjm
            if (rating > 0) {
                sum = sum + rating;
                count = count + 1;
            }
        });
        return roundToTwoDecimals(sum / count);
    }
    function savePositionsControl(keywords, sr) {
        let position = 0;
        let rating = null;
        sr.documents.forEach((element) => {
            position = position + 1;
            rating = rreStore1.get_rating_or_null(keywords, "" + element.url);
            saveRatingAtPositionControl(position, rating);
        });
    }
    function savePositionsExperimentA(keywords, sr) {
        let position = 0;
        let rating = null;
        sr.documents.forEach((element) => {
            position = position + 1;
            rating = rreStore1.get_rating_or_null(keywords, "" + element.url);
            saveRatingAtPositionExperimentA(position, rating);
        });
    }
    function savePositionsExperimentB(keywords, sr) {
        let position = 0;
        let rating = null;
        sr.documents.forEach((element) => {
            position = position + 1;
            rating = rreStore1.get_rating_or_null(keywords, "" + element.url);
            saveRatingAtPositionExperimentB(position, rating);
        });
    }
    function calcAverageDays(keywords, sr) {
        const lastDate = Date.now();
        let dateDiffInDays = 0;
        let dateDiffMillis = 0;
        let documentDate = getOldDateAsNumber();
        let sum = 0;
        let count = 0;
        sr.documents.forEach((element) => {
            documentDate = getOldDateAsNumber();
            if (exists(element.hudx_dr)) {
                documentDate = Date.parse("" + element.hudx_dr);
            }
            dateDiffMillis = lastDate - documentDate;
            dateDiffInDays = Math.round(dateDiffMillis / millisPerDay);
            //Note that multiplying by -1 will flip this so it is "days ago", and to the down and/or to left is in the past
            sum = sum + dateDiffInDays;
            count = count + 1;
        });
        return roundToTwoDecimals(sum / count);
    }
    function roundToTwoDecimals(input) {
        return Math.round((input + Number.EPSILON) * 100) / 100;
    }
    function setSearchResultControl(sr) {
        searchResultControl = sr;
        searchResultControl_sr = sr;
    }
    function getSearchResultControl_Docs() {
        return searchResultControl.documents;
    }
    function getSearchResultControl() {
        return searchResultControl_sr;
    }
    let searchResultExperimentA;
    let searchResultExperimentA_sr;
    function setSearchResultExperimentA(sr) {
        searchResultExperimentA = sr;
        searchResultExperimentA_sr = sr;
    }
    function getSearchResultExperimentA_Docs() {
        return searchResultExperimentA.documents;
    }
    function getSearchResultExperimentA() {
        return searchResultExperimentA_sr;
    }
    let searchResultExperimentB;
    let searchResultExperimentB_sr;
    function setSearchResultExperimentB(sr) {
        searchResultExperimentB = sr;
        searchResultExperimentB_sr = sr;
    }
    function getSearchResultExperimentB_Docs() {
        return searchResultExperimentB.documents;
    }
    function getSearchResultExperimentB() {
        return searchResultExperimentB_sr;
    }
    function renderResultCountControl(keywords, resultCount) {
        // const resultCountFragment = render(`
        //     <span style="font-weight: bold">&quot;${keywords}&quot;</span><br>${clipboard} Hits: ${resultCount}<br>${clipboard} DaysAvg: ${lookupAverageDaysControl(keywords)}<br>${clipboard} Rating1: ${lookupAverageRating1Control(keywords)}<br>${clipboard} Rating2: ${lookupAverageRating2Control(keywords)}<br>${clipboard} nDCG: ${lookupNdcgControl(keywords)}
        // `);
        const resultCountFragment = render(`
        <span style="font-weight: bold">&quot;${keywords}&quot;</span><br>${clipboard} Hits: ${resultCount}<br>${clipboard} DaysAvg: ${lookupAverageDaysControl(keywords)}<br>${clipboard} nDCG: ${lookupNdcgControl(keywords)}
    `);
        searchSummaryElementControl.replaceChildren(resultCountFragment);
    }
    const clipboard = "📋";
    const checkmark = "✅";
    const x_mark = "❌";
    function renderResultCountExperimentA(keywords, resultCount) {
        let mark1 = checkmark; //cheating on hits because they are always equal.
        let mark2 = checkmarkIfBIsLessOrEqualToA(lookupAverageDaysControl(keywords), lookupAverageDaysExperimentA(keywords));
        let mark3 = checkmarkIfBIsEqualToOrMoreThanA(lookupAverageRating1Control(keywords), lookupAverageRating1ExperimentA(keywords));
        let mark4 = checkmarkIfBIsEqualToOrMoreThanA(lookupAverageRating2Control(keywords), lookupAverageRating2ExperimentA(keywords));
        let mark5 = checkmarkIfBIsEqualToOrMoreThanA(lookupNdcgControl(keywords), lookupNdcgExperimentA(keywords));
        // const resultCountFragment = render(`
        //     <span style="font-weight: bold">&quot;${keywords}&quot;</span><br>${mark1} Hits: ${resultCount}<br>${mark2} DaysAvg: ${lookupAverageDaysExperimentA(keywords)}<br>${mark3} Rating1: ${lookupAverageRating1ExperimentA(keywords)}<br>${mark4} Rating2: ${lookupAverageRating2ExperimentA(keywords)}<br>${mark5} nDCG: ${lookupNdcgExperimentA(keywords)}
        // `);
        const resultCountFragment = render(`
        <span style="font-weight: bold">&quot;${keywords}&quot;</span><br>${mark1} Hits: ${resultCount}<br>${mark2} DaysAvg: ${lookupAverageDaysExperimentA(keywords)}<br>${mark5} nDCG: ${lookupNdcgExperimentA(keywords)}
    `);
        searchSummaryElementExperimentA.replaceChildren(resultCountFragment);
    }
    function checkmarkIfBIsLessOrEqualToA(a, b) {
        if (b <= a)
            return checkmark;
        return x_mark;
    }
    function checkmarkIfBIsEqualToOrMoreThanA(a, b) {
        if (b >= a)
            return checkmark;
        return x_mark;
    }
    function renderResultCountExperimentB(keywords, resultCount) {
        let mark1 = checkmark; //cheating on hits because they are always equal right now.
        let mark2 = checkmarkIfBIsLessOrEqualToA(lookupAverageDaysControl(keywords), lookupAverageDaysExperimentB(keywords));
        let mark3 = checkmarkIfBIsEqualToOrMoreThanA(lookupAverageRating1Control(keywords), lookupAverageRating1ExperimentB(keywords));
        let mark4 = checkmarkIfBIsEqualToOrMoreThanA(lookupAverageRating2Control(keywords), lookupAverageRating2ExperimentB(keywords));
        let mark5 = checkmarkIfBIsEqualToOrMoreThanA(lookupNdcgControl(keywords), lookupNdcgExperimentB(keywords));
        // const resultCountFragment = render(`
        //     <span style="font-weight: bold">&quot;${keywords}&quot;</span><br>${mark1} Hits: ${resultCount}<br>${mark2} DaysAvg: ${lookupAverageDaysExperimentB(keywords)}<br>${mark3} Rating1: ${lookupAverageRating1ExperimentB(keywords)}<br>${mark4} Rating2: ${lookupAverageRating2ExperimentB(keywords)}<br>${mark5} nDCG: ${lookupNdcgExperimentB(keywords)}
        // `);
        const resultCountFragment = render(`
        <span style="font-weight: bold">&quot;${keywords}&quot;</span><br>${mark1} Hits: ${resultCount}<br>${mark2} DaysAvg: ${lookupAverageDaysExperimentB(keywords)}<br>${mark5} nDCG: ${lookupNdcgExperimentB(keywords)}
    `);
        searchSummaryElementExperimentB.replaceChildren(resultCountFragment);
    }
    function renderResultListControl(keywords, documents) {
        const resultsFragment = new DocumentFragment();
        documents.forEach((document, index) => {
            document && resultsFragment.append(renderListItem(index, document, keywords));
        });
        resultListElementControl.replaceChildren(resultsFragment);
    }
    function renderResultListExperimentA(keywords, documents) {
        const resultsFragment = new DocumentFragment();
        documents.forEach((document, index) => {
            document && resultsFragment.append(renderListItem(index, document, keywords));
        });
        resultListElementExperimentA.replaceChildren(resultsFragment);
    }
    function renderResultListExperimentB(keywords, documents) {
        const resultsFragment = new DocumentFragment();
        documents.forEach((document, index) => {
            document && resultsFragment.append(renderListItem(index, document, keywords));
        });
        resultListElementExperimentB.replaceChildren(resultsFragment);
    }
    function exists(value) {
        return value != null && value !== null && value !== undefined;
    }
    function not_null(value) {
        return value != null && value !== null;
    }
    function renderListItem(index, document, keywords) {
        // <div style="padding-left: 1em">documentId: ${document._id.substring(1,15)}...</div>
        let dateRendered = "";
        if (document.hudx_dr == null || document.hudx_dr === null || document.hudx_dr === undefined) {
            dateRendered = '<span style="color:red;">undefined</span>';
        }
        else {
            dateRendered = '<span style="color:green;">' + document.hudx_dr.toString().substring(0, 15) + '</span>';
        }
        let ratingRendered = "";
        let ratingColor = "";
        //To get these colors, I started with the same colors that Quepid uses,
        // and then lightened them all by the same percentage so they are not so bright and easier to read black text on.
        if (exists(rreStore1)) {
            let rating = rreStore1.get_rating(keywords, document.url);
            if (!exists(rating)) {
                ratingColor = "#ebebeb";
                ratingRendered = '<span style="color:red;">undefined</span>';
            }
            if (rating == 0) {
                ratingRendered = '<span style="color:green;">' + rating + '</span>';
                ratingColor = "#ff9999";
            }
            if (rating == 1) {
                ratingRendered = '<span style="color:green;">' + rating + '</span>';
                ratingColor = "#ffdd99";
            }
            if (rating == 2) {
                //good
                ratingRendered = '<span style="color:green;">' + rating + '</span>';
                ratingColor = "#ddff99";
            }
            if (rating == 3) {
                //perfect
                ratingRendered = '<span style="color:green;">' + rating + '</span>';
                ratingColor = "#99ff99";
            }
        }
        let ct_rendered = "";
        if (document.hudx_ct == null || document.hudx_ct === null || document.hudx_ct === undefined || document.hudx_ct == "undefined") {
            ct_rendered = '<span style="color:red;">undefined</span>';
        }
        else {
            ct_rendered = '<span style="color:green;">' + document.hudx_ct.toString().substring(0, 15) + '</span>';
        }
        if (not_null(document) && not_null(document.title) && not_null(document.url)
            && not_null(dateRendered) && not_null(ratingRendered) && not_null(ratingColor) && not_null(ct_rendered)) {
            return render(`<li style="display:block; margin-top: 0.4em; margin-bottom: 0.4em; background-color: ${ratingColor}">
                <strong style="display:block;">${index + 1}.</strong>
                <strong style="display:block;">${document.title.substring(0, 30)}...</strong>        
                <div style="padding-left: 1em">documentUrl: <a target=_blank href="${document.url}" title="${document.url}">${getLastPartOfUrl(document.url)}</a></div>
                <div style="padding-left: 1em">hudx_dr: ${dateRendered}</div>
                <div style="padding-left: 1em">hudx_ct: ${ct_rendered}</div>
                <div style="padding-left: 1em">rating: ${ratingRendered}</div>
          </li>`);
        }
        else {
            return render(`<li style="display:block; margin-top: 0.4em; margin-bottom: 0.4em; background-color: ${ratingColor}">
                <strong style="display:block;">???</strong>
                <strong style="display:block;">???</strong>
                <div style="padding-left: 1em">documentUrl: ???</a></div>
                <div style="padding-left: 1em">hudx_dr: ???</div>
                <div style="padding-left: 1em">hudx_ct: ???</div>
                <div style="padding-left: 1em">rating: ???</div>
          </li>`);
        }
    }
    function getLastPartOfUrl(url) {
        return "..." + url.substring(url.length - 30, url.length);
    }
    function renderScoresChart(documents) {
        // resultVizElement.replaceChildren(render(`<canvas id="score-chart"></canvas>`));
        // const canvas = document.getElementById('score-chart') as HTMLCanvasElement;
        // chart(canvas, "Scores", documents, (document) => document["_score"], 'rgb(48, 113, 169)');
    }
    const millisPerDay = 24 * 3600 * 1000;
    function renderAgeCharts(documentsControl, documentsExperimentA, documentsExperimentB) {
        resultVizElement.appendChild(render(`<canvas id="age-chart"></canvas>`));
        const canvas = document.getElementById('age-chart');
        const lastDate = Date.now(); //parse("2023-03-08T00:00:00.000Z");
        const dateDiffInDays = (a) => {
            //console.log(a.hudx_dp_v2);
            //const documentDate = Date.parse(a.documentDate);
            let documentDate = getOldDateAsNumber();
            if (a.hudx_dr !== null) {
                documentDate = Date.parse(a.hudx_dr);
            }
            //console.log("documentDate - " + documentDate);
            const dateDiffMillis = lastDate - documentDate;
            //return Math.round(dateDiffMillis / millisPerDay);
            //console.log("number: " + Math.round(dateDiffMillis / millisPerDay));
            //console.log("dateDiffMillis: " + dateDiffMillis);
            //console.log("millisPerDay: " + millisPerDay);
            return -1 * Math.round(dateDiffMillis / millisPerDay); //-1 flips so it is "days ago", and to the down and/or to left is in the past
        };
        var colorControl_gray = 'rgba(135,135,135,0.8)';
        var colorExperimentA_purple = 'rgba(111, 78,124,0.8)';
        var colorExperimentB_orange = 'rgba(255,160, 86,0.8)';
        //console.log(documentsExperimentA);
        (0,_documentChart__WEBPACK_IMPORTED_MODULE_5__.chart2)(canvas, "Age in Days CONTROL", "Age in Days EXPERIMENT A", "Age in Days EXPERIMENT B", documentsControl, documentsExperimentA, documentsExperimentB, dateDiffInDays, dateDiffInDays, dateDiffInDays, colorControl_gray, colorExperimentA_purple, colorExperimentB_orange);
    }
    const oldDate = new Date(2010, 0, 1);
    function getOldDate() {
        return oldDate;
    }
    const oldDateAsNumber = (new Date(2010, 0, 1)).getTime();
    function getOldDateAsNumber() {
        return oldDateAsNumber;
    }
    function renderDecayFunction(decayFactor) {
        resultVizElement.appendChild(render(`<canvas id="decay-chart"></canvas>`));
        const canvas = document.getElementById('decay-chart');
        const x = [...Array(100).keys()];
        const y = x.map((n) => 1 / Math.exp(n * decayFactor));
        const data = {
            labels: x,
            datasets: [{
                    label: "f(x) = 1 / Math.exp(x *" + decayFactor + ")",
                    borderColor: "rgba(75, 192, 192, 1)",
                    data: y,
                    fill: false
                }]
        };
        new chart_js_auto__WEBPACK_IMPORTED_MODULE_7__.Chart(canvas, {
            type: 'line',
            data: data
        });
    }
    function render(s) {
        return document.createRange().createContextualFragment(s);
    }
    function rreStore_tests_pass() {
        let rreStore1 = new _rreStore__WEBPACK_IMPORTED_MODULE_0__.rreStore();
        let test1 = rreStore1.get_id_field() == "url";
        // console.log(test1);
        let test2 = rreStore1.get_index() == "fess.search";
        // console.log(test2);
        let test3 = rreStore1.get_template() == "template.json";
        // console.log(test3);
        let test4 = rreStore1.get_rating("cdbg", "https://www.hudexchange.info/programs/cdbg/") == 3;
        // console.log(test4);
        return test1 && test2 && test3 && test4;
    }
    ;
    function download() {
        let filename = crypto.randomUUID() + ".json";
        let allPositions = {};
        allPositions["Control"] = positionsControl;
        allPositions["ExperimentA"] = positionsExperimentA;
        allPositions["ExperimentB"] = positionsExperimentB;
        let text = JSON.stringify(allPositions);
        let element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
        element.setAttribute('download', filename);
        element.style.display = 'none';
        document.body.appendChild(element);
        element.click();
        document.body.removeChild(element);
    }
    const buttonElement = document.getElementById("button1");
    buttonElement.onclick = download;
    start();
})();
//# sourceMappingURL=data:application/json;base64,
})();

/******/ })()
;
//# sourceMappingURL=bundle.js.map