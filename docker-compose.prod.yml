# Docker Compose file for running Quepid in Production mode.
# Allows you to update your Quepid installation over time.

version: '3'
services:
  mysql:
    container_name: quepid_prod_db
    image: mysql:8.1.0
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - ./volumes/mysql_data:/var/lib/mysql
  redis:
    container_name: quepid_prod_redis
    image: redis:7.2.0-alpine
    ports:
      - 6379:6379
  app:
    container_name: quepid_prod_app
    image: o19s/quepid:latest
    #env_file:   # Use this approach if you would rather manage your environment settings elsewhere.
    #  - .env.prod
    environment:
      - PORT=3000
      - RACK_ENV=production
      - RAILS_ENV=production
      - DATABASE_URL=mysql2://root:password@mysql:3306/quepid
      - REDIS_URL=redis://redis:6379/1
      - FORCE_SSL=false
      - MAX_THREADS=2
      - WEB_CONCURRENCY=2
      - SECRET_KEY_BASE=some_value_needed_here
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - TC_URL=
      - PRIVACY_URL=
      - COOKIES_URL=
      - QUEPID_GA=
      - QUEPID_DOMAIN=https://example.com
      - EMAIL_MARKETING_MODE=false
      - QUEPID_DEFAULT_SCORER=AP@10
      - SIGNUP_ENABLED=true
      - COMMUNAL_SCORERS_ONLY=false
      - EMAIL_PROVIDER=
      - EMAIL_SENDER=
      - QUERY_LIST_SORTABLE=true
      - QUEPID_PROPHET_ANALYTICS=true
    command: "foreman s -f Procfile"
    ports:
    #  - 80:3000 # Map to port 80 for outside users when you are not using Nginx
      - 3000:3000
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
  nginx:
    image: nginx:1.25.2-alpine-slim
    container_name: quepid_nginx
    ports:
      - "443:8443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.ssl/:/etc/nginx/certs
    links:
      - app
